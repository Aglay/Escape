                   # 1 "user/misc.mms"
                   # 1 "<built-in>"
                   # 1 "<command-line>"
                   # 1 "user/misc.mms"
                   %
                   % misc.mms -- tests misc-instructions
                   %
                   
                     LOC #1000
                   
0000000000001000:  Main SETH $2,#1111
 ...000: e0021111
 ...004: e9022222    ORMH $2,#2222
 ...008: ea023333    ORML $2,#3333
 ...00c: eb024444    ORL $2,#4444
                   
                     % test put/get
 ...010: f7010012    PUT rD,#12
 ...014: f7060034    PUT rR,#34
 ...018: f6030002    PUT rH,$2
 ...01c: fe030001    GET $3,rD
 ...020: fe040006    GET $4,rR
 ...024: fe050003    GET $5,rH
                   
                     % prepare compares
 ...028: c4060606    NOR $6,$6,$6 % = -1
 ...02c: 21070600    ADD $7,$6,0
 ...030: ef070001    ANDNL $7,#0001 % = -2
 ...034: e3080001    SET $8,1
 ...038: c4090909    NOR $9,$9,$9
 ...03c: ec098000    ANDNH $9,#8000 % = 2^63 - 1
 ...040: e30a0000    SET $10,0
                   
                     % test cmp(i)
 ...044: 300b0a0a    CMP $11,$10,$10 % 0 :: 0
 ...048: 300c0a06    CMP $12,$10,$6 % 0 :: -1
 ...04c: 300d0a08    CMP $13,$10,$8 % 0 :: 1
 ...050: 300e0607    CMP $14,$6,$7 % -1 :: -2
 ...054: 310f0802    CMP $15,$8,2 % 1 :: 2
 ...058: 30100909    CMP $16,$9,$9 % 2^63-1 :: 2^63-1
 ...05c: 30110709    CMP $17,$7,$9 % -1 :: 2^63-1
 ...060: 30120a09    CMP $18,$10,$9 % 0 :: 2^63-1
 ...064: 30130809    CMP $19,$8,$9 % 1 :: 2^63-1
 ...068: ca140609    ANDN $20,$6,$9 % = -2^63
 ...06c: 30151407    CMP $21,$20,$7 % -2^63 :: -1
 ...070: 31161400    CMP $22,$20,0 % -2^63 :: 0
 ...074: 30171409    CMP $23,$20,$9 % -2^63 :: 2^63-1
                   
                     % test cmpu(i)
 ...078: 32180a0a    CMPU $24,$10,$10 % 0 :: 0
 ...07c: 33190802    CMPU $25,$8,2 % 1 :: 2
 ...080: 321a0a06    CMPU $26,$10,$6 % 0 :: 2^64-1
 ...084: 321b060a    CMPU $27,$6,$10 % 2^64-1 :: 0
 ...088: 321c0606    CMPU $28,$6,$6 % 2^64-1 :: 2^64-1
                   
                     % test neg(i)
 ...08c: 351d0001    NEG $29,0,1 % 0 - 1
 ...090: 351e0102    NEG $30,1,2 % 1 - 2
 ...094: 341f0009    NEG $31,0,$9 % 0 - 2^63-1
                   
 ...098: fe200015    GET $32,rA % ensure that we have no arith-exceptions yet
 ...09c: 34210014    NEG $33,0,$20 % 0 - -2^63 -> overflow
 ...0a0: fe220015    GET $34,rA
 ...0a4: f7150000    PUT rA,0 % clear rA
                   
 ...0a8: 25231401    SUB $35,$20,1 % = -2^63-1
 ...0ac: 34240123    NEG $36,1,$35 % 1 - -2^63-1 -> overflow
 ...0b0: fe250015    GET $37,rA
 ...0b4: f7150000    PUT rA,0 % clear rA
                   
 ...0b8: 21261401    ADD $38,$20,1 % = -2^63+1
 ...0bc: 34270126    NEG $39,1,$38 % 1 - -2^63+1 -> overflow
 ...0c0: fe280015    GET $40,rA
 ...0c4: f7150000    PUT rA,0 % clear rA
                   
                     % test negu(i)
 ...0c8: 37290001    NEGU $41,0,1
 ...0cc: 372a0102    NEGU $42,1,2
 ...0d0: 362b0009    NEGU $43,0,$9 % 0 - 2^63-1
 ...0d4: 362c0014    NEGU $44,0,$20 % 0 - -2^63
 ...0d8: 362d0123    NEGU $45,1,$35 % 1 - -2^63-1
 ...0dc: 362e0126    NEGU $46,1,$38 % 1 - -2^63+1
 ...0e0: fe2f0015    GET $47,rA
                   
                     % special case for GET: $49 will contain the value of rL AFTER $49 has been set -> 50
 ...0e4: fe310014  Foo1 GET $49,rL
                     % the same with rS, if it changes
 ...0e8: f2fexxxx    PUSHJ $254,Test
 ...0ec: 2132fe00    ADD $50,$254,0
                   
 ...0f0: f533fffd    GETA $51,Foo1
 ...0f4: f434xxxx    GETA $52,Foo2
                   
                     % special case of PUT: can't increase rL
 ...0f8: f7140036  Foo2 PUT rL,54
 ...0fc: f7140037    PUT rL,55
 ...100: fe350014    GET $53,rL
 ...104: e3371234    SET $55,#1234
 ...108: f7140037    PUT rL,55
 ...10c: 21363700    ADD $54,$55,0
                   
 ...110: 00000000    TRAP 0
                   
 ...114: fe00000b  Test GET $0,rS % this changes rS and fetches it at the same time -> 60..08
 ...118: f8010000    POP 1,0

Symbol table:
 Foo1 = #00000000000010e4 (2)
 Foo2 = #00000000000010f8 (4)
 Main = #0000000000001000 (1)
 Test = #0000000000001114 (3)
