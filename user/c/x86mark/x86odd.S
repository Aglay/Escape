
#define cpuid
/* 
 * xmark.S -- Generated by xmark.py
 */ 

.data
count:		.int  8
Output:		.int 0; .int 1
.text
.globl ifaddifadd
.align 32
ifaddifadd:	pushl %esi; pushl %edi;
	pushl %ebx; pushl %ebp
	call  .setup
cpuid; rdtsc; movl %eax, count; xorl %eax, %eax; xorl %edx, %edx
	fadd  %st, %st(1)
	fadd  %st, %st(1)
	fadd  %st, %st(1)
	fadd  %st, %st(1)
	fadd  %st, %st(1)
	fadd  %st, %st(1)
	fadd  %st, %st(1)
	fadd  %st, %st(1)
	fadd  %st, %st(1)
	fadd  %st, %st(1)
	fadd  %st, %st(1)
	fadd  %st, %st(1)
	fadd  %st, %st(1)
	fadd  %st, %st(1)
	fadd  %st, %st(1)
	fadd  %st, %st(1)
	fadd  %st, %st(1)
	fadd  %st, %st(1)
	fadd  %st, %st(1)
	fadd  %st, %st(1)
	fadd  %st, %st(1)
	fadd  %st, %st(1)
	fadd  %st, %st(1)
	fadd  %st, %st(1)
	fadd  %st, %st(1)
	fadd  %st, %st(1)
	fadd  %st, %st(1)
	fadd  %st, %st(1)
	fadd  %st, %st(1)
	fadd  %st, %st(1)
	fadd  %st, %st(1)
	fadd  %st, %st(1)
	cpuid; rdtsc; subl count, %eax
	finit
	popl %ebp; popl %ebx; popl %edi; popl %esi; ret
.globl f7addf7add
.align 32
f7addf7add:	pushl %esi; pushl %edi;
	pushl %ebx; pushl %ebp
	call  .setup
cpuid; rdtsc; movl %eax, count; xorl %eax, %eax; xorl %edx, %edx
	fadd  %st(7), %st
	fadd  %st(7), %st
	fadd  %st(7), %st
	fadd  %st(7), %st
	fadd  %st(7), %st
	fadd  %st(7), %st
	fadd  %st(7), %st
	fadd  %st(7), %st
	fadd  %st(7), %st
	fadd  %st(7), %st
	fadd  %st(7), %st
	fadd  %st(7), %st
	fadd  %st(7), %st
	fadd  %st(7), %st
	fadd  %st(7), %st
	fadd  %st(7), %st
	fadd  %st(7), %st
	fadd  %st(7), %st
	fadd  %st(7), %st
	fadd  %st(7), %st
	fadd  %st(7), %st
	fadd  %st(7), %st
	fadd  %st(7), %st
	fadd  %st(7), %st
	fadd  %st(7), %st
	fadd  %st(7), %st
	fadd  %st(7), %st
	fadd  %st(7), %st
	fadd  %st(7), %st
	fadd  %st(7), %st
	fadd  %st(7), %st
	fadd  %st(7), %st
	cpuid; rdtsc; subl count, %eax
	finit
	popl %ebp; popl %ebx; popl %edi; popl %esi; ret
.globl f2addf2add
.align 32
f2addf2add:	pushl %esi; pushl %edi;
	pushl %ebx; pushl %ebp
	call  .setup
cpuid; rdtsc; movl %eax, count; xorl %eax, %eax; xorl %edx, %edx
	fadd  %st, %st(1)
	fadd  %st, %st(2)
	fadd  %st, %st(1)
	fadd  %st, %st(2)
	fadd  %st, %st(1)
	fadd  %st, %st(2)
	fadd  %st, %st(1)
	fadd  %st, %st(2)
	fadd  %st, %st(1)
	fadd  %st, %st(2)
	fadd  %st, %st(1)
	fadd  %st, %st(2)
	fadd  %st, %st(1)
	fadd  %st, %st(2)
	fadd  %st, %st(1)
	fadd  %st, %st(2)
	fadd  %st, %st(1)
	fadd  %st, %st(2)
	fadd  %st, %st(1)
	fadd  %st, %st(2)
	fadd  %st, %st(1)
	fadd  %st, %st(2)
	fadd  %st, %st(1)
	fadd  %st, %st(2)
	fadd  %st, %st(1)
	fadd  %st, %st(2)
	fadd  %st, %st(1)
	fadd  %st, %st(2)
	fadd  %st, %st(1)
	fadd  %st, %st(2)
	fadd  %st, %st(1)
	fadd  %st, %st(2)
	cpuid; rdtsc; subl count, %eax
	finit
	popl %ebp; popl %ebx; popl %edi; popl %esi; ret
.globl ifmulifmul
.align 32
ifmulifmul:	pushl %esi; pushl %edi;
	pushl %ebx; pushl %ebp
	call  .setup
cpuid; rdtsc; movl %eax, count; xorl %eax, %eax; xorl %edx, %edx
	fmul  %st, %st(1)
	fmul  %st, %st(1)
	fmul  %st, %st(1)
	fmul  %st, %st(1)
	fmul  %st, %st(1)
	fmul  %st, %st(1)
	fmul  %st, %st(1)
	fmul  %st, %st(1)
	fmul  %st, %st(1)
	fmul  %st, %st(1)
	fmul  %st, %st(1)
	fmul  %st, %st(1)
	fmul  %st, %st(1)
	fmul  %st, %st(1)
	fmul  %st, %st(1)
	fmul  %st, %st(1)
	fmul  %st, %st(1)
	fmul  %st, %st(1)
	fmul  %st, %st(1)
	fmul  %st, %st(1)
	fmul  %st, %st(1)
	fmul  %st, %st(1)
	fmul  %st, %st(1)
	fmul  %st, %st(1)
	fmul  %st, %st(1)
	fmul  %st, %st(1)
	fmul  %st, %st(1)
	fmul  %st, %st(1)
	fmul  %st, %st(1)
	fmul  %st, %st(1)
	fmul  %st, %st(1)
	fmul  %st, %st(1)
	cpuid; rdtsc; subl count, %eax
	finit
	popl %ebp; popl %ebx; popl %edi; popl %esi; ret

.setup:
	xorl  %ecx,%ecx
	xorl  %edi,%edi
	xorl  %esi,%esi
	xorl  %ebx,%ebx
	xorl  %ebp,%ebp
	finit
	fld1; fld1; fld1; fld1
	fld1; fld1; fld1; fld1
	ret

.mmxsetup:
	xorl  %ecx,%ecx
	xorl  %edi,%edi
	xorl  %esi,%esi
	xorl  %ebx,%ebx
	xorl  %ebp,%ebp
	emms
	ret
