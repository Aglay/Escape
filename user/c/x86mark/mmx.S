
#define cpuid
/* 
 * xmark.S -- Generated by xmark.py
 */ 

.data
count:		.int  8
Output:		.int 0; .int 1
.text
.globl pxorpxor
.align 32
pxorpxor:	pushl %esi; pushl %edi;
	pushl %ebx; pushl %ebp
	call  .mmxsetup
cpuid; rdtsc; movl %eax, count; xorl %eax, %eax; xorl %edx, %edx
	pxor  %mm0, %mm1
	pxor  %mm0, %mm2
	pxor  %mm0, %mm3
	pxor  %mm0, %mm4
	pxor  %mm0, %mm5
	pxor  %mm0, %mm6
	pxor  %mm0, %mm1
	pxor  %mm0, %mm2
	pxor  %mm0, %mm3
	pxor  %mm0, %mm4
	pxor  %mm0, %mm5
	pxor  %mm0, %mm6
	pxor  %mm0, %mm1
	pxor  %mm0, %mm2
	pxor  %mm0, %mm3
	pxor  %mm0, %mm4
	pxor  %mm0, %mm5
	pxor  %mm0, %mm6
	pxor  %mm0, %mm1
	pxor  %mm0, %mm2
	pxor  %mm0, %mm3
	pxor  %mm0, %mm4
	pxor  %mm0, %mm5
	pxor  %mm0, %mm6
	pxor  %mm0, %mm1
	pxor  %mm0, %mm2
	pxor  %mm0, %mm3
	pxor  %mm0, %mm4
	pxor  %mm0, %mm5
	pxor  %mm0, %mm6
	pxor  %mm0, %mm1
	pxor  %mm0, %mm2
	cpuid; rdtsc; subl count, %eax
	emms
	popl %ebp; popl %ebx; popl %edi; popl %esi; ret
.globl paddwpaddw
.align 32
paddwpaddw:	pushl %esi; pushl %edi;
	pushl %ebx; pushl %ebp
	call  .mmxsetup
cpuid; rdtsc; movl %eax, count; xorl %eax, %eax; xorl %edx, %edx
	paddw %mm0, %mm1
	paddw %mm0, %mm2
	paddw %mm0, %mm3
	paddw %mm0, %mm4
	paddw %mm0, %mm5
	paddw %mm0, %mm6
	paddw %mm0, %mm1
	paddw %mm0, %mm2
	paddw %mm0, %mm3
	paddw %mm0, %mm4
	paddw %mm0, %mm5
	paddw %mm0, %mm6
	paddw %mm0, %mm1
	paddw %mm0, %mm2
	paddw %mm0, %mm3
	paddw %mm0, %mm4
	paddw %mm0, %mm5
	paddw %mm0, %mm6
	paddw %mm0, %mm1
	paddw %mm0, %mm2
	paddw %mm0, %mm3
	paddw %mm0, %mm4
	paddw %mm0, %mm5
	paddw %mm0, %mm6
	paddw %mm0, %mm1
	paddw %mm0, %mm2
	paddw %mm0, %mm3
	paddw %mm0, %mm4
	paddw %mm0, %mm5
	paddw %mm0, %mm6
	paddw %mm0, %mm1
	paddw %mm0, %mm2
	cpuid; rdtsc; subl count, %eax
	emms
	popl %ebp; popl %ebx; popl %edi; popl %esi; ret
.globl pmullwpmullw
.align 32
pmullwpmullw:	pushl %esi; pushl %edi;
	pushl %ebx; pushl %ebp
	call  .mmxsetup
cpuid; rdtsc; movl %eax, count; xorl %eax, %eax; xorl %edx, %edx
	pmullw %mm0, %mm1
	pmullw %mm0, %mm2
	pmullw %mm0, %mm3
	pmullw %mm0, %mm4
	pmullw %mm0, %mm5
	pmullw %mm0, %mm6
	pmullw %mm0, %mm1
	pmullw %mm0, %mm2
	pmullw %mm0, %mm3
	pmullw %mm0, %mm4
	pmullw %mm0, %mm5
	pmullw %mm0, %mm6
	pmullw %mm0, %mm1
	pmullw %mm0, %mm2
	pmullw %mm0, %mm3
	pmullw %mm0, %mm4
	pmullw %mm0, %mm5
	pmullw %mm0, %mm6
	pmullw %mm0, %mm1
	pmullw %mm0, %mm2
	pmullw %mm0, %mm3
	pmullw %mm0, %mm4
	pmullw %mm0, %mm5
	pmullw %mm0, %mm6
	pmullw %mm0, %mm1
	pmullw %mm0, %mm2
	pmullw %mm0, %mm3
	pmullw %mm0, %mm4
	pmullw %mm0, %mm5
	pmullw %mm0, %mm6
	pmullw %mm0, %mm1
	pmullw %mm0, %mm2
	cpuid; rdtsc; subl count, %eax
	emms
	popl %ebp; popl %ebx; popl %edi; popl %esi; ret
.globl dpxordpxor
.align 32
dpxordpxor:	pushl %esi; pushl %edi;
	pushl %ebx; pushl %ebp
	call  .mmxsetup
cpuid; rdtsc; movl %eax, count; xorl %eax, %eax; xorl %edx, %edx
	pxor  %mm7, %mm7
	pxor  %mm7, %mm7
	pxor  %mm7, %mm7
	pxor  %mm7, %mm7
	pxor  %mm7, %mm7
	pxor  %mm7, %mm7
	pxor  %mm7, %mm7
	pxor  %mm7, %mm7
	pxor  %mm7, %mm7
	pxor  %mm7, %mm7
	pxor  %mm7, %mm7
	pxor  %mm7, %mm7
	pxor  %mm7, %mm7
	pxor  %mm7, %mm7
	pxor  %mm7, %mm7
	pxor  %mm7, %mm7
	pxor  %mm7, %mm7
	pxor  %mm7, %mm7
	pxor  %mm7, %mm7
	pxor  %mm7, %mm7
	pxor  %mm7, %mm7
	pxor  %mm7, %mm7
	pxor  %mm7, %mm7
	pxor  %mm7, %mm7
	pxor  %mm7, %mm7
	pxor  %mm7, %mm7
	pxor  %mm7, %mm7
	pxor  %mm7, %mm7
	pxor  %mm7, %mm7
	pxor  %mm7, %mm7
	pxor  %mm7, %mm7
	pxor  %mm7, %mm7
	cpuid; rdtsc; subl count, %eax
	emms
	popl %ebp; popl %ebx; popl %edi; popl %esi; ret
.globl dpaddwdpaddw
.align 32
dpaddwdpaddw:	pushl %esi; pushl %edi;
	pushl %ebx; pushl %ebp
	call  .mmxsetup
cpuid; rdtsc; movl %eax, count; xorl %eax, %eax; xorl %edx, %edx
	paddw %mm7, %mm7
	paddw %mm7, %mm7
	paddw %mm7, %mm7
	paddw %mm7, %mm7
	paddw %mm7, %mm7
	paddw %mm7, %mm7
	paddw %mm7, %mm7
	paddw %mm7, %mm7
	paddw %mm7, %mm7
	paddw %mm7, %mm7
	paddw %mm7, %mm7
	paddw %mm7, %mm7
	paddw %mm7, %mm7
	paddw %mm7, %mm7
	paddw %mm7, %mm7
	paddw %mm7, %mm7
	paddw %mm7, %mm7
	paddw %mm7, %mm7
	paddw %mm7, %mm7
	paddw %mm7, %mm7
	paddw %mm7, %mm7
	paddw %mm7, %mm7
	paddw %mm7, %mm7
	paddw %mm7, %mm7
	paddw %mm7, %mm7
	paddw %mm7, %mm7
	paddw %mm7, %mm7
	paddw %mm7, %mm7
	paddw %mm7, %mm7
	paddw %mm7, %mm7
	paddw %mm7, %mm7
	paddw %mm7, %mm7
	cpuid; rdtsc; subl count, %eax
	emms
	popl %ebp; popl %ebx; popl %edi; popl %esi; ret
.globl dpmullwdpmullw
.align 32
dpmullwdpmullw:	pushl %esi; pushl %edi;
	pushl %ebx; pushl %ebp
	call  .mmxsetup
cpuid; rdtsc; movl %eax, count; xorl %eax, %eax; xorl %edx, %edx
	pmullw %mm7, %mm7
	pmullw %mm7, %mm7
	pmullw %mm7, %mm7
	pmullw %mm7, %mm7
	pmullw %mm7, %mm7
	pmullw %mm7, %mm7
	pmullw %mm7, %mm7
	pmullw %mm7, %mm7
	pmullw %mm7, %mm7
	pmullw %mm7, %mm7
	pmullw %mm7, %mm7
	pmullw %mm7, %mm7
	pmullw %mm7, %mm7
	pmullw %mm7, %mm7
	pmullw %mm7, %mm7
	pmullw %mm7, %mm7
	pmullw %mm7, %mm7
	pmullw %mm7, %mm7
	pmullw %mm7, %mm7
	pmullw %mm7, %mm7
	pmullw %mm7, %mm7
	pmullw %mm7, %mm7
	pmullw %mm7, %mm7
	pmullw %mm7, %mm7
	pmullw %mm7, %mm7
	pmullw %mm7, %mm7
	pmullw %mm7, %mm7
	pmullw %mm7, %mm7
	pmullw %mm7, %mm7
	pmullw %mm7, %mm7
	pmullw %mm7, %mm7
	pmullw %mm7, %mm7
	cpuid; rdtsc; subl count, %eax
	emms
	popl %ebp; popl %ebx; popl %edi; popl %esi; ret
.globl pxorpaddw
.align 32
pxorpaddw:	pushl %esi; pushl %edi;
	pushl %ebx; pushl %ebp
	call  .mmxsetup
cpuid; rdtsc; movl %eax, count; xorl %eax, %eax; xorl %edx, %edx
	pxor  %mm0, %mm1
	paddw %mm0, %mm2
	pxor  %mm0, %mm3
	paddw %mm0, %mm4
	pxor  %mm0, %mm5
	paddw %mm0, %mm6
	pxor  %mm0, %mm1
	paddw %mm0, %mm2
	pxor  %mm0, %mm3
	paddw %mm0, %mm4
	pxor  %mm0, %mm5
	paddw %mm0, %mm6
	pxor  %mm0, %mm1
	paddw %mm0, %mm2
	pxor  %mm0, %mm3
	paddw %mm0, %mm4
	pxor  %mm0, %mm5
	paddw %mm0, %mm6
	pxor  %mm0, %mm1
	paddw %mm0, %mm2
	pxor  %mm0, %mm3
	paddw %mm0, %mm4
	pxor  %mm0, %mm5
	paddw %mm0, %mm6
	pxor  %mm0, %mm1
	paddw %mm0, %mm2
	pxor  %mm0, %mm3
	paddw %mm0, %mm4
	pxor  %mm0, %mm5
	paddw %mm0, %mm6
	pxor  %mm0, %mm1
	paddw %mm0, %mm2
	cpuid; rdtsc; subl count, %eax
	emms
	popl %ebp; popl %ebx; popl %edi; popl %esi; ret
.globl pxorpmullw
.align 32
pxorpmullw:	pushl %esi; pushl %edi;
	pushl %ebx; pushl %ebp
	call  .mmxsetup
cpuid; rdtsc; movl %eax, count; xorl %eax, %eax; xorl %edx, %edx
	pxor  %mm0, %mm1
	pmullw %mm0, %mm2
	pxor  %mm0, %mm3
	pmullw %mm0, %mm4
	pxor  %mm0, %mm5
	pmullw %mm0, %mm6
	pxor  %mm0, %mm1
	pmullw %mm0, %mm2
	pxor  %mm0, %mm3
	pmullw %mm0, %mm4
	pxor  %mm0, %mm5
	pmullw %mm0, %mm6
	pxor  %mm0, %mm1
	pmullw %mm0, %mm2
	pxor  %mm0, %mm3
	pmullw %mm0, %mm4
	pxor  %mm0, %mm5
	pmullw %mm0, %mm6
	pxor  %mm0, %mm1
	pmullw %mm0, %mm2
	pxor  %mm0, %mm3
	pmullw %mm0, %mm4
	pxor  %mm0, %mm5
	pmullw %mm0, %mm6
	pxor  %mm0, %mm1
	pmullw %mm0, %mm2
	pxor  %mm0, %mm3
	pmullw %mm0, %mm4
	pxor  %mm0, %mm5
	pmullw %mm0, %mm6
	pxor  %mm0, %mm1
	pmullw %mm0, %mm2
	cpuid; rdtsc; subl count, %eax
	emms
	popl %ebp; popl %ebx; popl %edi; popl %esi; ret
.globl paddwpmullw
.align 32
paddwpmullw:	pushl %esi; pushl %edi;
	pushl %ebx; pushl %ebp
	call  .mmxsetup
cpuid; rdtsc; movl %eax, count; xorl %eax, %eax; xorl %edx, %edx
	paddw %mm0, %mm1
	pmullw %mm0, %mm2
	paddw %mm0, %mm3
	pmullw %mm0, %mm4
	paddw %mm0, %mm5
	pmullw %mm0, %mm6
	paddw %mm0, %mm1
	pmullw %mm0, %mm2
	paddw %mm0, %mm3
	pmullw %mm0, %mm4
	paddw %mm0, %mm5
	pmullw %mm0, %mm6
	paddw %mm0, %mm1
	pmullw %mm0, %mm2
	paddw %mm0, %mm3
	pmullw %mm0, %mm4
	paddw %mm0, %mm5
	pmullw %mm0, %mm6
	paddw %mm0, %mm1
	pmullw %mm0, %mm2
	paddw %mm0, %mm3
	pmullw %mm0, %mm4
	paddw %mm0, %mm5
	pmullw %mm0, %mm6
	paddw %mm0, %mm1
	pmullw %mm0, %mm2
	paddw %mm0, %mm3
	pmullw %mm0, %mm4
	paddw %mm0, %mm5
	pmullw %mm0, %mm6
	paddw %mm0, %mm1
	pmullw %mm0, %mm2
	cpuid; rdtsc; subl count, %eax
	emms
	popl %ebp; popl %ebx; popl %edi; popl %esi; ret

.setup:
	xorl  %ecx,%ecx
	xorl  %edi,%edi
	xorl  %esi,%esi
	xorl  %ebx,%ebx
	xorl  %ebp,%ebp
	finit
	fld1; fld1; fld1; fld1
	fld1; fld1; fld1; fld1
	ret

.mmxsetup:
	xorl  %ecx,%ecx
	xorl  %edi,%edi
	xorl  %esi,%esi
	xorl  %ebx,%ebx
	xorl  %ebp,%ebp
	emms
	ret
