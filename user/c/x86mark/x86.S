
#define cpuid
/* 
 * xmark.S -- Generated by xmark.py
 */ 

.data
count:		.int  8
Output:		.int 0; .int 1
.text
.globl addadd
.align 32
addadd:	pushl %esi; pushl %edi;
	pushl %ebx; pushl %ebp
	call  .setup
cpuid; rdtsc; movl %eax, count; xorl %eax, %eax; xorl %edx, %edx
	addl  %eax, %edi
	addl  %esp, %edx
	addl  %eax, %esi
	addl  %esp, %ebp
	addl  %eax, %edi
	addl  %esp, %edx
	addl  %eax, %esi
	addl  %esp, %ebp
	addl  %eax, %edi
	addl  %esp, %edx
	addl  %eax, %esi
	addl  %esp, %ebp
	addl  %eax, %edi
	addl  %esp, %edx
	addl  %eax, %esi
	addl  %esp, %ebp
	addl  %eax, %edi
	addl  %esp, %edx
	addl  %eax, %esi
	addl  %esp, %ebp
	addl  %eax, %edi
	addl  %esp, %edx
	addl  %eax, %esi
	addl  %esp, %ebp
	addl  %eax, %edi
	addl  %esp, %edx
	addl  %eax, %esi
	addl  %esp, %ebp
	addl  %eax, %edi
	addl  %esp, %edx
	addl  %eax, %esi
	addl  %esp, %ebp
	cpuid; rdtsc; subl count, %eax
	finit
	popl %ebp; popl %ebx; popl %edi; popl %esi; ret
.globl mulmul
.align 32
mulmul:	pushl %esi; pushl %edi;
	pushl %ebx; pushl %ebp
	call  .setup
cpuid; rdtsc; movl %eax, count; xorl %eax, %eax; xorl %edx, %edx
	mull  %ebx
	mull  %ebx
	mull  %ebx
	mull  %ebx
	mull  %ebx
	mull  %ebx
	mull  %ebx
	mull  %ebx
	mull  %ebx
	mull  %ebx
	mull  %ebx
	mull  %ebx
	mull  %ebx
	mull  %ebx
	mull  %ebx
	mull  %ebx
	mull  %ebx
	mull  %ebx
	mull  %ebx
	mull  %ebx
	mull  %ebx
	mull  %ebx
	mull  %ebx
	mull  %ebx
	mull  %ebx
	mull  %ebx
	mull  %ebx
	mull  %ebx
	mull  %ebx
	mull  %ebx
	mull  %ebx
	mull  %ebx
	cpuid; rdtsc; subl count, %eax
	finit
	popl %ebp; popl %ebx; popl %edi; popl %esi; ret
.globl shlshl
.align 32
shlshl:	pushl %esi; pushl %edi;
	pushl %ebx; pushl %ebp
	call  .setup
cpuid; rdtsc; movl %eax, count; xorl %eax, %eax; xorl %edx, %edx
	shll  %esi
	shll  %ebp
	shll  %edi
	shll  %edx
	shll  %esi
	shll  %ebp
	shll  %edi
	shll  %edx
	shll  %esi
	shll  %ebp
	shll  %edi
	shll  %edx
	shll  %esi
	shll  %ebp
	shll  %edi
	shll  %edx
	shll  %esi
	shll  %ebp
	shll  %edi
	shll  %edx
	shll  %esi
	shll  %ebp
	shll  %edi
	shll  %edx
	shll  %esi
	shll  %ebp
	shll  %edi
	shll  %edx
	shll  %esi
	shll  %ebp
	shll  %edi
	shll  %edx
	cpuid; rdtsc; subl count, %eax
	finit
	popl %ebp; popl %ebx; popl %edi; popl %esi; ret
.globl addmul
.align 32
addmul:	pushl %esi; pushl %edi;
	pushl %ebx; pushl %ebp
	call  .setup
cpuid; rdtsc; movl %eax, count; xorl %eax, %eax; xorl %edx, %edx
	addl  %eax, %edi
	mull  %ebx
	addl  %esp, %edx
	mull  %ebx
	addl  %eax, %esi
	mull  %ebx
	addl  %esp, %ebp
	mull  %ebx
	addl  %eax, %edi
	mull  %ebx
	addl  %esp, %edx
	mull  %ebx
	addl  %eax, %esi
	mull  %ebx
	addl  %esp, %ebp
	mull  %ebx
	addl  %eax, %edi
	mull  %ebx
	addl  %esp, %edx
	mull  %ebx
	addl  %eax, %esi
	mull  %ebx
	addl  %esp, %ebp
	mull  %ebx
	addl  %eax, %edi
	mull  %ebx
	addl  %esp, %edx
	mull  %ebx
	addl  %eax, %esi
	mull  %ebx
	addl  %esp, %ebp
	mull  %ebx
	cpuid; rdtsc; subl count, %eax
	finit
	popl %ebp; popl %ebx; popl %edi; popl %esi; ret
.globl addshl
.align 32
addshl:	pushl %esi; pushl %edi;
	pushl %ebx; pushl %ebp
	call  .setup
cpuid; rdtsc; movl %eax, count; xorl %eax, %eax; xorl %edx, %edx
	addl  %eax, %edi
	shll  %esi
	addl  %esp, %edx
	shll  %ebp
	addl  %eax, %esi
	shll  %edi
	addl  %esp, %ebp
	shll  %edx
	addl  %eax, %edi
	shll  %esi
	addl  %esp, %edx
	shll  %ebp
	addl  %eax, %esi
	shll  %edi
	addl  %esp, %ebp
	shll  %edx
	addl  %eax, %edi
	shll  %esi
	addl  %esp, %edx
	shll  %ebp
	addl  %eax, %esi
	shll  %edi
	addl  %esp, %ebp
	shll  %edx
	addl  %eax, %edi
	shll  %esi
	addl  %esp, %edx
	shll  %ebp
	addl  %eax, %esi
	shll  %edi
	addl  %esp, %ebp
	shll  %edx
	cpuid; rdtsc; subl count, %eax
	finit
	popl %ebp; popl %ebx; popl %edi; popl %esi; ret
.globl jmpjmp
.align 32
jmpjmp:	pushl %esi; pushl %edi;
	pushl %ebx; pushl %ebp
	call  .setup
cpuid; rdtsc; movl %eax, count; xorl %eax, %eax; xorl %edx, %edx
	jmp   L001
.align 32
L001:
	jmp   L002
.align 32
L002:
	jmp   L003
.align 32
L003:
	jmp   L004
.align 32
L004:
	jmp   L005
.align 32
L005:
	jmp   L006
.align 32
L006:
	jmp   L007
.align 32
L007:
	jmp   L008
.align 32
L008:
	jmp   L009
.align 32
L009:
	jmp   L010
.align 32
L010:
	jmp   L011
.align 32
L011:
	jmp   L012
.align 32
L012:
	jmp   L013
.align 32
L013:
	jmp   L014
.align 32
L014:
	jmp   L015
.align 32
L015:
	jmp   L016
.align 32
L016:
	jmp   L017
.align 32
L017:
	jmp   L018
.align 32
L018:
	jmp   L019
.align 32
L019:
	jmp   L020
.align 32
L020:
	jmp   L021
.align 32
L021:
	jmp   L022
.align 32
L022:
	jmp   L023
.align 32
L023:
	jmp   L024
.align 32
L024:
	jmp   L025
.align 32
L025:
	jmp   L026
.align 32
L026:
	jmp   L027
.align 32
L027:
	jmp   L028
.align 32
L028:
	jmp   L029
.align 32
L029:
	jmp   L030
.align 32
L030:
	jmp   L031
.align 32
L031:
	jmp   L032
.align 32
L032:
	cpuid; rdtsc; subl count, %eax
	finit
	popl %ebp; popl %ebx; popl %edi; popl %esi; ret
.globl ujmpujmp
.align 32
ujmpujmp:	pushl %esi; pushl %edi;
	pushl %ebx; pushl %ebp
	call  .setup
cpuid; rdtsc; movl %eax, count; xorl %eax, %eax; xorl %edx, %edx
	jmp   UL001
UL001:
	jmp   UL002
UL002:
	jmp   UL003
UL003:
	jmp   UL004
UL004:
	jmp   UL005
UL005:
	jmp   UL006
UL006:
	jmp   UL007
UL007:
	jmp   UL008
UL008:
	jmp   UL009
UL009:
	jmp   UL010
UL010:
	jmp   UL011
UL011:
	jmp   UL012
UL012:
	jmp   UL013
UL013:
	jmp   UL014
UL014:
	jmp   UL015
UL015:
	jmp   UL016
UL016:
	jmp   UL017
UL017:
	jmp   UL018
UL018:
	jmp   UL019
UL019:
	jmp   UL020
UL020:
	jmp   UL021
UL021:
	jmp   UL022
UL022:
	jmp   UL023
UL023:
	jmp   UL024
UL024:
	jmp   UL025
UL025:
	jmp   UL026
UL026:
	jmp   UL027
UL027:
	jmp   UL028
UL028:
	jmp   UL029
UL029:
	jmp   UL030
UL030:
	jmp   UL031
UL031:
	jmp   UL032
UL032:
	cpuid; rdtsc; subl count, %eax
	finit
	popl %ebp; popl %ebx; popl %edi; popl %esi; ret
.globl addjmp
.align 32
addjmp:	pushl %esi; pushl %edi;
	pushl %ebx; pushl %ebp
	call  .setup
cpuid; rdtsc; movl %eax, count; xorl %eax, %eax; xorl %edx, %edx
	addl  %eax, %edi
	jmp   L033
.align 32
L033:
	addl  %esp, %edx
	jmp   L034
.align 32
L034:
	addl  %eax, %esi
	jmp   L035
.align 32
L035:
	addl  %esp, %ebp
	jmp   L036
.align 32
L036:
	addl  %eax, %edi
	jmp   L037
.align 32
L037:
	addl  %esp, %edx
	jmp   L038
.align 32
L038:
	addl  %eax, %esi
	jmp   L039
.align 32
L039:
	addl  %esp, %ebp
	jmp   L040
.align 32
L040:
	addl  %eax, %edi
	jmp   L041
.align 32
L041:
	addl  %esp, %edx
	jmp   L042
.align 32
L042:
	addl  %eax, %esi
	jmp   L043
.align 32
L043:
	addl  %esp, %ebp
	jmp   L044
.align 32
L044:
	addl  %eax, %edi
	jmp   L045
.align 32
L045:
	addl  %esp, %edx
	jmp   L046
.align 32
L046:
	addl  %eax, %esi
	jmp   L047
.align 32
L047:
	addl  %esp, %ebp
	jmp   L048
.align 32
L048:
	cpuid; rdtsc; subl count, %eax
	finit
	popl %ebp; popl %ebx; popl %edi; popl %esi; ret

.setup:
	xorl  %ecx,%ecx
	xorl  %edi,%edi
	xorl  %esi,%esi
	xorl  %ebx,%ebx
	xorl  %ebp,%ebp
	finit
	fld1; fld1; fld1; fld1
	fld1; fld1; fld1; fld1
	ret

.mmxsetup:
	xorl  %ecx,%ecx
	xorl  %edi,%edi
	xorl  %esi,%esi
	xorl  %ebx,%ebx
	xorl  %ebp,%ebp
	emms
	ret
