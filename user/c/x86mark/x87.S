
#define cpuid
/* 
 * xmark.S -- Generated by xmark.py
 */ 

.data
count:		.int  8
Output:		.int 0; .int 1
.text
.globl faddfadd
.align 32
faddfadd:	pushl %esi; pushl %edi;
	pushl %ebx; pushl %ebp
	call  .setup
cpuid; rdtsc; movl %eax, count; xorl %eax, %eax; xorl %edx, %edx
	fadd  %st, %st(1)
	fadd  %st, %st(2)
	fadd  %st, %st(3)
	fadd  %st, %st(4)
	fadd  %st, %st(5)
	fadd  %st, %st(6)
	fadd  %st, %st(7)
	fadd  %st, %st(1)
	fadd  %st, %st(2)
	fadd  %st, %st(3)
	fadd  %st, %st(4)
	fadd  %st, %st(5)
	fadd  %st, %st(6)
	fadd  %st, %st(7)
	fadd  %st, %st(1)
	fadd  %st, %st(2)
	fadd  %st, %st(3)
	fadd  %st, %st(4)
	fadd  %st, %st(5)
	fadd  %st, %st(6)
	fadd  %st, %st(7)
	fadd  %st, %st(1)
	fadd  %st, %st(2)
	fadd  %st, %st(3)
	fadd  %st, %st(4)
	fadd  %st, %st(5)
	fadd  %st, %st(6)
	fadd  %st, %st(7)
	fadd  %st, %st(1)
	fadd  %st, %st(2)
	fadd  %st, %st(3)
	fadd  %st, %st(4)
	cpuid; rdtsc; subl count, %eax
	finit
	popl %ebp; popl %ebx; popl %edi; popl %esi; ret
.globl fmulfmul
.align 32
fmulfmul:	pushl %esi; pushl %edi;
	pushl %ebx; pushl %ebp
	call  .setup
cpuid; rdtsc; movl %eax, count; xorl %eax, %eax; xorl %edx, %edx
	fmul  %st, %st(1)
	fmul  %st, %st(2)
	fmul  %st, %st(3)
	fmul  %st, %st(4)
	fmul  %st, %st(5)
	fmul  %st, %st(6)
	fmul  %st, %st(7)
	fmul  %st, %st(1)
	fmul  %st, %st(2)
	fmul  %st, %st(3)
	fmul  %st, %st(4)
	fmul  %st, %st(5)
	fmul  %st, %st(6)
	fmul  %st, %st(7)
	fmul  %st, %st(1)
	fmul  %st, %st(2)
	fmul  %st, %st(3)
	fmul  %st, %st(4)
	fmul  %st, %st(5)
	fmul  %st, %st(6)
	fmul  %st, %st(7)
	fmul  %st, %st(1)
	fmul  %st, %st(2)
	fmul  %st, %st(3)
	fmul  %st, %st(4)
	fmul  %st, %st(5)
	fmul  %st, %st(6)
	fmul  %st, %st(7)
	fmul  %st, %st(1)
	fmul  %st, %st(2)
	fmul  %st, %st(3)
	fmul  %st, %st(4)
	cpuid; rdtsc; subl count, %eax
	finit
	popl %ebp; popl %ebx; popl %edi; popl %esi; ret
.globl fmulfadd
.align 32
fmulfadd:	pushl %esi; pushl %edi;
	pushl %ebx; pushl %ebp
	call  .setup
cpuid; rdtsc; movl %eax, count; xorl %eax, %eax; xorl %edx, %edx
	fmul  %st, %st(1)
	fadd  %st, %st(2)
	fmul  %st, %st(3)
	fadd  %st, %st(4)
	fmul  %st, %st(5)
	fadd  %st, %st(6)
	fmul  %st, %st(7)
	fadd  %st, %st(1)
	fmul  %st, %st(2)
	fadd  %st, %st(3)
	fmul  %st, %st(4)
	fadd  %st, %st(5)
	fmul  %st, %st(6)
	fadd  %st, %st(7)
	fmul  %st, %st(1)
	fadd  %st, %st(2)
	fmul  %st, %st(3)
	fadd  %st, %st(4)
	fmul  %st, %st(5)
	fadd  %st, %st(6)
	fmul  %st, %st(7)
	fadd  %st, %st(1)
	fmul  %st, %st(2)
	fadd  %st, %st(3)
	fmul  %st, %st(4)
	fadd  %st, %st(5)
	fmul  %st, %st(6)
	fadd  %st, %st(7)
	fmul  %st, %st(1)
	fadd  %st, %st(2)
	fmul  %st, %st(3)
	fadd  %st, %st(4)
	cpuid; rdtsc; subl count, %eax
	finit
	popl %ebp; popl %ebx; popl %edi; popl %esi; ret
.globl fdivfdiv
.align 32
fdivfdiv:	pushl %esi; pushl %edi;
	pushl %ebx; pushl %ebp
	call  .setup
cpuid; rdtsc; movl %eax, count; xorl %eax, %eax; xorl %edx, %edx
	fdiv  %st, %st(1)
	fdiv  %st, %st(2)
	fdiv  %st, %st(3)
	fdiv  %st, %st(4)
	fdiv  %st, %st(5)
	fdiv  %st, %st(6)
	fdiv  %st, %st(7)
	fdiv  %st, %st(1)
	fdiv  %st, %st(2)
	fdiv  %st, %st(3)
	fdiv  %st, %st(4)
	fdiv  %st, %st(5)
	fdiv  %st, %st(6)
	fdiv  %st, %st(7)
	fdiv  %st, %st(1)
	fdiv  %st, %st(2)
	fdiv  %st, %st(3)
	fdiv  %st, %st(4)
	fdiv  %st, %st(5)
	fdiv  %st, %st(6)
	fdiv  %st, %st(7)
	fdiv  %st, %st(1)
	fdiv  %st, %st(2)
	fdiv  %st, %st(3)
	fdiv  %st, %st(4)
	fdiv  %st, %st(5)
	fdiv  %st, %st(6)
	fdiv  %st, %st(7)
	fdiv  %st, %st(1)
	fdiv  %st, %st(2)
	fdiv  %st, %st(3)
	fdiv  %st, %st(4)
	cpuid; rdtsc; subl count, %eax
	finit
	popl %ebp; popl %ebx; popl %edi; popl %esi; ret
.globl fmulfdiv
.align 32
fmulfdiv:	pushl %esi; pushl %edi;
	pushl %ebx; pushl %ebp
	call  .setup
cpuid; rdtsc; movl %eax, count; xorl %eax, %eax; xorl %edx, %edx
	fmul  %st, %st(1)
	fdiv  %st, %st(2)
	fmul  %st, %st(3)
	fdiv  %st, %st(4)
	fmul  %st, %st(5)
	fdiv  %st, %st(6)
	fmul  %st, %st(7)
	fdiv  %st, %st(1)
	fmul  %st, %st(2)
	fdiv  %st, %st(3)
	fmul  %st, %st(4)
	fdiv  %st, %st(5)
	fmul  %st, %st(6)
	fdiv  %st, %st(7)
	fmul  %st, %st(1)
	fdiv  %st, %st(2)
	fmul  %st, %st(3)
	fdiv  %st, %st(4)
	fmul  %st, %st(5)
	fdiv  %st, %st(6)
	fmul  %st, %st(7)
	fdiv  %st, %st(1)
	fmul  %st, %st(2)
	fdiv  %st, %st(3)
	fmul  %st, %st(4)
	fdiv  %st, %st(5)
	fmul  %st, %st(6)
	fdiv  %st, %st(7)
	fmul  %st, %st(1)
	fdiv  %st, %st(2)
	fmul  %st, %st(3)
	fdiv  %st, %st(4)
	cpuid; rdtsc; subl count, %eax
	finit
	popl %ebp; popl %ebx; popl %edi; popl %esi; ret
.globl faddfdiv
.align 32
faddfdiv:	pushl %esi; pushl %edi;
	pushl %ebx; pushl %ebp
	call  .setup
cpuid; rdtsc; movl %eax, count; xorl %eax, %eax; xorl %edx, %edx
	fadd  %st, %st(1)
	fdiv  %st, %st(2)
	fadd  %st, %st(3)
	fdiv  %st, %st(4)
	fadd  %st, %st(5)
	fdiv  %st, %st(6)
	fadd  %st, %st(7)
	fdiv  %st, %st(1)
	fadd  %st, %st(2)
	fdiv  %st, %st(3)
	fadd  %st, %st(4)
	fdiv  %st, %st(5)
	fadd  %st, %st(6)
	fdiv  %st, %st(7)
	fadd  %st, %st(1)
	fdiv  %st, %st(2)
	fadd  %st, %st(3)
	fdiv  %st, %st(4)
	fadd  %st, %st(5)
	fdiv  %st, %st(6)
	fadd  %st, %st(7)
	fdiv  %st, %st(1)
	fadd  %st, %st(2)
	fdiv  %st, %st(3)
	fadd  %st, %st(4)
	fdiv  %st, %st(5)
	fadd  %st, %st(6)
	fdiv  %st, %st(7)
	fadd  %st, %st(1)
	fdiv  %st, %st(2)
	fadd  %st, %st(3)
	fdiv  %st, %st(4)
	cpuid; rdtsc; subl count, %eax
	finit
	popl %ebp; popl %ebx; popl %edi; popl %esi; ret
.globl fsqrtfsqrt
.align 32
fsqrtfsqrt:	pushl %esi; pushl %edi;
	pushl %ebx; pushl %ebp
	call  .setup
cpuid; rdtsc; movl %eax, count; xorl %eax, %eax; xorl %edx, %edx
	fsqrt 
	fsqrt 
	fsqrt 
	fsqrt 
	fsqrt 
	fsqrt 
	fsqrt 
	fsqrt 
	fsqrt 
	fsqrt 
	fsqrt 
	fsqrt 
	fsqrt 
	fsqrt 
	fsqrt 
	fsqrt 
	fsqrt 
	fsqrt 
	fsqrt 
	fsqrt 
	fsqrt 
	fsqrt 
	fsqrt 
	fsqrt 
	fsqrt 
	fsqrt 
	fsqrt 
	fsqrt 
	fsqrt 
	fsqrt 
	fsqrt 
	fsqrt 
	cpuid; rdtsc; subl count, %eax
	finit
	popl %ebp; popl %ebx; popl %edi; popl %esi; ret
.globl fsinfsin
.align 32
fsinfsin:	pushl %esi; pushl %edi;
	pushl %ebx; pushl %ebp
	call  .setup
cpuid; rdtsc; movl %eax, count; xorl %eax, %eax; xorl %edx, %edx
	fsin  
	fsin  
	fsin  
	fsin  
	fsin  
	fsin  
	fsin  
	fsin  
	fsin  
	fsin  
	fsin  
	fsin  
	fsin  
	fsin  
	fsin  
	fsin  
	fsin  
	fsin  
	fsin  
	fsin  
	fsin  
	fsin  
	fsin  
	fsin  
	fsin  
	fsin  
	fsin  
	fsin  
	fsin  
	fsin  
	fsin  
	fsin  
	cpuid; rdtsc; subl count, %eax
	finit
	popl %ebp; popl %ebx; popl %edi; popl %esi; ret

.setup:
	xorl  %ecx,%ecx
	xorl  %edi,%edi
	xorl  %esi,%esi
	xorl  %ebx,%ebx
	xorl  %ebp,%ebp
	finit
	fld1; fld1; fld1; fld1
	fld1; fld1; fld1; fld1
	ret

.mmxsetup:
	xorl  %ecx,%ecx
	xorl  %edi,%edi
	xorl  %esi,%esi
	xorl  %ebx,%ebx
	xorl  %ebp,%ebp
	emms
	ret
