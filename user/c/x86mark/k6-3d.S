
#define cpuid
/* 
 * xmark.S -- Generated by xmark.py
 */ 

.data
count:		.int  8
Output:		.int 0; .int 1
.text
.globl pfmulpfmul
.align 32
pfmulpfmul:	pushl %esi; pushl %edi;
	pushl %ebx; pushl %ebp
	call  .mmxsetup
cpuid; rdtsc; movl %eax, count; xorl %eax, %eax; xorl %edx, %edx
	pfmul %mm0, %mm1
	pfmul %mm0, %mm2
	pfmul %mm0, %mm3
	pfmul %mm0, %mm4
	pfmul %mm0, %mm5
	pfmul %mm0, %mm6
	pfmul %mm0, %mm1
	pfmul %mm0, %mm2
	pfmul %mm0, %mm3
	pfmul %mm0, %mm4
	pfmul %mm0, %mm5
	pfmul %mm0, %mm6
	pfmul %mm0, %mm1
	pfmul %mm0, %mm2
	pfmul %mm0, %mm3
	pfmul %mm0, %mm4
	pfmul %mm0, %mm5
	pfmul %mm0, %mm6
	pfmul %mm0, %mm1
	pfmul %mm0, %mm2
	pfmul %mm0, %mm3
	pfmul %mm0, %mm4
	pfmul %mm0, %mm5
	pfmul %mm0, %mm6
	pfmul %mm0, %mm1
	pfmul %mm0, %mm2
	pfmul %mm0, %mm3
	pfmul %mm0, %mm4
	pfmul %mm0, %mm5
	pfmul %mm0, %mm6
	pfmul %mm0, %mm1
	pfmul %mm0, %mm2
	cpuid; rdtsc; subl count, %eax
	emms
	popl %ebp; popl %ebx; popl %edi; popl %esi; ret
.globl pfaddpfadd
.align 32
pfaddpfadd:	pushl %esi; pushl %edi;
	pushl %ebx; pushl %ebp
	call  .mmxsetup
cpuid; rdtsc; movl %eax, count; xorl %eax, %eax; xorl %edx, %edx
	pfadd %mm0, %mm1
	pfadd %mm0, %mm2
	pfadd %mm0, %mm3
	pfadd %mm0, %mm4
	pfadd %mm0, %mm5
	pfadd %mm0, %mm6
	pfadd %mm0, %mm1
	pfadd %mm0, %mm2
	pfadd %mm0, %mm3
	pfadd %mm0, %mm4
	pfadd %mm0, %mm5
	pfadd %mm0, %mm6
	pfadd %mm0, %mm1
	pfadd %mm0, %mm2
	pfadd %mm0, %mm3
	pfadd %mm0, %mm4
	pfadd %mm0, %mm5
	pfadd %mm0, %mm6
	pfadd %mm0, %mm1
	pfadd %mm0, %mm2
	pfadd %mm0, %mm3
	pfadd %mm0, %mm4
	pfadd %mm0, %mm5
	pfadd %mm0, %mm6
	pfadd %mm0, %mm1
	pfadd %mm0, %mm2
	pfadd %mm0, %mm3
	pfadd %mm0, %mm4
	pfadd %mm0, %mm5
	pfadd %mm0, %mm6
	pfadd %mm0, %mm1
	pfadd %mm0, %mm2
	cpuid; rdtsc; subl count, %eax
	emms
	popl %ebp; popl %ebx; popl %edi; popl %esi; ret
.globl pfaddpfmul
.align 32
pfaddpfmul:	pushl %esi; pushl %edi;
	pushl %ebx; pushl %ebp
	call  .mmxsetup
cpuid; rdtsc; movl %eax, count; xorl %eax, %eax; xorl %edx, %edx
	pfadd %mm0, %mm1
	pfmul %mm0, %mm2
	pfadd %mm0, %mm3
	pfmul %mm0, %mm4
	pfadd %mm0, %mm5
	pfmul %mm0, %mm6
	pfadd %mm0, %mm1
	pfmul %mm0, %mm2
	pfadd %mm0, %mm3
	pfmul %mm0, %mm4
	pfadd %mm0, %mm5
	pfmul %mm0, %mm6
	pfadd %mm0, %mm1
	pfmul %mm0, %mm2
	pfadd %mm0, %mm3
	pfmul %mm0, %mm4
	pfadd %mm0, %mm5
	pfmul %mm0, %mm6
	pfadd %mm0, %mm1
	pfmul %mm0, %mm2
	pfadd %mm0, %mm3
	pfmul %mm0, %mm4
	pfadd %mm0, %mm5
	pfmul %mm0, %mm6
	pfadd %mm0, %mm1
	pfmul %mm0, %mm2
	pfadd %mm0, %mm3
	pfmul %mm0, %mm4
	pfadd %mm0, %mm5
	pfmul %mm0, %mm6
	pfadd %mm0, %mm1
	pfmul %mm0, %mm2
	cpuid; rdtsc; subl count, %eax
	emms
	popl %ebp; popl %ebx; popl %edi; popl %esi; ret
.globl dpfmuldpfmul
.align 32
dpfmuldpfmul:	pushl %esi; pushl %edi;
	pushl %ebx; pushl %ebp
	call  .mmxsetup
cpuid; rdtsc; movl %eax, count; xorl %eax, %eax; xorl %edx, %edx
	pfmul %mm7, %mm7
	pfmul %mm7, %mm7
	pfmul %mm7, %mm7
	pfmul %mm7, %mm7
	pfmul %mm7, %mm7
	pfmul %mm7, %mm7
	pfmul %mm7, %mm7
	pfmul %mm7, %mm7
	pfmul %mm7, %mm7
	pfmul %mm7, %mm7
	pfmul %mm7, %mm7
	pfmul %mm7, %mm7
	pfmul %mm7, %mm7
	pfmul %mm7, %mm7
	pfmul %mm7, %mm7
	pfmul %mm7, %mm7
	pfmul %mm7, %mm7
	pfmul %mm7, %mm7
	pfmul %mm7, %mm7
	pfmul %mm7, %mm7
	pfmul %mm7, %mm7
	pfmul %mm7, %mm7
	pfmul %mm7, %mm7
	pfmul %mm7, %mm7
	pfmul %mm7, %mm7
	pfmul %mm7, %mm7
	pfmul %mm7, %mm7
	pfmul %mm7, %mm7
	pfmul %mm7, %mm7
	pfmul %mm7, %mm7
	pfmul %mm7, %mm7
	pfmul %mm7, %mm7
	cpuid; rdtsc; subl count, %eax
	emms
	popl %ebp; popl %ebx; popl %edi; popl %esi; ret
.globl dpfadddpfadd
.align 32
dpfadddpfadd:	pushl %esi; pushl %edi;
	pushl %ebx; pushl %ebp
	call  .mmxsetup
cpuid; rdtsc; movl %eax, count; xorl %eax, %eax; xorl %edx, %edx
	pfadd %mm7, %mm7
	pfadd %mm7, %mm7
	pfadd %mm7, %mm7
	pfadd %mm7, %mm7
	pfadd %mm7, %mm7
	pfadd %mm7, %mm7
	pfadd %mm7, %mm7
	pfadd %mm7, %mm7
	pfadd %mm7, %mm7
	pfadd %mm7, %mm7
	pfadd %mm7, %mm7
	pfadd %mm7, %mm7
	pfadd %mm7, %mm7
	pfadd %mm7, %mm7
	pfadd %mm7, %mm7
	pfadd %mm7, %mm7
	pfadd %mm7, %mm7
	pfadd %mm7, %mm7
	pfadd %mm7, %mm7
	pfadd %mm7, %mm7
	pfadd %mm7, %mm7
	pfadd %mm7, %mm7
	pfadd %mm7, %mm7
	pfadd %mm7, %mm7
	pfadd %mm7, %mm7
	pfadd %mm7, %mm7
	pfadd %mm7, %mm7
	pfadd %mm7, %mm7
	pfadd %mm7, %mm7
	pfadd %mm7, %mm7
	pfadd %mm7, %mm7
	pfadd %mm7, %mm7
	cpuid; rdtsc; subl count, %eax
	emms
	popl %ebp; popl %ebx; popl %edi; popl %esi; ret
.globl dpfadddpfmul
.align 32
dpfadddpfmul:	pushl %esi; pushl %edi;
	pushl %ebx; pushl %ebp
	call  .mmxsetup
cpuid; rdtsc; movl %eax, count; xorl %eax, %eax; xorl %edx, %edx
	pfadd %mm7, %mm7
	pfmul %mm7, %mm7
	pfadd %mm7, %mm7
	pfmul %mm7, %mm7
	pfadd %mm7, %mm7
	pfmul %mm7, %mm7
	pfadd %mm7, %mm7
	pfmul %mm7, %mm7
	pfadd %mm7, %mm7
	pfmul %mm7, %mm7
	pfadd %mm7, %mm7
	pfmul %mm7, %mm7
	pfadd %mm7, %mm7
	pfmul %mm7, %mm7
	pfadd %mm7, %mm7
	pfmul %mm7, %mm7
	pfadd %mm7, %mm7
	pfmul %mm7, %mm7
	pfadd %mm7, %mm7
	pfmul %mm7, %mm7
	pfadd %mm7, %mm7
	pfmul %mm7, %mm7
	pfadd %mm7, %mm7
	pfmul %mm7, %mm7
	pfadd %mm7, %mm7
	pfmul %mm7, %mm7
	pfadd %mm7, %mm7
	pfmul %mm7, %mm7
	pfadd %mm7, %mm7
	pfmul %mm7, %mm7
	pfadd %mm7, %mm7
	pfmul %mm7, %mm7
	cpuid; rdtsc; subl count, %eax
	emms
	popl %ebp; popl %ebx; popl %edi; popl %esi; ret

.setup:
	xorl  %ecx,%ecx
	xorl  %edi,%edi
	xorl  %esi,%esi
	xorl  %ebx,%ebx
	xorl  %ebp,%ebp
	finit
	fld1; fld1; fld1; fld1
	fld1; fld1; fld1; fld1
	ret

.mmxsetup:
	xorl  %ecx,%ecx
	xorl  %edi,%edi
	xorl  %esi,%esi
	xorl  %ebx,%ebx
	xorl  %ebp,%ebp
	emms
	ret
