diff -rcN src_org/binutils//config.sub src/binutils//config.sub
*** src_org/binutils//config.sub	2010-06-01 19:53:40.000000000 +0200
--- src/binutils//config.sub	2011-05-26 23:59:15.000000000 +0200
***************
*** 1297,1303 ****
  	      | -hpux* | -unos* | -osf* | -luna* | -dgux* | -auroraux* | -solaris* \
  	      | -sym* | -kopensolaris* \
  	      | -amigaos* | -amigados* | -msdos* | -newsos* | -unicos* | -aof* \
! 	      | -aos* | -aros* \
  	      | -nindy* | -vxsim* | -vxworks* | -ebmon* | -hms* | -mvs* \
  	      | -clix* | -riscos* | -uniplus* | -iris* | -rtu* | -xenix* \
  	      | -hiux* | -386bsd* | -knetbsd* | -mirbsd* | -netbsd* \
--- 1297,1303 ----
  	      | -hpux* | -unos* | -osf* | -luna* | -dgux* | -auroraux* | -solaris* \
  	      | -sym* | -kopensolaris* \
  	      | -amigaos* | -amigados* | -msdos* | -newsos* | -unicos* | -aof* \
! 	      | -aos* | -aros* | -escape* \
  	      | -nindy* | -vxsim* | -vxworks* | -ebmon* | -hms* | -mvs* \
  	      | -clix* | -riscos* | -uniplus* | -iris* | -rtu* | -xenix* \
  	      | -hiux* | -386bsd* | -knetbsd* | -mirbsd* | -netbsd* \
diff -rcN src_org/binutils//gas/config/elf64mmixescape.sh src/binutils//gas/config/elf64mmixescape.sh
*** src_org/binutils//gas/config/elf64mmixescape.sh	1970-01-01 01:00:00.000000000 +0100
--- src/binutils//gas/config/elf64mmixescape.sh	2011-05-26 23:59:15.000000000 +0200
***************
*** 0 ****
--- 1,61 ----
+ TEMPLATE_NAME=elf32
+ GENERATE_SHLIB_SCRIPT=yes
+ ELFSIZE=64
+ SCRIPT_NAME=elf
+ OUTPUT_FORMAT="elf64-mmix"
+ NO_REL_RELOCS=yes
+ ENTRY=_start.
+ 
+ # Default to 0 as mmixal does.
+ TEXT_START_ADDR='DEFINED (__.MMIX.start..text) ? __.MMIX.start..text : 0x2000'
+ # Don't add SIZEOF_HEADERS.
+ # Don't set EMBEDDED, that would be misleading; it's not that kind of system.
+ TEXT_BASE_ADDRESS=$TEXT_START_ADDR
+ DATA_ADDR='DEFINED (__.MMIX.start..data) ? __.MMIX.start..data : 0x2000000000000000'
+ 
+ MAXPAGESIZE="CONSTANT (MAXPAGESIZE)"
+ ARCH=mmix
+ MACHINE=
+ COMPILE_IN=yes
+ EXTRA_EM_FILE=mmixelf
+ 
+ # The existence of a symbol __start (or _start) should overrule Main, so
+ # it can be a user symbol without the associated mmixal magic.  We
+ # also want to provide Main as a synonym for _start, if Main wasn't
+ # defined but is referred to, and _start was defined.
+ #
+ # The reason we use a symbol "_start." as a mediator is to avoid
+ # causing ld to force the type of _start to object rather than no
+ # type, which confuses disassembly; we also make it alphanumerically
+ # a successor of _start for similar reasons.  Perhaps it's a linker
+ # bug that linker-defined symbols set the symbol-type.
+ #
+ # Note that we smuggle this into OTHER_TEXT_SECTIONS (at the end
+ # of .text) rather than TEXT_START_SYMBOLS.  This is necessary, as
+ # DEFINED wouldn't find the symbol if it was at the top; presumably
+ # before the definition, if the definition is not in the first file.
+ # FIXME: Arguably a linker bug.
+ # Only do this for a final link, or else we'll mess up e.g. error
+ # messages.
+ OTHER_TEXT_SECTIONS="
+ ${RELOCATING+
+  _start. = (DEFINED (_start) ? _start
+             : (DEFINED (Main) ? Main : (DEFINED (.text) ? .text : 0)));
+  PROVIDE (Main = DEFINED (Main) ? Main : (DEFINED (_start) ? _start : _start.));
+ }"
+ 
+ OTHER_SECTIONS='
+  .MMIX.reg_contents :
+  {
+    /* Note that this section always has a fixed VMA - that of its
+       first register * 8.  */
+    *(.MMIX.reg_contents.linker_allocated);
+    *(.MMIX.reg_contents);
+  }
+ '
+ 
+ # FIXME: Also bit by the PROVIDE bug?  If not, this could be
+ # EXECUTABLE_SYMBOLS.
+ # By default, put the high end of the stack where the register stack
+ # begins.  They grow in opposite directions.  */
+ OTHER_SYMBOLS="PROVIDE (__Stack_start = 0x6000000000000000);"
diff -rcN src_org/binutils//ld/configure.tgt src/binutils//ld/configure.tgt
*** src_org/binutils//ld/configure.tgt	2010-12-01 12:03:47.000000000 +0100
--- src/binutils//ld/configure.tgt	2011-05-26 23:59:15.000000000 +0200
***************
*** 415,420 ****
--- 415,421 ----
  mips*-*-lnews*)		targ_emul=mipslnews ;;
  mips*-*-sysv4*)         targ_emul=elf32btsmip
  			;;
+ mmix-*-escape*)		targ_emul=elf64mmix; targ_extra_emuls=mmo ;;
  mmix-*-*)		targ_emul=mmo
  			targ_extra_emuls=elf64mmix
  			;;
diff -rcN src_org/binutils//ld/emulparams/elf64mmixescape.sh src/binutils//ld/emulparams/elf64mmixescape.sh
*** src_org/binutils//ld/emulparams/elf64mmixescape.sh	1970-01-01 01:00:00.000000000 +0100
--- src/binutils//ld/emulparams/elf64mmixescape.sh	2011-05-27 00:02:03.000000000 +0200
***************
*** 0 ****
--- 1,61 ----
+ TEMPLATE_NAME=elf32
+ GENERATE_SHLIB_SCRIPT=yes
+ ELFSIZE=64
+ SCRIPT_NAME=elf
+ OUTPUT_FORMAT="elf64-mmix"
+ NO_REL_RELOCS=yes
+ ENTRY=_start.
+ 
+ # Default to 0 as mmixal does.
+ TEXT_START_ADDR='DEFINED (__.MMIX.start..text) ? __.MMIX.start..text : 0x2000'
+ # Don't add SIZEOF_HEADERS.
+ # Don't set EMBEDDED, that would be misleading; it's not that kind of system.
+ TEXT_BASE_ADDRESS=$TEXT_START_ADDR
+ DATA_ADDR='DEFINED (__.MMIX.start..data) ? __.MMIX.start..data : 0x2000000000000000'
+ 
+ MAXPAGESIZE="CONSTANT (MAXPAGESIZE)"
+ ARCH=mmix
+ MACHINE=
+ COMPILE_IN=yes
+ EXTRA_EM_FILE=mmixelf
+ 
+ # The existence of a symbol __start (or _start) should overrule Main, so
+ # it can be a user symbol without the associated mmixal magic.  We
+ # also want to provide Main as a synonym for _start, if Main wasn't
+ # defined but is referred to, and _start was defined.
+ #
+ # The reason we use a symbol "_start." as a mediator is to avoid
+ # causing ld to force the type of _start to object rather than no
+ # type, which confuses disassembly; we also make it alphanumerically
+ # a successor of _start for similar reasons.  Perhaps it's a linker
+ # bug that linker-defined symbols set the symbol-type.
+ #
+ # Note that we smuggle this into OTHER_TEXT_SECTIONS (at the end
+ # of .text) rather than TEXT_START_SYMBOLS.  This is necessary, as
+ # DEFINED wouldn't find the symbol if it was at the top; presumably
+ # before the definition, if the definition is not in the first file.
+ # FIXME: Arguably a linker bug.
+ # Only do this for a final link, or else we'll mess up e.g. error
+ # messages.
+ OTHER_TEXT_SECTIONS="
+ ${RELOCATING+
+  _start. = (DEFINED (_start) ? _start
+             : (DEFINED (Main) ? Main : (DEFINED (.text) ? .text : 0)));
+  PROVIDE (Main = DEFINED (Main) ? Main : (DEFINED (_start) ? _start : _start.));
+ }"
+ 
+ OTHER_SECTIONS='
+  .MMIX.reg_contents :
+  {
+    /* Note that this section always has a fixed VMA - that of its
+       first register * 8.  */
+    *(.MMIX.reg_contents.linker_allocated);
+    *(.MMIX.reg_contents);
+  }
+ '
+ 
+ # FIXME: Also bit by the PROVIDE bug?  If not, this could be
+ # EXECUTABLE_SYMBOLS.
+ # By default, put the high end of the stack where the register stack
+ # begins.  They grow in opposite directions.  */
+ OTHER_SYMBOLS="PROVIDE (__Stack_start = 0x6000000000000000);"
diff -rcN src_org/binutils//ld/Makefile.in src/binutils//ld/Makefile.in
*** src_org/binutils//ld/Makefile.in	2010-11-05 11:34:22.000000000 +0100
--- src/binutils//ld/Makefile.in	2011-05-26 23:59:15.000000000 +0200
***************
*** 2568,2573 ****
--- 2568,2577 ----
    $(ELF_DEPS) $(srcdir)/emultempl/mmix-elfnmmo.em \
    $(srcdir)/emultempl/mmixelf.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
  	${GENSCRIPTS} elf64mmix "$(tdir_elf64mmix)"
+ eelf64mmixescape.c: $(srcdir)/emulparams/elf64mmixescape.sh \
+   $(ELF_DEPS) $(srcdir)/emultempl/mmix-elfnmmo.em \
+   $(srcdir)/emultempl/mmixelf.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
+ 	${GENSCRIPTS} elf64mmixescape "$(tdir_elf64mmixescape)"
  emmo.c: $(srcdir)/emulparams/mmo.sh $(srcdir)/emultempl/mmix-elfnmmo.em \
    $(srcdir)/emultempl/generic.em $(srcdir)/emultempl/elf-generic.em \
    $(srcdir)/emultempl/mmo.em \
