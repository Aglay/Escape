GDT exchanged, paging enabled, video initializedDONE
MultiBoot-Structure:
---------------------
flags=0x7e7
memLower=639 KB, memUpper=129984 KB
biosDriveNumber=0, part1=-1, part2=-1, part3=-1
cmdLine=/kernel.bin
ELF: num=19, size=40, addr=0x21c000, shndx=0x10
mmapLength=144, mmapAddr=0xc0053b04
Available memory:
	  0: addr=0x00000000, size=0x0009fc00, type=0x00000001
	  1: addr=0x00100000, size=0x07ef0000, type=0x00000001
---------------------
Initializing memory-management...DONE
Clock cycles: 0x000000000240949b
Initializing VFS...DONE
Clock cycles: 0x00000000001330e0
Initializing process-management...DONE
Clock cycles: 0x00000000000dccfe
Initializing IDT...DONE
Clock cycles: 0x00000000000a28af
Free frames=32495, pages mapped=1281, free mem=129980 KiB
Got interrupt 39 (<unknown>) @ 0x0
Drives:
	  Primary Master (present=1,sectors=10080)
	  	  0: start=0x3F, sectors=10017 size=5128704 byte
	  Primary Slave (present=0,sectors=0)
	  Secondary Master (present=0,sectors=0)
	  Secondary Slave (present=0,sectors=0)
Welcome to Escape v0.1!

Try 'help' to see the current features :)

file:/ # help
Currently you can use the following commands:
	    cat [<file>]	    	    	    	    	    Read file or from STDIN and print
	    kill <pid>	  	    	    	    	    	    Kill process
	    login	   	    	    	    	    	    	    Just for fun ;)
	    ls [<dir>]	  	    	    	    	    	    List current or specified directory
	    mem	 	    	    	    	    	    	    	    Print memory-usage
	    ps	  	    	    	    	    	    	    	    Print processes
	    echo <string>,...	   	    	    	    Print given arguments
	    env [<name>|<name>=<value>]	 	    Print or set env-variable(s)
	    help	    	    	    	    	    	    	    Print this message
	    cd <dir>	    	    	    	    	    	    Change to given directory
	    pwd	 	    	    	    	    	    	    	    Print current directory
	    wc	  	    	    	    	    	    	    	    Count and/or print words

Additionally there is a basic shell-'language', that supports '|', '"' and ';'
So for example you can do:
	    ls; ps; echo "test";
	    ls | cat; ps
	    echo "word1" word2 "word3 and 4" | wc
	    ps | wc | wc -p

Other:
	    Tab-Completion works for programs in /apps and files/directories
	    You can send EOF by CTRL+D and kill the current process with CTRL+C
	    You can scroll the screen with pageUp/-Down, shift + arrowUp/-Down

file:/ # wpwd
file:/
file:/ # cd apps/&
cat kill ls mem ps shell task2 wc login 
file:/ # cd apps/wc