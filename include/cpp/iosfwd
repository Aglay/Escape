/**
 * $Id$
 * Copyright (C) 2008 - 2009 Nils Asmussen
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
 */

#ifndef IOSFWD_
#define IOSFWD_

#include <stddef.h>
#include <string>

namespace std {
	//template<> struct char_traits<char>;

	template<class charT,class traits = char_traits<charT> >
	class basic_ios;
	template<class charT,class traits = char_traits<charT> >
	class basic_streambuf;
	template<class charT,class traits = char_traits<charT> >
	class basic_istream;
	template<class charT,class traits = char_traits<charT> >
	class basic_ostream;
	template<class charT,class traits = char_traits<charT> >
	class basic_iostream;
	template<class charT,class traits = char_traits<charT> >
	class basic_stringbuf;
	template<class charT,class traits = char_traits<charT> >
	class basic_istringstream;
	template<class charT,class traits = char_traits<charT> >
	class basic_ostringstream;
	template<class charT,class traits = char_traits<charT> >
	class basic_stringstream;
	template<class charT,class traits = char_traits<charT> >
	class basic_filebuf;
	template<class charT,class traits = char_traits<charT> >
	class basic_ifstream;
	template<class charT,class traits = char_traits<charT> >
	class basic_ofstream;
	template<class charT,class traits = char_traits<charT> >
	class basic_fstream;

	template<class charT,class traits = char_traits<charT> >
	class istreambuf_iterator;
	template<class charT,class traits = char_traits<charT> >
	class ostreambuf_iterator;

	typedef basic_ios<char> ios;

	typedef basic_streambuf<char> streambuf;
	typedef basic_istream<char> istream;
	typedef basic_ostream<char> ostream;
	typedef basic_iostream<char> iostream;

	typedef basic_stringbuf<char> stringbuf;
	typedef basic_istringstream<char> istringstream;
	typedef basic_ostringstream<char> ostringstream;
	typedef basic_stringstream<char> stringstream;

	typedef basic_filebuf<char> filebuf;
	typedef basic_ifstream<char> ifstream;
	typedef basic_ofstream<char> ofstream;
	typedef basic_fstream<char> fstream;

	template<class state> class fpos;
	//typedef fpos<char_traits<char>::state_type> streampos;
}

#endif /* IOSFWD_ */
