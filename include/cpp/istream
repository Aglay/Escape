/**
 * $Id$
 * Copyright (C) 2008 - 2009 Nils Asmussen
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
 */

#ifndef ISTREAM_
#define ISTREAM_

#include <stddef.h>
#include <iosfwd>

namespace std {
	template<class charT,class traits = char_traits<charT> >
	class basic_istream;
	typedef basic_istream<char> istream;

	template<class charT,class traits = char_traits<charT> >
	class basic_iostream;
	typedef basic_iostream<char> iostream;

	/**
	 * Behaves as an unformatted input function, except that it does not count the number of
	 * characters extracted and does not affect the value returned by subsequent calls to is.gcount().
	 * After constructing a sentry object extracts characters as long as the next available
	 * character c is whitespace or until there are no more characters in the sequence. Whitespace
	 * characters are distinguished with the same criterion as used by sentry::sentry. If ws stops
	 * extracting characters because there are no more available it sets eofbit, but not failbit.
	 *
	 * @return is
	 */
	template<class charT,class traits>
	basic_istream<charT,traits>& ws(basic_istream<charT,traits>& is);
}

#endif /* ISTREAM_ */
