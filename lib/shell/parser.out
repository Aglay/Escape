Grammar

    0 $accept: start $end

    1 start: stmtlist

    2 stmtlist: /* empty */
    3         | stmtlistr
    4         | stmtlistr ';'

    5 stmtlistr: stmt
    6          | stmtlistr ';' stmt

    7 stmt: T_IF '(' expr ')' T_THEN stmtlist T_FI
    8     | T_IF '(' expr ')' T_THEN stmtlist T_ELSE stmtlist T_FI
    9     | T_FOR '(' expr ';' expr ';' expr ')' T_DO stmtlist T_DONE
   10     | T_WHILE '(' expr ')' T_DO stmtlist T_DONE
   11     | assignstmt
   12     | cmd

   13 strlist: strlist strcomp
   14        | /* empty */

   15 strcomp: T_STRING
   16        | T_VAR
   17        | '(' expr ')'

   18 expr: T_NUMBER
   19     | T_STRING_SCONST
   20     | '"' strlist '"'
   21     | T_VAR
   22     | assignstmt
   23     | expr T_ADD expr
   24     | expr T_SUB expr
   25     | expr T_MUL expr
   26     | expr T_DIV expr
   27     | expr T_MOD expr
   28     | expr T_POW expr
   29     | T_SUB expr
   30     | expr '<' expr
   31     | expr '>' expr
   32     | expr T_LEQ expr
   33     | expr T_GEQ expr
   34     | expr T_EQ expr
   35     | expr T_NEQ expr
   36     | '`' nestedsubcmd '`'
   37     | '(' expr ')'

   38 assignstmt: T_VAR T_ASSIGN expr

   39 cmdexpr: T_NUMBER
   40        | T_STRING
   41        | T_STRING_SCONST
   42        | '"' strlist '"'
   43        | T_VAR
   44        | '`' nestedsubcmd '`'
   45        | '(' expr ')'

   46 cmdexprlist: cmdexpr
   47            | cmdexprlist cmdexpr

   48 cmd: subcmd
   49    | subcmd '&'

   50 subcmd: cmdexprlist cmdredirin cmdredirout cmdredirfd
   51       | subcmd '|' cmdexprlist cmdredirin cmdredirout cmdredirfd

   52 nestedcmdexpr: T_NUMBER
   53              | T_STRING
   54              | T_STRING_SCONST
   55              | '"' strlist '"'
   56              | T_VAR
   57              | '(' expr ')'

   58 nestedcmdexprlist: nestedcmdexpr
   59                  | nestedcmdexprlist nestedcmdexpr

   60 nestedsubcmd: nestedcmdexprlist cmdredirin cmdredirout cmdredirfd
   61             | nestedsubcmd '|' nestedcmdexprlist cmdredirin cmdredirout cmdredirfd

   62 cmdredirfd: T_ERR2OUT
   63           | T_OUT2ERR
   64           | /* empty */

   65 cmdredirin: '<' cmdexpr
   66           | /* empty */

   67 cmdredirout: '>' cmdexpr
   68            | T_APPEND cmdexpr
   69            | /* empty */


Terminals, with rules where they appear

$end (0) 0
'"' (34) 20 42 55
'&' (38) 49
'(' (40) 7 8 9 10 17 37 45 57
')' (41) 7 8 9 10 17 37 45 57
';' (59) 4 6 9
'<' (60) 30 65
'>' (62) 31 67
'`' (96) 36 44
'|' (124) 51 61
error (256)
T_IF (258) 7 8
T_THEN (259) 7 8
T_ELSE (260) 8
T_FI (261) 7 8
T_FOR (262) 9
T_DO (263) 9 10
T_DONE (264) 9 10
T_WHILE (265) 10
T_NUMBER (266) 18 39 52
T_STRING (267) 15 40 53
T_STRING_SCONST (268) 19 41 54
T_VAR (269) 16 21 38 43 56
T_ERR2OUT (270) 62
T_OUT2ERR (271) 63
T_APPEND (272) 68
T_ASSIGN (273) 38
T_NEQ (274) 35
T_EQ (275) 34
T_GEQ (276) 33
T_LEQ (277) 32
T_SUB (278) 24 29
T_ADD (279) 23
T_MOD (280) 27
T_DIV (281) 26
T_MUL (282) 25
T_NEG (283)
T_POW (284) 28


Nonterminals, with rules where they appear

$accept (39)
    on left: 0
start (40)
    on left: 1, on right: 0
stmtlist (41)
    on left: 2 3 4, on right: 1 7 8 9 10
stmtlistr (42)
    on left: 5 6, on right: 3 4 6
stmt (43)
    on left: 7 8 9 10 11 12, on right: 5 6
strlist (44)
    on left: 13 14, on right: 13 20 42 55
strcomp (45)
    on left: 15 16 17, on right: 13
expr (46)
    on left: 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35
    36 37, on right: 7 8 9 10 17 23 24 25 26 27 28 29 30 31 32 33 34
    35 37 38 45 57
assignstmt (47)
    on left: 38, on right: 11 22
cmdexpr (48)
    on left: 39 40 41 42 43 44 45, on right: 46 47 65 67 68
cmdexprlist (49)
    on left: 46 47, on right: 47 50 51
cmd (50)
    on left: 48 49, on right: 12
subcmd (51)
    on left: 50 51, on right: 48 49 51
nestedcmdexpr (52)
    on left: 52 53 54 55 56 57, on right: 58 59
nestedcmdexprlist (53)
    on left: 58 59, on right: 59 60 61
nestedsubcmd (54)
    on left: 60 61, on right: 36 44 61
cmdredirfd (55)
    on left: 62 63 64, on right: 50 51 60 61
cmdredirin (56)
    on left: 65 66, on right: 50 51 60 61
cmdredirout (57)
    on left: 67 68 69, on right: 50 51 60 61


state 0

    0 $accept: . start $end
    1 start: . stmtlist
    2 stmtlist: .  [$end]
    3         | . stmtlistr
    4         | . stmtlistr ';'
    5 stmtlistr: . stmt
    6          | . stmtlistr ';' stmt
    7 stmt: . T_IF '(' expr ')' T_THEN stmtlist T_FI
    8     | . T_IF '(' expr ')' T_THEN stmtlist T_ELSE stmtlist T_FI
    9     | . T_FOR '(' expr ';' expr ';' expr ')' T_DO stmtlist T_DONE
   10     | . T_WHILE '(' expr ')' T_DO stmtlist T_DONE
   11     | . assignstmt
   12     | . cmd
   38 assignstmt: . T_VAR T_ASSIGN expr
   39 cmdexpr: . T_NUMBER
   40        | . T_STRING
   41        | . T_STRING_SCONST
   42        | . '"' strlist '"'
   43        | . T_VAR
   44        | . '`' nestedsubcmd '`'
   45        | . '(' expr ')'
   46 cmdexprlist: . cmdexpr
   47            | . cmdexprlist cmdexpr
   48 cmd: . subcmd
   49    | . subcmd '&'
   50 subcmd: . cmdexprlist cmdredirin cmdredirout cmdredirfd
   51       | . subcmd '|' cmdexprlist cmdredirin cmdredirout cmdredirfd

    T_IF             shift, and go to state 1
    T_FOR            shift, and go to state 2
    T_WHILE          shift, and go to state 3
    T_NUMBER         shift, and go to state 4
    T_STRING         shift, and go to state 5
    T_STRING_SCONST  shift, and go to state 6
    T_VAR            shift, and go to state 7
    '('              shift, and go to state 8
    '"'              shift, and go to state 9
    '`'              shift, and go to state 10

    $default  reduce using rule 2 (stmtlist)

    start        go to state 11
    stmtlist     go to state 12
    stmtlistr    go to state 13
    stmt         go to state 14
    assignstmt   go to state 15
    cmdexpr      go to state 16
    cmdexprlist  go to state 17
    cmd          go to state 18
    subcmd       go to state 19


state 1

    7 stmt: T_IF . '(' expr ')' T_THEN stmtlist T_FI
    8     | T_IF . '(' expr ')' T_THEN stmtlist T_ELSE stmtlist T_FI

    '('  shift, and go to state 20


state 2

    9 stmt: T_FOR . '(' expr ';' expr ';' expr ')' T_DO stmtlist T_DONE

    '('  shift, and go to state 21


state 3

   10 stmt: T_WHILE . '(' expr ')' T_DO stmtlist T_DONE

    '('  shift, and go to state 22


state 4

   39 cmdexpr: T_NUMBER .

    $default  reduce using rule 39 (cmdexpr)


state 5

   40 cmdexpr: T_STRING .

    $default  reduce using rule 40 (cmdexpr)


state 6

   41 cmdexpr: T_STRING_SCONST .

    $default  reduce using rule 41 (cmdexpr)


state 7

   38 assignstmt: T_VAR . T_ASSIGN expr
   43 cmdexpr: T_VAR .  [$end, T_ELSE, T_FI, T_DONE, T_NUMBER, T_STRING, T_STRING_SCONST, T_VAR, T_ERR2OUT, T_OUT2ERR, T_APPEND, '>', '<', ';', '(', '"', '`', '&', '|']

    T_ASSIGN  shift, and go to state 23

    $default  reduce using rule 43 (cmdexpr)


state 8

   18 expr: . T_NUMBER
   19     | . T_STRING_SCONST
   20     | . '"' strlist '"'
   21     | . T_VAR
   22     | . assignstmt
   23     | . expr T_ADD expr
   24     | . expr T_SUB expr
   25     | . expr T_MUL expr
   26     | . expr T_DIV expr
   27     | . expr T_MOD expr
   28     | . expr T_POW expr
   29     | . T_SUB expr
   30     | . expr '<' expr
   31     | . expr '>' expr
   32     | . expr T_LEQ expr
   33     | . expr T_GEQ expr
   34     | . expr T_EQ expr
   35     | . expr T_NEQ expr
   36     | . '`' nestedsubcmd '`'
   37     | . '(' expr ')'
   38 assignstmt: . T_VAR T_ASSIGN expr
   45 cmdexpr: '(' . expr ')'

    T_NUMBER         shift, and go to state 24
    T_STRING_SCONST  shift, and go to state 25
    T_VAR            shift, and go to state 26
    T_SUB            shift, and go to state 27
    '('              shift, and go to state 28
    '"'              shift, and go to state 29
    '`'              shift, and go to state 30

    expr        go to state 31
    assignstmt  go to state 32


state 9

   13 strlist: . strlist strcomp
   14        | .
   42 cmdexpr: '"' . strlist '"'

    $default  reduce using rule 14 (strlist)

    strlist  go to state 33


state 10

   44 cmdexpr: '`' . nestedsubcmd '`'
   52 nestedcmdexpr: . T_NUMBER
   53              | . T_STRING
   54              | . T_STRING_SCONST
   55              | . '"' strlist '"'
   56              | . T_VAR
   57              | . '(' expr ')'
   58 nestedcmdexprlist: . nestedcmdexpr
   59                  | . nestedcmdexprlist nestedcmdexpr
   60 nestedsubcmd: . nestedcmdexprlist cmdredirin cmdredirout cmdredirfd
   61             | . nestedsubcmd '|' nestedcmdexprlist cmdredirin cmdredirout cmdredirfd

    T_NUMBER         shift, and go to state 34
    T_STRING         shift, and go to state 35
    T_STRING_SCONST  shift, and go to state 36
    T_VAR            shift, and go to state 37
    '('              shift, and go to state 38
    '"'              shift, and go to state 39

    nestedcmdexpr      go to state 40
    nestedcmdexprlist  go to state 41
    nestedsubcmd       go to state 42


state 11

    0 $accept: start . $end

    $end  shift, and go to state 43


state 12

    1 start: stmtlist .

    $default  reduce using rule 1 (start)


state 13

    3 stmtlist: stmtlistr .  [$end, T_ELSE, T_FI, T_DONE]
    4         | stmtlistr . ';'
    6 stmtlistr: stmtlistr . ';' stmt

    ';'  shift, and go to state 44

    $default  reduce using rule 3 (stmtlist)


state 14

    5 stmtlistr: stmt .

    $default  reduce using rule 5 (stmtlistr)


state 15

   11 stmt: assignstmt .

    $default  reduce using rule 11 (stmt)


state 16

   46 cmdexprlist: cmdexpr .

    $default  reduce using rule 46 (cmdexprlist)


state 17

   39 cmdexpr: . T_NUMBER
   40        | . T_STRING
   41        | . T_STRING_SCONST
   42        | . '"' strlist '"'
   43        | . T_VAR
   44        | . '`' nestedsubcmd '`'
   45        | . '(' expr ')'
   47 cmdexprlist: cmdexprlist . cmdexpr
   50 subcmd: cmdexprlist . cmdredirin cmdredirout cmdredirfd
   65 cmdredirin: . '<' cmdexpr
   66           | .  [$end, T_ELSE, T_FI, T_DONE, T_ERR2OUT, T_OUT2ERR, T_APPEND, '>', ';', '&', '|']

    T_NUMBER         shift, and go to state 4
    T_STRING         shift, and go to state 5
    T_STRING_SCONST  shift, and go to state 6
    T_VAR            shift, and go to state 45
    '<'              shift, and go to state 46
    '('              shift, and go to state 8
    '"'              shift, and go to state 9
    '`'              shift, and go to state 10

    $default  reduce using rule 66 (cmdredirin)

    cmdexpr     go to state 47
    cmdredirin  go to state 48


state 18

   12 stmt: cmd .

    $default  reduce using rule 12 (stmt)


state 19

   48 cmd: subcmd .  [$end, T_ELSE, T_FI, T_DONE, ';']
   49    | subcmd . '&'
   51 subcmd: subcmd . '|' cmdexprlist cmdredirin cmdredirout cmdredirfd

    '&'  shift, and go to state 49
    '|'  shift, and go to state 50

    $default  reduce using rule 48 (cmd)


state 20

    7 stmt: T_IF '(' . expr ')' T_THEN stmtlist T_FI
    8     | T_IF '(' . expr ')' T_THEN stmtlist T_ELSE stmtlist T_FI
   18 expr: . T_NUMBER
   19     | . T_STRING_SCONST
   20     | . '"' strlist '"'
   21     | . T_VAR
   22     | . assignstmt
   23     | . expr T_ADD expr
   24     | . expr T_SUB expr
   25     | . expr T_MUL expr
   26     | . expr T_DIV expr
   27     | . expr T_MOD expr
   28     | . expr T_POW expr
   29     | . T_SUB expr
   30     | . expr '<' expr
   31     | . expr '>' expr
   32     | . expr T_LEQ expr
   33     | . expr T_GEQ expr
   34     | . expr T_EQ expr
   35     | . expr T_NEQ expr
   36     | . '`' nestedsubcmd '`'
   37     | . '(' expr ')'
   38 assignstmt: . T_VAR T_ASSIGN expr

    T_NUMBER         shift, and go to state 24
    T_STRING_SCONST  shift, and go to state 25
    T_VAR            shift, and go to state 26
    T_SUB            shift, and go to state 27
    '('              shift, and go to state 28
    '"'              shift, and go to state 29
    '`'              shift, and go to state 30

    expr        go to state 51
    assignstmt  go to state 32


state 21

    9 stmt: T_FOR '(' . expr ';' expr ';' expr ')' T_DO stmtlist T_DONE
   18 expr: . T_NUMBER
   19     | . T_STRING_SCONST
   20     | . '"' strlist '"'
   21     | . T_VAR
   22     | . assignstmt
   23     | . expr T_ADD expr
   24     | . expr T_SUB expr
   25     | . expr T_MUL expr
   26     | . expr T_DIV expr
   27     | . expr T_MOD expr
   28     | . expr T_POW expr
   29     | . T_SUB expr
   30     | . expr '<' expr
   31     | . expr '>' expr
   32     | . expr T_LEQ expr
   33     | . expr T_GEQ expr
   34     | . expr T_EQ expr
   35     | . expr T_NEQ expr
   36     | . '`' nestedsubcmd '`'
   37     | . '(' expr ')'
   38 assignstmt: . T_VAR T_ASSIGN expr

    T_NUMBER         shift, and go to state 24
    T_STRING_SCONST  shift, and go to state 25
    T_VAR            shift, and go to state 26
    T_SUB            shift, and go to state 27
    '('              shift, and go to state 28
    '"'              shift, and go to state 29
    '`'              shift, and go to state 30

    expr        go to state 52
    assignstmt  go to state 32


state 22

   10 stmt: T_WHILE '(' . expr ')' T_DO stmtlist T_DONE
   18 expr: . T_NUMBER
   19     | . T_STRING_SCONST
   20     | . '"' strlist '"'
   21     | . T_VAR
   22     | . assignstmt
   23     | . expr T_ADD expr
   24     | . expr T_SUB expr
   25     | . expr T_MUL expr
   26     | . expr T_DIV expr
   27     | . expr T_MOD expr
   28     | . expr T_POW expr
   29     | . T_SUB expr
   30     | . expr '<' expr
   31     | . expr '>' expr
   32     | . expr T_LEQ expr
   33     | . expr T_GEQ expr
   34     | . expr T_EQ expr
   35     | . expr T_NEQ expr
   36     | . '`' nestedsubcmd '`'
   37     | . '(' expr ')'
   38 assignstmt: . T_VAR T_ASSIGN expr

    T_NUMBER         shift, and go to state 24
    T_STRING_SCONST  shift, and go to state 25
    T_VAR            shift, and go to state 26
    T_SUB            shift, and go to state 27
    '('              shift, and go to state 28
    '"'              shift, and go to state 29
    '`'              shift, and go to state 30

    expr        go to state 53
    assignstmt  go to state 32


state 23

   18 expr: . T_NUMBER
   19     | . T_STRING_SCONST
   20     | . '"' strlist '"'
   21     | . T_VAR
   22     | . assignstmt
   23     | . expr T_ADD expr
   24     | . expr T_SUB expr
   25     | . expr T_MUL expr
   26     | . expr T_DIV expr
   27     | . expr T_MOD expr
   28     | . expr T_POW expr
   29     | . T_SUB expr
   30     | . expr '<' expr
   31     | . expr '>' expr
   32     | . expr T_LEQ expr
   33     | . expr T_GEQ expr
   34     | . expr T_EQ expr
   35     | . expr T_NEQ expr
   36     | . '`' nestedsubcmd '`'
   37     | . '(' expr ')'
   38 assignstmt: . T_VAR T_ASSIGN expr
   38           | T_VAR T_ASSIGN . expr

    T_NUMBER         shift, and go to state 24
    T_STRING_SCONST  shift, and go to state 25
    T_VAR            shift, and go to state 26
    T_SUB            shift, and go to state 27
    '('              shift, and go to state 28
    '"'              shift, and go to state 29
    '`'              shift, and go to state 30

    expr        go to state 54
    assignstmt  go to state 32


state 24

   18 expr: T_NUMBER .

    $default  reduce using rule 18 (expr)


state 25

   19 expr: T_STRING_SCONST .

    $default  reduce using rule 19 (expr)


state 26

   21 expr: T_VAR .  [$end, T_ELSE, T_FI, T_DONE, '>', '<', T_NEQ, T_EQ, T_GEQ, T_LEQ, T_SUB, T_ADD, T_MOD, T_DIV, T_MUL, T_POW, ';', ')']
   38 assignstmt: T_VAR . T_ASSIGN expr

    T_ASSIGN  shift, and go to state 23

    $default  reduce using rule 21 (expr)


state 27

   18 expr: . T_NUMBER
   19     | . T_STRING_SCONST
   20     | . '"' strlist '"'
   21     | . T_VAR
   22     | . assignstmt
   23     | . expr T_ADD expr
   24     | . expr T_SUB expr
   25     | . expr T_MUL expr
   26     | . expr T_DIV expr
   27     | . expr T_MOD expr
   28     | . expr T_POW expr
   29     | . T_SUB expr
   29     | T_SUB . expr
   30     | . expr '<' expr
   31     | . expr '>' expr
   32     | . expr T_LEQ expr
   33     | . expr T_GEQ expr
   34     | . expr T_EQ expr
   35     | . expr T_NEQ expr
   36     | . '`' nestedsubcmd '`'
   37     | . '(' expr ')'
   38 assignstmt: . T_VAR T_ASSIGN expr

    T_NUMBER         shift, and go to state 24
    T_STRING_SCONST  shift, and go to state 25
    T_VAR            shift, and go to state 26
    T_SUB            shift, and go to state 27
    '('              shift, and go to state 28
    '"'              shift, and go to state 29
    '`'              shift, and go to state 30

    expr        go to state 55
    assignstmt  go to state 32


state 28

   18 expr: . T_NUMBER
   19     | . T_STRING_SCONST
   20     | . '"' strlist '"'
   21     | . T_VAR
   22     | . assignstmt
   23     | . expr T_ADD expr
   24     | . expr T_SUB expr
   25     | . expr T_MUL expr
   26     | . expr T_DIV expr
   27     | . expr T_MOD expr
   28     | . expr T_POW expr
   29     | . T_SUB expr
   30     | . expr '<' expr
   31     | . expr '>' expr
   32     | . expr T_LEQ expr
   33     | . expr T_GEQ expr
   34     | . expr T_EQ expr
   35     | . expr T_NEQ expr
   36     | . '`' nestedsubcmd '`'
   37     | . '(' expr ')'
   37     | '(' . expr ')'
   38 assignstmt: . T_VAR T_ASSIGN expr

    T_NUMBER         shift, and go to state 24
    T_STRING_SCONST  shift, and go to state 25
    T_VAR            shift, and go to state 26
    T_SUB            shift, and go to state 27
    '('              shift, and go to state 28
    '"'              shift, and go to state 29
    '`'              shift, and go to state 30

    expr        go to state 56
    assignstmt  go to state 32


state 29

   13 strlist: . strlist strcomp
   14        | .
   20 expr: '"' . strlist '"'

    $default  reduce using rule 14 (strlist)

    strlist  go to state 57


state 30

   36 expr: '`' . nestedsubcmd '`'
   52 nestedcmdexpr: . T_NUMBER
   53              | . T_STRING
   54              | . T_STRING_SCONST
   55              | . '"' strlist '"'
   56              | . T_VAR
   57              | . '(' expr ')'
   58 nestedcmdexprlist: . nestedcmdexpr
   59                  | . nestedcmdexprlist nestedcmdexpr
   60 nestedsubcmd: . nestedcmdexprlist cmdredirin cmdredirout cmdredirfd
   61             | . nestedsubcmd '|' nestedcmdexprlist cmdredirin cmdredirout cmdredirfd

    T_NUMBER         shift, and go to state 34
    T_STRING         shift, and go to state 35
    T_STRING_SCONST  shift, and go to state 36
    T_VAR            shift, and go to state 37
    '('              shift, and go to state 38
    '"'              shift, and go to state 39

    nestedcmdexpr      go to state 40
    nestedcmdexprlist  go to state 41
    nestedsubcmd       go to state 58


state 31

   23 expr: expr . T_ADD expr
   24     | expr . T_SUB expr
   25     | expr . T_MUL expr
   26     | expr . T_DIV expr
   27     | expr . T_MOD expr
   28     | expr . T_POW expr
   30     | expr . '<' expr
   31     | expr . '>' expr
   32     | expr . T_LEQ expr
   33     | expr . T_GEQ expr
   34     | expr . T_EQ expr
   35     | expr . T_NEQ expr
   45 cmdexpr: '(' expr . ')'

    '>'    shift, and go to state 59
    '<'    shift, and go to state 60
    T_NEQ  shift, and go to state 61
    T_EQ   shift, and go to state 62
    T_GEQ  shift, and go to state 63
    T_LEQ  shift, and go to state 64
    T_SUB  shift, and go to state 65
    T_ADD  shift, and go to state 66
    T_MOD  shift, and go to state 67
    T_DIV  shift, and go to state 68
    T_MUL  shift, and go to state 69
    T_POW  shift, and go to state 70
    ')'    shift, and go to state 71


state 32

   22 expr: assignstmt .

    $default  reduce using rule 22 (expr)


state 33

   13 strlist: strlist . strcomp
   15 strcomp: . T_STRING
   16        | . T_VAR
   17        | . '(' expr ')'
   42 cmdexpr: '"' strlist . '"'

    T_STRING  shift, and go to state 72
    T_VAR     shift, and go to state 73
    '('       shift, and go to state 74
    '"'       shift, and go to state 75

    strcomp  go to state 76


state 34

   52 nestedcmdexpr: T_NUMBER .

    $default  reduce using rule 52 (nestedcmdexpr)


state 35

   53 nestedcmdexpr: T_STRING .

    $default  reduce using rule 53 (nestedcmdexpr)


state 36

   54 nestedcmdexpr: T_STRING_SCONST .

    $default  reduce using rule 54 (nestedcmdexpr)


state 37

   56 nestedcmdexpr: T_VAR .

    $default  reduce using rule 56 (nestedcmdexpr)


state 38

   18 expr: . T_NUMBER
   19     | . T_STRING_SCONST
   20     | . '"' strlist '"'
   21     | . T_VAR
   22     | . assignstmt
   23     | . expr T_ADD expr
   24     | . expr T_SUB expr
   25     | . expr T_MUL expr
   26     | . expr T_DIV expr
   27     | . expr T_MOD expr
   28     | . expr T_POW expr
   29     | . T_SUB expr
   30     | . expr '<' expr
   31     | . expr '>' expr
   32     | . expr T_LEQ expr
   33     | . expr T_GEQ expr
   34     | . expr T_EQ expr
   35     | . expr T_NEQ expr
   36     | . '`' nestedsubcmd '`'
   37     | . '(' expr ')'
   38 assignstmt: . T_VAR T_ASSIGN expr
   57 nestedcmdexpr: '(' . expr ')'

    T_NUMBER         shift, and go to state 24
    T_STRING_SCONST  shift, and go to state 25
    T_VAR            shift, and go to state 26
    T_SUB            shift, and go to state 27
    '('              shift, and go to state 28
    '"'              shift, and go to state 29
    '`'              shift, and go to state 30

    expr        go to state 77
    assignstmt  go to state 32


state 39

   13 strlist: . strlist strcomp
   14        | .
   55 nestedcmdexpr: '"' . strlist '"'

    $default  reduce using rule 14 (strlist)

    strlist  go to state 78


state 40

   58 nestedcmdexprlist: nestedcmdexpr .

    $default  reduce using rule 58 (nestedcmdexprlist)


state 41

   52 nestedcmdexpr: . T_NUMBER
   53              | . T_STRING
   54              | . T_STRING_SCONST
   55              | . '"' strlist '"'
   56              | . T_VAR
   57              | . '(' expr ')'
   59 nestedcmdexprlist: nestedcmdexprlist . nestedcmdexpr
   60 nestedsubcmd: nestedcmdexprlist . cmdredirin cmdredirout cmdredirfd
   65 cmdredirin: . '<' cmdexpr
   66           | .  [T_ERR2OUT, T_OUT2ERR, T_APPEND, '>', '`', '|']

    T_NUMBER         shift, and go to state 34
    T_STRING         shift, and go to state 35
    T_STRING_SCONST  shift, and go to state 36
    T_VAR            shift, and go to state 37
    '<'              shift, and go to state 46
    '('              shift, and go to state 38
    '"'              shift, and go to state 39

    $default  reduce using rule 66 (cmdredirin)

    nestedcmdexpr  go to state 79
    cmdredirin     go to state 80


state 42

   44 cmdexpr: '`' nestedsubcmd . '`'
   61 nestedsubcmd: nestedsubcmd . '|' nestedcmdexprlist cmdredirin cmdredirout cmdredirfd

    '`'  shift, and go to state 81
    '|'  shift, and go to state 82


state 43

    0 $accept: start $end .

    $default  accept


state 44

    4 stmtlist: stmtlistr ';' .  [$end, T_ELSE, T_FI, T_DONE]
    6 stmtlistr: stmtlistr ';' . stmt
    7 stmt: . T_IF '(' expr ')' T_THEN stmtlist T_FI
    8     | . T_IF '(' expr ')' T_THEN stmtlist T_ELSE stmtlist T_FI
    9     | . T_FOR '(' expr ';' expr ';' expr ')' T_DO stmtlist T_DONE
   10     | . T_WHILE '(' expr ')' T_DO stmtlist T_DONE
   11     | . assignstmt
   12     | . cmd
   38 assignstmt: . T_VAR T_ASSIGN expr
   39 cmdexpr: . T_NUMBER
   40        | . T_STRING
   41        | . T_STRING_SCONST
   42        | . '"' strlist '"'
   43        | . T_VAR
   44        | . '`' nestedsubcmd '`'
   45        | . '(' expr ')'
   46 cmdexprlist: . cmdexpr
   47            | . cmdexprlist cmdexpr
   48 cmd: . subcmd
   49    | . subcmd '&'
   50 subcmd: . cmdexprlist cmdredirin cmdredirout cmdredirfd
   51       | . subcmd '|' cmdexprlist cmdredirin cmdredirout cmdredirfd

    T_IF             shift, and go to state 1
    T_FOR            shift, and go to state 2
    T_WHILE          shift, and go to state 3
    T_NUMBER         shift, and go to state 4
    T_STRING         shift, and go to state 5
    T_STRING_SCONST  shift, and go to state 6
    T_VAR            shift, and go to state 7
    '('              shift, and go to state 8
    '"'              shift, and go to state 9
    '`'              shift, and go to state 10

    $default  reduce using rule 4 (stmtlist)

    stmt         go to state 83
    assignstmt   go to state 15
    cmdexpr      go to state 16
    cmdexprlist  go to state 17
    cmd          go to state 18
    subcmd       go to state 19


state 45

   43 cmdexpr: T_VAR .

    $default  reduce using rule 43 (cmdexpr)


state 46

   39 cmdexpr: . T_NUMBER
   40        | . T_STRING
   41        | . T_STRING_SCONST
   42        | . '"' strlist '"'
   43        | . T_VAR
   44        | . '`' nestedsubcmd '`'
   45        | . '(' expr ')'
   65 cmdredirin: '<' . cmdexpr

    T_NUMBER         shift, and go to state 4
    T_STRING         shift, and go to state 5
    T_STRING_SCONST  shift, and go to state 6
    T_VAR            shift, and go to state 45
    '('              shift, and go to state 8
    '"'              shift, and go to state 9
    '`'              shift, and go to state 10

    cmdexpr  go to state 84


state 47

   47 cmdexprlist: cmdexprlist cmdexpr .

    $default  reduce using rule 47 (cmdexprlist)


state 48

   50 subcmd: cmdexprlist cmdredirin . cmdredirout cmdredirfd
   67 cmdredirout: . '>' cmdexpr
   68            | . T_APPEND cmdexpr
   69            | .  [$end, T_ELSE, T_FI, T_DONE, T_ERR2OUT, T_OUT2ERR, ';', '&', '|']

    T_APPEND  shift, and go to state 85
    '>'       shift, and go to state 86

    $default  reduce using rule 69 (cmdredirout)

    cmdredirout  go to state 87


state 49

   49 cmd: subcmd '&' .

    $default  reduce using rule 49 (cmd)


state 50

   39 cmdexpr: . T_NUMBER
   40        | . T_STRING
   41        | . T_STRING_SCONST
   42        | . '"' strlist '"'
   43        | . T_VAR
   44        | . '`' nestedsubcmd '`'
   45        | . '(' expr ')'
   46 cmdexprlist: . cmdexpr
   47            | . cmdexprlist cmdexpr
   51 subcmd: subcmd '|' . cmdexprlist cmdredirin cmdredirout cmdredirfd

    T_NUMBER         shift, and go to state 4
    T_STRING         shift, and go to state 5
    T_STRING_SCONST  shift, and go to state 6
    T_VAR            shift, and go to state 45
    '('              shift, and go to state 8
    '"'              shift, and go to state 9
    '`'              shift, and go to state 10

    cmdexpr      go to state 16
    cmdexprlist  go to state 88


state 51

    7 stmt: T_IF '(' expr . ')' T_THEN stmtlist T_FI
    8     | T_IF '(' expr . ')' T_THEN stmtlist T_ELSE stmtlist T_FI
   23 expr: expr . T_ADD expr
   24     | expr . T_SUB expr
   25     | expr . T_MUL expr
   26     | expr . T_DIV expr
   27     | expr . T_MOD expr
   28     | expr . T_POW expr
   30     | expr . '<' expr
   31     | expr . '>' expr
   32     | expr . T_LEQ expr
   33     | expr . T_GEQ expr
   34     | expr . T_EQ expr
   35     | expr . T_NEQ expr

    '>'    shift, and go to state 59
    '<'    shift, and go to state 60
    T_NEQ  shift, and go to state 61
    T_EQ   shift, and go to state 62
    T_GEQ  shift, and go to state 63
    T_LEQ  shift, and go to state 64
    T_SUB  shift, and go to state 65
    T_ADD  shift, and go to state 66
    T_MOD  shift, and go to state 67
    T_DIV  shift, and go to state 68
    T_MUL  shift, and go to state 69
    T_POW  shift, and go to state 70
    ')'    shift, and go to state 89


state 52

    9 stmt: T_FOR '(' expr . ';' expr ';' expr ')' T_DO stmtlist T_DONE
   23 expr: expr . T_ADD expr
   24     | expr . T_SUB expr
   25     | expr . T_MUL expr
   26     | expr . T_DIV expr
   27     | expr . T_MOD expr
   28     | expr . T_POW expr
   30     | expr . '<' expr
   31     | expr . '>' expr
   32     | expr . T_LEQ expr
   33     | expr . T_GEQ expr
   34     | expr . T_EQ expr
   35     | expr . T_NEQ expr

    '>'    shift, and go to state 59
    '<'    shift, and go to state 60
    T_NEQ  shift, and go to state 61
    T_EQ   shift, and go to state 62
    T_GEQ  shift, and go to state 63
    T_LEQ  shift, and go to state 64
    T_SUB  shift, and go to state 65
    T_ADD  shift, and go to state 66
    T_MOD  shift, and go to state 67
    T_DIV  shift, and go to state 68
    T_MUL  shift, and go to state 69
    T_POW  shift, and go to state 70
    ';'    shift, and go to state 90


state 53

   10 stmt: T_WHILE '(' expr . ')' T_DO stmtlist T_DONE
   23 expr: expr . T_ADD expr
   24     | expr . T_SUB expr
   25     | expr . T_MUL expr
   26     | expr . T_DIV expr
   27     | expr . T_MOD expr
   28     | expr . T_POW expr
   30     | expr . '<' expr
   31     | expr . '>' expr
   32     | expr . T_LEQ expr
   33     | expr . T_GEQ expr
   34     | expr . T_EQ expr
   35     | expr . T_NEQ expr

    '>'    shift, and go to state 59
    '<'    shift, and go to state 60
    T_NEQ  shift, and go to state 61
    T_EQ   shift, and go to state 62
    T_GEQ  shift, and go to state 63
    T_LEQ  shift, and go to state 64
    T_SUB  shift, and go to state 65
    T_ADD  shift, and go to state 66
    T_MOD  shift, and go to state 67
    T_DIV  shift, and go to state 68
    T_MUL  shift, and go to state 69
    T_POW  shift, and go to state 70
    ')'    shift, and go to state 91


state 54

   23 expr: expr . T_ADD expr
   24     | expr . T_SUB expr
   25     | expr . T_MUL expr
   26     | expr . T_DIV expr
   27     | expr . T_MOD expr
   28     | expr . T_POW expr
   30     | expr . '<' expr
   31     | expr . '>' expr
   32     | expr . T_LEQ expr
   33     | expr . T_GEQ expr
   34     | expr . T_EQ expr
   35     | expr . T_NEQ expr
   38 assignstmt: T_VAR T_ASSIGN expr .  [$end, T_ELSE, T_FI, T_DONE, ';', ')']

    T_SUB  shift, and go to state 65
    T_ADD  shift, and go to state 66
    T_MOD  shift, and go to state 67
    T_DIV  shift, and go to state 68
    T_MUL  shift, and go to state 69
    T_POW  shift, and go to state 70

    '>'    error (nonassociative)
    '<'    error (nonassociative)
    T_NEQ  error (nonassociative)
    T_EQ   error (nonassociative)
    T_GEQ  error (nonassociative)
    T_LEQ  error (nonassociative)

    $default  reduce using rule 38 (assignstmt)

    Conflict between rule 38 and token '>' resolved as an error (%nonassoc '>').
    Conflict between rule 38 and token '<' resolved as an error (%nonassoc '<').
    Conflict between rule 38 and token T_NEQ resolved as an error (%nonassoc T_NEQ).
    Conflict between rule 38 and token T_EQ resolved as an error (%nonassoc T_EQ).
    Conflict between rule 38 and token T_GEQ resolved as an error (%nonassoc T_GEQ).
    Conflict between rule 38 and token T_LEQ resolved as an error (%nonassoc T_LEQ).
    Conflict between rule 38 and token T_SUB resolved as shift (T_ASSIGN < T_SUB).
    Conflict between rule 38 and token T_ADD resolved as shift (T_ASSIGN < T_ADD).
    Conflict between rule 38 and token T_MOD resolved as shift (T_ASSIGN < T_MOD).
    Conflict between rule 38 and token T_DIV resolved as shift (T_ASSIGN < T_DIV).
    Conflict between rule 38 and token T_MUL resolved as shift (T_ASSIGN < T_MUL).
    Conflict between rule 38 and token T_POW resolved as shift (T_ASSIGN < T_POW).


state 55

   23 expr: expr . T_ADD expr
   24     | expr . T_SUB expr
   25     | expr . T_MUL expr
   26     | expr . T_DIV expr
   27     | expr . T_MOD expr
   28     | expr . T_POW expr
   29     | T_SUB expr .  [$end, T_ELSE, T_FI, T_DONE, '>', '<', T_NEQ, T_EQ, T_GEQ, T_LEQ, T_SUB, T_ADD, T_MOD, T_DIV, T_MUL, ';', ')']
   30     | expr . '<' expr
   31     | expr . '>' expr
   32     | expr . T_LEQ expr
   33     | expr . T_GEQ expr
   34     | expr . T_EQ expr
   35     | expr . T_NEQ expr

    T_POW  shift, and go to state 70

    $default  reduce using rule 29 (expr)

    Conflict between rule 29 and token '>' resolved as reduce ('>' < T_NEG).
    Conflict between rule 29 and token '<' resolved as reduce ('<' < T_NEG).
    Conflict between rule 29 and token T_NEQ resolved as reduce (T_NEQ < T_NEG).
    Conflict between rule 29 and token T_EQ resolved as reduce (T_EQ < T_NEG).
    Conflict between rule 29 and token T_GEQ resolved as reduce (T_GEQ < T_NEG).
    Conflict between rule 29 and token T_LEQ resolved as reduce (T_LEQ < T_NEG).
    Conflict between rule 29 and token T_SUB resolved as reduce (T_SUB < T_NEG).
    Conflict between rule 29 and token T_ADD resolved as reduce (T_ADD < T_NEG).
    Conflict between rule 29 and token T_MOD resolved as reduce (T_MOD < T_NEG).
    Conflict between rule 29 and token T_DIV resolved as reduce (T_DIV < T_NEG).
    Conflict between rule 29 and token T_MUL resolved as reduce (T_MUL < T_NEG).
    Conflict between rule 29 and token T_POW resolved as shift (T_NEG < T_POW).


state 56

   23 expr: expr . T_ADD expr
   24     | expr . T_SUB expr
   25     | expr . T_MUL expr
   26     | expr . T_DIV expr
   27     | expr . T_MOD expr
   28     | expr . T_POW expr
   30     | expr . '<' expr
   31     | expr . '>' expr
   32     | expr . T_LEQ expr
   33     | expr . T_GEQ expr
   34     | expr . T_EQ expr
   35     | expr . T_NEQ expr
   37     | '(' expr . ')'

    '>'    shift, and go to state 59
    '<'    shift, and go to state 60
    T_NEQ  shift, and go to state 61
    T_EQ   shift, and go to state 62
    T_GEQ  shift, and go to state 63
    T_LEQ  shift, and go to state 64
    T_SUB  shift, and go to state 65
    T_ADD  shift, and go to state 66
    T_MOD  shift, and go to state 67
    T_DIV  shift, and go to state 68
    T_MUL  shift, and go to state 69
    T_POW  shift, and go to state 70
    ')'    shift, and go to state 92


state 57

   13 strlist: strlist . strcomp
   15 strcomp: . T_STRING
   16        | . T_VAR
   17        | . '(' expr ')'
   20 expr: '"' strlist . '"'

    T_STRING  shift, and go to state 72
    T_VAR     shift, and go to state 73
    '('       shift, and go to state 74
    '"'       shift, and go to state 93

    strcomp  go to state 76


state 58

   36 expr: '`' nestedsubcmd . '`'
   61 nestedsubcmd: nestedsubcmd . '|' nestedcmdexprlist cmdredirin cmdredirout cmdredirfd

    '`'  shift, and go to state 94
    '|'  shift, and go to state 82


state 59

   18 expr: . T_NUMBER
   19     | . T_STRING_SCONST
   20     | . '"' strlist '"'
   21     | . T_VAR
   22     | . assignstmt
   23     | . expr T_ADD expr
   24     | . expr T_SUB expr
   25     | . expr T_MUL expr
   26     | . expr T_DIV expr
   27     | . expr T_MOD expr
   28     | . expr T_POW expr
   29     | . T_SUB expr
   30     | . expr '<' expr
   31     | . expr '>' expr
   31     | expr '>' . expr
   32     | . expr T_LEQ expr
   33     | . expr T_GEQ expr
   34     | . expr T_EQ expr
   35     | . expr T_NEQ expr
   36     | . '`' nestedsubcmd '`'
   37     | . '(' expr ')'
   38 assignstmt: . T_VAR T_ASSIGN expr

    T_NUMBER         shift, and go to state 24
    T_STRING_SCONST  shift, and go to state 25
    T_VAR            shift, and go to state 26
    T_SUB            shift, and go to state 27
    '('              shift, and go to state 28
    '"'              shift, and go to state 29
    '`'              shift, and go to state 30

    expr        go to state 95
    assignstmt  go to state 32


state 60

   18 expr: . T_NUMBER
   19     | . T_STRING_SCONST
   20     | . '"' strlist '"'
   21     | . T_VAR
   22     | . assignstmt
   23     | . expr T_ADD expr
   24     | . expr T_SUB expr
   25     | . expr T_MUL expr
   26     | . expr T_DIV expr
   27     | . expr T_MOD expr
   28     | . expr T_POW expr
   29     | . T_SUB expr
   30     | . expr '<' expr
   30     | expr '<' . expr
   31     | . expr '>' expr
   32     | . expr T_LEQ expr
   33     | . expr T_GEQ expr
   34     | . expr T_EQ expr
   35     | . expr T_NEQ expr
   36     | . '`' nestedsubcmd '`'
   37     | . '(' expr ')'
   38 assignstmt: . T_VAR T_ASSIGN expr

    T_NUMBER         shift, and go to state 24
    T_STRING_SCONST  shift, and go to state 25
    T_VAR            shift, and go to state 26
    T_SUB            shift, and go to state 27
    '('              shift, and go to state 28
    '"'              shift, and go to state 29
    '`'              shift, and go to state 30

    expr        go to state 96
    assignstmt  go to state 32


state 61

   18 expr: . T_NUMBER
   19     | . T_STRING_SCONST
   20     | . '"' strlist '"'
   21     | . T_VAR
   22     | . assignstmt
   23     | . expr T_ADD expr
   24     | . expr T_SUB expr
   25     | . expr T_MUL expr
   26     | . expr T_DIV expr
   27     | . expr T_MOD expr
   28     | . expr T_POW expr
   29     | . T_SUB expr
   30     | . expr '<' expr
   31     | . expr '>' expr
   32     | . expr T_LEQ expr
   33     | . expr T_GEQ expr
   34     | . expr T_EQ expr
   35     | . expr T_NEQ expr
   35     | expr T_NEQ . expr
   36     | . '`' nestedsubcmd '`'
   37     | . '(' expr ')'
   38 assignstmt: . T_VAR T_ASSIGN expr

    T_NUMBER         shift, and go to state 24
    T_STRING_SCONST  shift, and go to state 25
    T_VAR            shift, and go to state 26
    T_SUB            shift, and go to state 27
    '('              shift, and go to state 28
    '"'              shift, and go to state 29
    '`'              shift, and go to state 30

    expr        go to state 97
    assignstmt  go to state 32


state 62

   18 expr: . T_NUMBER
   19     | . T_STRING_SCONST
   20     | . '"' strlist '"'
   21     | . T_VAR
   22     | . assignstmt
   23     | . expr T_ADD expr
   24     | . expr T_SUB expr
   25     | . expr T_MUL expr
   26     | . expr T_DIV expr
   27     | . expr T_MOD expr
   28     | . expr T_POW expr
   29     | . T_SUB expr
   30     | . expr '<' expr
   31     | . expr '>' expr
   32     | . expr T_LEQ expr
   33     | . expr T_GEQ expr
   34     | . expr T_EQ expr
   34     | expr T_EQ . expr
   35     | . expr T_NEQ expr
   36     | . '`' nestedsubcmd '`'
   37     | . '(' expr ')'
   38 assignstmt: . T_VAR T_ASSIGN expr

    T_NUMBER         shift, and go to state 24
    T_STRING_SCONST  shift, and go to state 25
    T_VAR            shift, and go to state 26
    T_SUB            shift, and go to state 27
    '('              shift, and go to state 28
    '"'              shift, and go to state 29
    '`'              shift, and go to state 30

    expr        go to state 98
    assignstmt  go to state 32


state 63

   18 expr: . T_NUMBER
   19     | . T_STRING_SCONST
   20     | . '"' strlist '"'
   21     | . T_VAR
   22     | . assignstmt
   23     | . expr T_ADD expr
   24     | . expr T_SUB expr
   25     | . expr T_MUL expr
   26     | . expr T_DIV expr
   27     | . expr T_MOD expr
   28     | . expr T_POW expr
   29     | . T_SUB expr
   30     | . expr '<' expr
   31     | . expr '>' expr
   32     | . expr T_LEQ expr
   33     | . expr T_GEQ expr
   33     | expr T_GEQ . expr
   34     | . expr T_EQ expr
   35     | . expr T_NEQ expr
   36     | . '`' nestedsubcmd '`'
   37     | . '(' expr ')'
   38 assignstmt: . T_VAR T_ASSIGN expr

    T_NUMBER         shift, and go to state 24
    T_STRING_SCONST  shift, and go to state 25
    T_VAR            shift, and go to state 26
    T_SUB            shift, and go to state 27
    '('              shift, and go to state 28
    '"'              shift, and go to state 29
    '`'              shift, and go to state 30

    expr        go to state 99
    assignstmt  go to state 32


state 64

   18 expr: . T_NUMBER
   19     | . T_STRING_SCONST
   20     | . '"' strlist '"'
   21     | . T_VAR
   22     | . assignstmt
   23     | . expr T_ADD expr
   24     | . expr T_SUB expr
   25     | . expr T_MUL expr
   26     | . expr T_DIV expr
   27     | . expr T_MOD expr
   28     | . expr T_POW expr
   29     | . T_SUB expr
   30     | . expr '<' expr
   31     | . expr '>' expr
   32     | . expr T_LEQ expr
   32     | expr T_LEQ . expr
   33     | . expr T_GEQ expr
   34     | . expr T_EQ expr
   35     | . expr T_NEQ expr
   36     | . '`' nestedsubcmd '`'
   37     | . '(' expr ')'
   38 assignstmt: . T_VAR T_ASSIGN expr

    T_NUMBER         shift, and go to state 24
    T_STRING_SCONST  shift, and go to state 25
    T_VAR            shift, and go to state 26
    T_SUB            shift, and go to state 27
    '('              shift, and go to state 28
    '"'              shift, and go to state 29
    '`'              shift, and go to state 30

    expr        go to state 100
    assignstmt  go to state 32


state 65

   18 expr: . T_NUMBER
   19     | . T_STRING_SCONST
   20     | . '"' strlist '"'
   21     | . T_VAR
   22     | . assignstmt
   23     | . expr T_ADD expr
   24     | . expr T_SUB expr
   24     | expr T_SUB . expr
   25     | . expr T_MUL expr
   26     | . expr T_DIV expr
   27     | . expr T_MOD expr
   28     | . expr T_POW expr
   29     | . T_SUB expr
   30     | . expr '<' expr
   31     | . expr '>' expr
   32     | . expr T_LEQ expr
   33     | . expr T_GEQ expr
   34     | . expr T_EQ expr
   35     | . expr T_NEQ expr
   36     | . '`' nestedsubcmd '`'
   37     | . '(' expr ')'
   38 assignstmt: . T_VAR T_ASSIGN expr

    T_NUMBER         shift, and go to state 24
    T_STRING_SCONST  shift, and go to state 25
    T_VAR            shift, and go to state 26
    T_SUB            shift, and go to state 27
    '('              shift, and go to state 28
    '"'              shift, and go to state 29
    '`'              shift, and go to state 30

    expr        go to state 101
    assignstmt  go to state 32


state 66

   18 expr: . T_NUMBER
   19     | . T_STRING_SCONST
   20     | . '"' strlist '"'
   21     | . T_VAR
   22     | . assignstmt
   23     | . expr T_ADD expr
   23     | expr T_ADD . expr
   24     | . expr T_SUB expr
   25     | . expr T_MUL expr
   26     | . expr T_DIV expr
   27     | . expr T_MOD expr
   28     | . expr T_POW expr
   29     | . T_SUB expr
   30     | . expr '<' expr
   31     | . expr '>' expr
   32     | . expr T_LEQ expr
   33     | . expr T_GEQ expr
   34     | . expr T_EQ expr
   35     | . expr T_NEQ expr
   36     | . '`' nestedsubcmd '`'
   37     | . '(' expr ')'
   38 assignstmt: . T_VAR T_ASSIGN expr

    T_NUMBER         shift, and go to state 24
    T_STRING_SCONST  shift, and go to state 25
    T_VAR            shift, and go to state 26
    T_SUB            shift, and go to state 27
    '('              shift, and go to state 28
    '"'              shift, and go to state 29
    '`'              shift, and go to state 30

    expr        go to state 102
    assignstmt  go to state 32


state 67

   18 expr: . T_NUMBER
   19     | . T_STRING_SCONST
   20     | . '"' strlist '"'
   21     | . T_VAR
   22     | . assignstmt
   23     | . expr T_ADD expr
   24     | . expr T_SUB expr
   25     | . expr T_MUL expr
   26     | . expr T_DIV expr
   27     | . expr T_MOD expr
   27     | expr T_MOD . expr
   28     | . expr T_POW expr
   29     | . T_SUB expr
   30     | . expr '<' expr
   31     | . expr '>' expr
   32     | . expr T_LEQ expr
   33     | . expr T_GEQ expr
   34     | . expr T_EQ expr
   35     | . expr T_NEQ expr
   36     | . '`' nestedsubcmd '`'
   37     | . '(' expr ')'
   38 assignstmt: . T_VAR T_ASSIGN expr

    T_NUMBER         shift, and go to state 24
    T_STRING_SCONST  shift, and go to state 25
    T_VAR            shift, and go to state 26
    T_SUB            shift, and go to state 27
    '('              shift, and go to state 28
    '"'              shift, and go to state 29
    '`'              shift, and go to state 30

    expr        go to state 103
    assignstmt  go to state 32


state 68

   18 expr: . T_NUMBER
   19     | . T_STRING_SCONST
   20     | . '"' strlist '"'
   21     | . T_VAR
   22     | . assignstmt
   23     | . expr T_ADD expr
   24     | . expr T_SUB expr
   25     | . expr T_MUL expr
   26     | . expr T_DIV expr
   26     | expr T_DIV . expr
   27     | . expr T_MOD expr
   28     | . expr T_POW expr
   29     | . T_SUB expr
   30     | . expr '<' expr
   31     | . expr '>' expr
   32     | . expr T_LEQ expr
   33     | . expr T_GEQ expr
   34     | . expr T_EQ expr
   35     | . expr T_NEQ expr
   36     | . '`' nestedsubcmd '`'
   37     | . '(' expr ')'
   38 assignstmt: . T_VAR T_ASSIGN expr

    T_NUMBER         shift, and go to state 24
    T_STRING_SCONST  shift, and go to state 25
    T_VAR            shift, and go to state 26
    T_SUB            shift, and go to state 27
    '('              shift, and go to state 28
    '"'              shift, and go to state 29
    '`'              shift, and go to state 30

    expr        go to state 104
    assignstmt  go to state 32


state 69

   18 expr: . T_NUMBER
   19     | . T_STRING_SCONST
   20     | . '"' strlist '"'
   21     | . T_VAR
   22     | . assignstmt
   23     | . expr T_ADD expr
   24     | . expr T_SUB expr
   25     | . expr T_MUL expr
   25     | expr T_MUL . expr
   26     | . expr T_DIV expr
   27     | . expr T_MOD expr
   28     | . expr T_POW expr
   29     | . T_SUB expr
   30     | . expr '<' expr
   31     | . expr '>' expr
   32     | . expr T_LEQ expr
   33     | . expr T_GEQ expr
   34     | . expr T_EQ expr
   35     | . expr T_NEQ expr
   36     | . '`' nestedsubcmd '`'
   37     | . '(' expr ')'
   38 assignstmt: . T_VAR T_ASSIGN expr

    T_NUMBER         shift, and go to state 24
    T_STRING_SCONST  shift, and go to state 25
    T_VAR            shift, and go to state 26
    T_SUB            shift, and go to state 27
    '('              shift, and go to state 28
    '"'              shift, and go to state 29
    '`'              shift, and go to state 30

    expr        go to state 105
    assignstmt  go to state 32


state 70

   18 expr: . T_NUMBER
   19     | . T_STRING_SCONST
   20     | . '"' strlist '"'
   21     | . T_VAR
   22     | . assignstmt
   23     | . expr T_ADD expr
   24     | . expr T_SUB expr
   25     | . expr T_MUL expr
   26     | . expr T_DIV expr
   27     | . expr T_MOD expr
   28     | . expr T_POW expr
   28     | expr T_POW . expr
   29     | . T_SUB expr
   30     | . expr '<' expr
   31     | . expr '>' expr
   32     | . expr T_LEQ expr
   33     | . expr T_GEQ expr
   34     | . expr T_EQ expr
   35     | . expr T_NEQ expr
   36     | . '`' nestedsubcmd '`'
   37     | . '(' expr ')'
   38 assignstmt: . T_VAR T_ASSIGN expr

    T_NUMBER         shift, and go to state 24
    T_STRING_SCONST  shift, and go to state 25
    T_VAR            shift, and go to state 26
    T_SUB            shift, and go to state 27
    '('              shift, and go to state 28
    '"'              shift, and go to state 29
    '`'              shift, and go to state 30

    expr        go to state 106
    assignstmt  go to state 32


state 71

   45 cmdexpr: '(' expr ')' .

    $default  reduce using rule 45 (cmdexpr)


state 72

   15 strcomp: T_STRING .

    $default  reduce using rule 15 (strcomp)


state 73

   16 strcomp: T_VAR .

    $default  reduce using rule 16 (strcomp)


state 74

   17 strcomp: '(' . expr ')'
   18 expr: . T_NUMBER
   19     | . T_STRING_SCONST
   20     | . '"' strlist '"'
   21     | . T_VAR
   22     | . assignstmt
   23     | . expr T_ADD expr
   24     | . expr T_SUB expr
   25     | . expr T_MUL expr
   26     | . expr T_DIV expr
   27     | . expr T_MOD expr
   28     | . expr T_POW expr
   29     | . T_SUB expr
   30     | . expr '<' expr
   31     | . expr '>' expr
   32     | . expr T_LEQ expr
   33     | . expr T_GEQ expr
   34     | . expr T_EQ expr
   35     | . expr T_NEQ expr
   36     | . '`' nestedsubcmd '`'
   37     | . '(' expr ')'
   38 assignstmt: . T_VAR T_ASSIGN expr

    T_NUMBER         shift, and go to state 24
    T_STRING_SCONST  shift, and go to state 25
    T_VAR            shift, and go to state 26
    T_SUB            shift, and go to state 27
    '('              shift, and go to state 28
    '"'              shift, and go to state 29
    '`'              shift, and go to state 30

    expr        go to state 107
    assignstmt  go to state 32


state 75

   42 cmdexpr: '"' strlist '"' .

    $default  reduce using rule 42 (cmdexpr)


state 76

   13 strlist: strlist strcomp .

    $default  reduce using rule 13 (strlist)


state 77

   23 expr: expr . T_ADD expr
   24     | expr . T_SUB expr
   25     | expr . T_MUL expr
   26     | expr . T_DIV expr
   27     | expr . T_MOD expr
   28     | expr . T_POW expr
   30     | expr . '<' expr
   31     | expr . '>' expr
   32     | expr . T_LEQ expr
   33     | expr . T_GEQ expr
   34     | expr . T_EQ expr
   35     | expr . T_NEQ expr
   57 nestedcmdexpr: '(' expr . ')'

    '>'    shift, and go to state 59
    '<'    shift, and go to state 60
    T_NEQ  shift, and go to state 61
    T_EQ   shift, and go to state 62
    T_GEQ  shift, and go to state 63
    T_LEQ  shift, and go to state 64
    T_SUB  shift, and go to state 65
    T_ADD  shift, and go to state 66
    T_MOD  shift, and go to state 67
    T_DIV  shift, and go to state 68
    T_MUL  shift, and go to state 69
    T_POW  shift, and go to state 70
    ')'    shift, and go to state 108


state 78

   13 strlist: strlist . strcomp
   15 strcomp: . T_STRING
   16        | . T_VAR
   17        | . '(' expr ')'
   55 nestedcmdexpr: '"' strlist . '"'

    T_STRING  shift, and go to state 72
    T_VAR     shift, and go to state 73
    '('       shift, and go to state 74
    '"'       shift, and go to state 109

    strcomp  go to state 76


state 79

   59 nestedcmdexprlist: nestedcmdexprlist nestedcmdexpr .

    $default  reduce using rule 59 (nestedcmdexprlist)


state 80

   60 nestedsubcmd: nestedcmdexprlist cmdredirin . cmdredirout cmdredirfd
   67 cmdredirout: . '>' cmdexpr
   68            | . T_APPEND cmdexpr
   69            | .  [T_ERR2OUT, T_OUT2ERR, '`', '|']

    T_APPEND  shift, and go to state 85
    '>'       shift, and go to state 86

    $default  reduce using rule 69 (cmdredirout)

    cmdredirout  go to state 110


state 81

   44 cmdexpr: '`' nestedsubcmd '`' .

    $default  reduce using rule 44 (cmdexpr)


state 82

   52 nestedcmdexpr: . T_NUMBER
   53              | . T_STRING
   54              | . T_STRING_SCONST
   55              | . '"' strlist '"'
   56              | . T_VAR
   57              | . '(' expr ')'
   58 nestedcmdexprlist: . nestedcmdexpr
   59                  | . nestedcmdexprlist nestedcmdexpr
   61 nestedsubcmd: nestedsubcmd '|' . nestedcmdexprlist cmdredirin cmdredirout cmdredirfd

    T_NUMBER         shift, and go to state 34
    T_STRING         shift, and go to state 35
    T_STRING_SCONST  shift, and go to state 36
    T_VAR            shift, and go to state 37
    '('              shift, and go to state 38
    '"'              shift, and go to state 39

    nestedcmdexpr      go to state 40
    nestedcmdexprlist  go to state 111


state 83

    6 stmtlistr: stmtlistr ';' stmt .

    $default  reduce using rule 6 (stmtlistr)


state 84

   65 cmdredirin: '<' cmdexpr .

    $default  reduce using rule 65 (cmdredirin)


state 85

   39 cmdexpr: . T_NUMBER
   40        | . T_STRING
   41        | . T_STRING_SCONST
   42        | . '"' strlist '"'
   43        | . T_VAR
   44        | . '`' nestedsubcmd '`'
   45        | . '(' expr ')'
   68 cmdredirout: T_APPEND . cmdexpr

    T_NUMBER         shift, and go to state 4
    T_STRING         shift, and go to state 5
    T_STRING_SCONST  shift, and go to state 6
    T_VAR            shift, and go to state 45
    '('              shift, and go to state 8
    '"'              shift, and go to state 9
    '`'              shift, and go to state 10

    cmdexpr  go to state 112


state 86

   39 cmdexpr: . T_NUMBER
   40        | . T_STRING
   41        | . T_STRING_SCONST
   42        | . '"' strlist '"'
   43        | . T_VAR
   44        | . '`' nestedsubcmd '`'
   45        | . '(' expr ')'
   67 cmdredirout: '>' . cmdexpr

    T_NUMBER         shift, and go to state 4
    T_STRING         shift, and go to state 5
    T_STRING_SCONST  shift, and go to state 6
    T_VAR            shift, and go to state 45
    '('              shift, and go to state 8
    '"'              shift, and go to state 9
    '`'              shift, and go to state 10

    cmdexpr  go to state 113


state 87

   50 subcmd: cmdexprlist cmdredirin cmdredirout . cmdredirfd
   62 cmdredirfd: . T_ERR2OUT
   63           | . T_OUT2ERR
   64           | .  [$end, T_ELSE, T_FI, T_DONE, ';', '&', '|']

    T_ERR2OUT  shift, and go to state 114
    T_OUT2ERR  shift, and go to state 115

    $default  reduce using rule 64 (cmdredirfd)

    cmdredirfd  go to state 116


state 88

   39 cmdexpr: . T_NUMBER
   40        | . T_STRING
   41        | . T_STRING_SCONST
   42        | . '"' strlist '"'
   43        | . T_VAR
   44        | . '`' nestedsubcmd '`'
   45        | . '(' expr ')'
   47 cmdexprlist: cmdexprlist . cmdexpr
   51 subcmd: subcmd '|' cmdexprlist . cmdredirin cmdredirout cmdredirfd
   65 cmdredirin: . '<' cmdexpr
   66           | .  [$end, T_ELSE, T_FI, T_DONE, T_ERR2OUT, T_OUT2ERR, T_APPEND, '>', ';', '&', '|']

    T_NUMBER         shift, and go to state 4
    T_STRING         shift, and go to state 5
    T_STRING_SCONST  shift, and go to state 6
    T_VAR            shift, and go to state 45
    '<'              shift, and go to state 46
    '('              shift, and go to state 8
    '"'              shift, and go to state 9
    '`'              shift, and go to state 10

    $default  reduce using rule 66 (cmdredirin)

    cmdexpr     go to state 47
    cmdredirin  go to state 117


state 89

    7 stmt: T_IF '(' expr ')' . T_THEN stmtlist T_FI
    8     | T_IF '(' expr ')' . T_THEN stmtlist T_ELSE stmtlist T_FI

    T_THEN  shift, and go to state 118


state 90

    9 stmt: T_FOR '(' expr ';' . expr ';' expr ')' T_DO stmtlist T_DONE
   18 expr: . T_NUMBER
   19     | . T_STRING_SCONST
   20     | . '"' strlist '"'
   21     | . T_VAR
   22     | . assignstmt
   23     | . expr T_ADD expr
   24     | . expr T_SUB expr
   25     | . expr T_MUL expr
   26     | . expr T_DIV expr
   27     | . expr T_MOD expr
   28     | . expr T_POW expr
   29     | . T_SUB expr
   30     | . expr '<' expr
   31     | . expr '>' expr
   32     | . expr T_LEQ expr
   33     | . expr T_GEQ expr
   34     | . expr T_EQ expr
   35     | . expr T_NEQ expr
   36     | . '`' nestedsubcmd '`'
   37     | . '(' expr ')'
   38 assignstmt: . T_VAR T_ASSIGN expr

    T_NUMBER         shift, and go to state 24
    T_STRING_SCONST  shift, and go to state 25
    T_VAR            shift, and go to state 26
    T_SUB            shift, and go to state 27
    '('              shift, and go to state 28
    '"'              shift, and go to state 29
    '`'              shift, and go to state 30

    expr        go to state 119
    assignstmt  go to state 32


state 91

   10 stmt: T_WHILE '(' expr ')' . T_DO stmtlist T_DONE

    T_DO  shift, and go to state 120


state 92

   37 expr: '(' expr ')' .

    $default  reduce using rule 37 (expr)


state 93

   20 expr: '"' strlist '"' .

    $default  reduce using rule 20 (expr)


state 94

   36 expr: '`' nestedsubcmd '`' .

    $default  reduce using rule 36 (expr)


state 95

   23 expr: expr . T_ADD expr
   24     | expr . T_SUB expr
   25     | expr . T_MUL expr
   26     | expr . T_DIV expr
   27     | expr . T_MOD expr
   28     | expr . T_POW expr
   30     | expr . '<' expr
   31     | expr . '>' expr
   31     | expr '>' expr .  [$end, T_ELSE, T_FI, T_DONE, ';', ')']
   32     | expr . T_LEQ expr
   33     | expr . T_GEQ expr
   34     | expr . T_EQ expr
   35     | expr . T_NEQ expr

    T_SUB  shift, and go to state 65
    T_ADD  shift, and go to state 66
    T_MOD  shift, and go to state 67
    T_DIV  shift, and go to state 68
    T_MUL  shift, and go to state 69
    T_POW  shift, and go to state 70

    '>'    error (nonassociative)
    '<'    error (nonassociative)
    T_NEQ  error (nonassociative)
    T_EQ   error (nonassociative)
    T_GEQ  error (nonassociative)
    T_LEQ  error (nonassociative)

    $default  reduce using rule 31 (expr)

    Conflict between rule 31 and token '>' resolved as an error (%nonassoc '>').
    Conflict between rule 31 and token '<' resolved as an error (%nonassoc '<').
    Conflict between rule 31 and token T_NEQ resolved as an error (%nonassoc T_NEQ).
    Conflict between rule 31 and token T_EQ resolved as an error (%nonassoc T_EQ).
    Conflict between rule 31 and token T_GEQ resolved as an error (%nonassoc T_GEQ).
    Conflict between rule 31 and token T_LEQ resolved as an error (%nonassoc T_LEQ).
    Conflict between rule 31 and token T_SUB resolved as shift ('>' < T_SUB).
    Conflict between rule 31 and token T_ADD resolved as shift ('>' < T_ADD).
    Conflict between rule 31 and token T_MOD resolved as shift ('>' < T_MOD).
    Conflict between rule 31 and token T_DIV resolved as shift ('>' < T_DIV).
    Conflict between rule 31 and token T_MUL resolved as shift ('>' < T_MUL).
    Conflict between rule 31 and token T_POW resolved as shift ('>' < T_POW).


state 96

   23 expr: expr . T_ADD expr
   24     | expr . T_SUB expr
   25     | expr . T_MUL expr
   26     | expr . T_DIV expr
   27     | expr . T_MOD expr
   28     | expr . T_POW expr
   30     | expr . '<' expr
   30     | expr '<' expr .  [$end, T_ELSE, T_FI, T_DONE, ';', ')']
   31     | expr . '>' expr
   32     | expr . T_LEQ expr
   33     | expr . T_GEQ expr
   34     | expr . T_EQ expr
   35     | expr . T_NEQ expr

    T_SUB  shift, and go to state 65
    T_ADD  shift, and go to state 66
    T_MOD  shift, and go to state 67
    T_DIV  shift, and go to state 68
    T_MUL  shift, and go to state 69
    T_POW  shift, and go to state 70

    '>'    error (nonassociative)
    '<'    error (nonassociative)
    T_NEQ  error (nonassociative)
    T_EQ   error (nonassociative)
    T_GEQ  error (nonassociative)
    T_LEQ  error (nonassociative)

    $default  reduce using rule 30 (expr)

    Conflict between rule 30 and token '>' resolved as an error (%nonassoc '>').
    Conflict between rule 30 and token '<' resolved as an error (%nonassoc '<').
    Conflict between rule 30 and token T_NEQ resolved as an error (%nonassoc T_NEQ).
    Conflict between rule 30 and token T_EQ resolved as an error (%nonassoc T_EQ).
    Conflict between rule 30 and token T_GEQ resolved as an error (%nonassoc T_GEQ).
    Conflict between rule 30 and token T_LEQ resolved as an error (%nonassoc T_LEQ).
    Conflict between rule 30 and token T_SUB resolved as shift ('<' < T_SUB).
    Conflict between rule 30 and token T_ADD resolved as shift ('<' < T_ADD).
    Conflict between rule 30 and token T_MOD resolved as shift ('<' < T_MOD).
    Conflict between rule 30 and token T_DIV resolved as shift ('<' < T_DIV).
    Conflict between rule 30 and token T_MUL resolved as shift ('<' < T_MUL).
    Conflict between rule 30 and token T_POW resolved as shift ('<' < T_POW).


state 97

   23 expr: expr . T_ADD expr
   24     | expr . T_SUB expr
   25     | expr . T_MUL expr
   26     | expr . T_DIV expr
   27     | expr . T_MOD expr
   28     | expr . T_POW expr
   30     | expr . '<' expr
   31     | expr . '>' expr
   32     | expr . T_LEQ expr
   33     | expr . T_GEQ expr
   34     | expr . T_EQ expr
   35     | expr . T_NEQ expr
   35     | expr T_NEQ expr .  [$end, T_ELSE, T_FI, T_DONE, ';', ')']

    T_SUB  shift, and go to state 65
    T_ADD  shift, and go to state 66
    T_MOD  shift, and go to state 67
    T_DIV  shift, and go to state 68
    T_MUL  shift, and go to state 69
    T_POW  shift, and go to state 70

    '>'    error (nonassociative)
    '<'    error (nonassociative)
    T_NEQ  error (nonassociative)
    T_EQ   error (nonassociative)
    T_GEQ  error (nonassociative)
    T_LEQ  error (nonassociative)

    $default  reduce using rule 35 (expr)

    Conflict between rule 35 and token '>' resolved as an error (%nonassoc '>').
    Conflict between rule 35 and token '<' resolved as an error (%nonassoc '<').
    Conflict between rule 35 and token T_NEQ resolved as an error (%nonassoc T_NEQ).
    Conflict between rule 35 and token T_EQ resolved as an error (%nonassoc T_EQ).
    Conflict between rule 35 and token T_GEQ resolved as an error (%nonassoc T_GEQ).
    Conflict between rule 35 and token T_LEQ resolved as an error (%nonassoc T_LEQ).
    Conflict between rule 35 and token T_SUB resolved as shift (T_NEQ < T_SUB).
    Conflict between rule 35 and token T_ADD resolved as shift (T_NEQ < T_ADD).
    Conflict between rule 35 and token T_MOD resolved as shift (T_NEQ < T_MOD).
    Conflict between rule 35 and token T_DIV resolved as shift (T_NEQ < T_DIV).
    Conflict between rule 35 and token T_MUL resolved as shift (T_NEQ < T_MUL).
    Conflict between rule 35 and token T_POW resolved as shift (T_NEQ < T_POW).


state 98

   23 expr: expr . T_ADD expr
   24     | expr . T_SUB expr
   25     | expr . T_MUL expr
   26     | expr . T_DIV expr
   27     | expr . T_MOD expr
   28     | expr . T_POW expr
   30     | expr . '<' expr
   31     | expr . '>' expr
   32     | expr . T_LEQ expr
   33     | expr . T_GEQ expr
   34     | expr . T_EQ expr
   34     | expr T_EQ expr .  [$end, T_ELSE, T_FI, T_DONE, ';', ')']
   35     | expr . T_NEQ expr

    T_SUB  shift, and go to state 65
    T_ADD  shift, and go to state 66
    T_MOD  shift, and go to state 67
    T_DIV  shift, and go to state 68
    T_MUL  shift, and go to state 69
    T_POW  shift, and go to state 70

    '>'    error (nonassociative)
    '<'    error (nonassociative)
    T_NEQ  error (nonassociative)
    T_EQ   error (nonassociative)
    T_GEQ  error (nonassociative)
    T_LEQ  error (nonassociative)

    $default  reduce using rule 34 (expr)

    Conflict between rule 34 and token '>' resolved as an error (%nonassoc '>').
    Conflict between rule 34 and token '<' resolved as an error (%nonassoc '<').
    Conflict between rule 34 and token T_NEQ resolved as an error (%nonassoc T_NEQ).
    Conflict between rule 34 and token T_EQ resolved as an error (%nonassoc T_EQ).
    Conflict between rule 34 and token T_GEQ resolved as an error (%nonassoc T_GEQ).
    Conflict between rule 34 and token T_LEQ resolved as an error (%nonassoc T_LEQ).
    Conflict between rule 34 and token T_SUB resolved as shift (T_EQ < T_SUB).
    Conflict between rule 34 and token T_ADD resolved as shift (T_EQ < T_ADD).
    Conflict between rule 34 and token T_MOD resolved as shift (T_EQ < T_MOD).
    Conflict between rule 34 and token T_DIV resolved as shift (T_EQ < T_DIV).
    Conflict between rule 34 and token T_MUL resolved as shift (T_EQ < T_MUL).
    Conflict between rule 34 and token T_POW resolved as shift (T_EQ < T_POW).


state 99

   23 expr: expr . T_ADD expr
   24     | expr . T_SUB expr
   25     | expr . T_MUL expr
   26     | expr . T_DIV expr
   27     | expr . T_MOD expr
   28     | expr . T_POW expr
   30     | expr . '<' expr
   31     | expr . '>' expr
   32     | expr . T_LEQ expr
   33     | expr . T_GEQ expr
   33     | expr T_GEQ expr .  [$end, T_ELSE, T_FI, T_DONE, ';', ')']
   34     | expr . T_EQ expr
   35     | expr . T_NEQ expr

    T_SUB  shift, and go to state 65
    T_ADD  shift, and go to state 66
    T_MOD  shift, and go to state 67
    T_DIV  shift, and go to state 68
    T_MUL  shift, and go to state 69
    T_POW  shift, and go to state 70

    '>'    error (nonassociative)
    '<'    error (nonassociative)
    T_NEQ  error (nonassociative)
    T_EQ   error (nonassociative)
    T_GEQ  error (nonassociative)
    T_LEQ  error (nonassociative)

    $default  reduce using rule 33 (expr)

    Conflict between rule 33 and token '>' resolved as an error (%nonassoc '>').
    Conflict between rule 33 and token '<' resolved as an error (%nonassoc '<').
    Conflict between rule 33 and token T_NEQ resolved as an error (%nonassoc T_NEQ).
    Conflict between rule 33 and token T_EQ resolved as an error (%nonassoc T_EQ).
    Conflict between rule 33 and token T_GEQ resolved as an error (%nonassoc T_GEQ).
    Conflict between rule 33 and token T_LEQ resolved as an error (%nonassoc T_LEQ).
    Conflict between rule 33 and token T_SUB resolved as shift (T_GEQ < T_SUB).
    Conflict between rule 33 and token T_ADD resolved as shift (T_GEQ < T_ADD).
    Conflict between rule 33 and token T_MOD resolved as shift (T_GEQ < T_MOD).
    Conflict between rule 33 and token T_DIV resolved as shift (T_GEQ < T_DIV).
    Conflict between rule 33 and token T_MUL resolved as shift (T_GEQ < T_MUL).
    Conflict between rule 33 and token T_POW resolved as shift (T_GEQ < T_POW).


state 100

   23 expr: expr . T_ADD expr
   24     | expr . T_SUB expr
   25     | expr . T_MUL expr
   26     | expr . T_DIV expr
   27     | expr . T_MOD expr
   28     | expr . T_POW expr
   30     | expr . '<' expr
   31     | expr . '>' expr
   32     | expr . T_LEQ expr
   32     | expr T_LEQ expr .  [$end, T_ELSE, T_FI, T_DONE, ';', ')']
   33     | expr . T_GEQ expr
   34     | expr . T_EQ expr
   35     | expr . T_NEQ expr

    T_SUB  shift, and go to state 65
    T_ADD  shift, and go to state 66
    T_MOD  shift, and go to state 67
    T_DIV  shift, and go to state 68
    T_MUL  shift, and go to state 69
    T_POW  shift, and go to state 70

    '>'    error (nonassociative)
    '<'    error (nonassociative)
    T_NEQ  error (nonassociative)
    T_EQ   error (nonassociative)
    T_GEQ  error (nonassociative)
    T_LEQ  error (nonassociative)

    $default  reduce using rule 32 (expr)

    Conflict between rule 32 and token '>' resolved as an error (%nonassoc '>').
    Conflict between rule 32 and token '<' resolved as an error (%nonassoc '<').
    Conflict between rule 32 and token T_NEQ resolved as an error (%nonassoc T_NEQ).
    Conflict between rule 32 and token T_EQ resolved as an error (%nonassoc T_EQ).
    Conflict between rule 32 and token T_GEQ resolved as an error (%nonassoc T_GEQ).
    Conflict between rule 32 and token T_LEQ resolved as an error (%nonassoc T_LEQ).
    Conflict between rule 32 and token T_SUB resolved as shift (T_LEQ < T_SUB).
    Conflict between rule 32 and token T_ADD resolved as shift (T_LEQ < T_ADD).
    Conflict between rule 32 and token T_MOD resolved as shift (T_LEQ < T_MOD).
    Conflict between rule 32 and token T_DIV resolved as shift (T_LEQ < T_DIV).
    Conflict between rule 32 and token T_MUL resolved as shift (T_LEQ < T_MUL).
    Conflict between rule 32 and token T_POW resolved as shift (T_LEQ < T_POW).


state 101

   23 expr: expr . T_ADD expr
   24     | expr . T_SUB expr
   24     | expr T_SUB expr .  [$end, T_ELSE, T_FI, T_DONE, '>', '<', T_NEQ, T_EQ, T_GEQ, T_LEQ, T_SUB, T_ADD, ';', ')']
   25     | expr . T_MUL expr
   26     | expr . T_DIV expr
   27     | expr . T_MOD expr
   28     | expr . T_POW expr
   30     | expr . '<' expr
   31     | expr . '>' expr
   32     | expr . T_LEQ expr
   33     | expr . T_GEQ expr
   34     | expr . T_EQ expr
   35     | expr . T_NEQ expr

    T_MOD  shift, and go to state 67
    T_DIV  shift, and go to state 68
    T_MUL  shift, and go to state 69
    T_POW  shift, and go to state 70

    $default  reduce using rule 24 (expr)

    Conflict between rule 24 and token '>' resolved as reduce ('>' < T_SUB).
    Conflict between rule 24 and token '<' resolved as reduce ('<' < T_SUB).
    Conflict between rule 24 and token T_NEQ resolved as reduce (T_NEQ < T_SUB).
    Conflict between rule 24 and token T_EQ resolved as reduce (T_EQ < T_SUB).
    Conflict between rule 24 and token T_GEQ resolved as reduce (T_GEQ < T_SUB).
    Conflict between rule 24 and token T_LEQ resolved as reduce (T_LEQ < T_SUB).
    Conflict between rule 24 and token T_SUB resolved as reduce (%left T_SUB).
    Conflict between rule 24 and token T_ADD resolved as reduce (%left T_ADD).
    Conflict between rule 24 and token T_MOD resolved as shift (T_SUB < T_MOD).
    Conflict between rule 24 and token T_DIV resolved as shift (T_SUB < T_DIV).
    Conflict between rule 24 and token T_MUL resolved as shift (T_SUB < T_MUL).
    Conflict between rule 24 and token T_POW resolved as shift (T_SUB < T_POW).


state 102

   23 expr: expr . T_ADD expr
   23     | expr T_ADD expr .  [$end, T_ELSE, T_FI, T_DONE, '>', '<', T_NEQ, T_EQ, T_GEQ, T_LEQ, T_SUB, T_ADD, ';', ')']
   24     | expr . T_SUB expr
   25     | expr . T_MUL expr
   26     | expr . T_DIV expr
   27     | expr . T_MOD expr
   28     | expr . T_POW expr
   30     | expr . '<' expr
   31     | expr . '>' expr
   32     | expr . T_LEQ expr
   33     | expr . T_GEQ expr
   34     | expr . T_EQ expr
   35     | expr . T_NEQ expr

    T_MOD  shift, and go to state 67
    T_DIV  shift, and go to state 68
    T_MUL  shift, and go to state 69
    T_POW  shift, and go to state 70

    $default  reduce using rule 23 (expr)

    Conflict between rule 23 and token '>' resolved as reduce ('>' < T_ADD).
    Conflict between rule 23 and token '<' resolved as reduce ('<' < T_ADD).
    Conflict between rule 23 and token T_NEQ resolved as reduce (T_NEQ < T_ADD).
    Conflict between rule 23 and token T_EQ resolved as reduce (T_EQ < T_ADD).
    Conflict between rule 23 and token T_GEQ resolved as reduce (T_GEQ < T_ADD).
    Conflict between rule 23 and token T_LEQ resolved as reduce (T_LEQ < T_ADD).
    Conflict between rule 23 and token T_SUB resolved as reduce (%left T_SUB).
    Conflict between rule 23 and token T_ADD resolved as reduce (%left T_ADD).
    Conflict between rule 23 and token T_MOD resolved as shift (T_ADD < T_MOD).
    Conflict between rule 23 and token T_DIV resolved as shift (T_ADD < T_DIV).
    Conflict between rule 23 and token T_MUL resolved as shift (T_ADD < T_MUL).
    Conflict between rule 23 and token T_POW resolved as shift (T_ADD < T_POW).


state 103

   23 expr: expr . T_ADD expr
   24     | expr . T_SUB expr
   25     | expr . T_MUL expr
   26     | expr . T_DIV expr
   27     | expr . T_MOD expr
   27     | expr T_MOD expr .  [$end, T_ELSE, T_FI, T_DONE, '>', '<', T_NEQ, T_EQ, T_GEQ, T_LEQ, T_SUB, T_ADD, T_MOD, T_DIV, T_MUL, ';', ')']
   28     | expr . T_POW expr
   30     | expr . '<' expr
   31     | expr . '>' expr
   32     | expr . T_LEQ expr
   33     | expr . T_GEQ expr
   34     | expr . T_EQ expr
   35     | expr . T_NEQ expr

    T_POW  shift, and go to state 70

    $default  reduce using rule 27 (expr)

    Conflict between rule 27 and token '>' resolved as reduce ('>' < T_MOD).
    Conflict between rule 27 and token '<' resolved as reduce ('<' < T_MOD).
    Conflict between rule 27 and token T_NEQ resolved as reduce (T_NEQ < T_MOD).
    Conflict between rule 27 and token T_EQ resolved as reduce (T_EQ < T_MOD).
    Conflict between rule 27 and token T_GEQ resolved as reduce (T_GEQ < T_MOD).
    Conflict between rule 27 and token T_LEQ resolved as reduce (T_LEQ < T_MOD).
    Conflict between rule 27 and token T_SUB resolved as reduce (T_SUB < T_MOD).
    Conflict between rule 27 and token T_ADD resolved as reduce (T_ADD < T_MOD).
    Conflict between rule 27 and token T_MOD resolved as reduce (%left T_MOD).
    Conflict between rule 27 and token T_DIV resolved as reduce (%left T_DIV).
    Conflict between rule 27 and token T_MUL resolved as reduce (%left T_MUL).
    Conflict between rule 27 and token T_POW resolved as shift (T_MOD < T_POW).


state 104

   23 expr: expr . T_ADD expr
   24     | expr . T_SUB expr
   25     | expr . T_MUL expr
   26     | expr . T_DIV expr
   26     | expr T_DIV expr .  [$end, T_ELSE, T_FI, T_DONE, '>', '<', T_NEQ, T_EQ, T_GEQ, T_LEQ, T_SUB, T_ADD, T_MOD, T_DIV, T_MUL, ';', ')']
   27     | expr . T_MOD expr
   28     | expr . T_POW expr
   30     | expr . '<' expr
   31     | expr . '>' expr
   32     | expr . T_LEQ expr
   33     | expr . T_GEQ expr
   34     | expr . T_EQ expr
   35     | expr . T_NEQ expr

    T_POW  shift, and go to state 70

    $default  reduce using rule 26 (expr)

    Conflict between rule 26 and token '>' resolved as reduce ('>' < T_DIV).
    Conflict between rule 26 and token '<' resolved as reduce ('<' < T_DIV).
    Conflict between rule 26 and token T_NEQ resolved as reduce (T_NEQ < T_DIV).
    Conflict between rule 26 and token T_EQ resolved as reduce (T_EQ < T_DIV).
    Conflict between rule 26 and token T_GEQ resolved as reduce (T_GEQ < T_DIV).
    Conflict between rule 26 and token T_LEQ resolved as reduce (T_LEQ < T_DIV).
    Conflict between rule 26 and token T_SUB resolved as reduce (T_SUB < T_DIV).
    Conflict between rule 26 and token T_ADD resolved as reduce (T_ADD < T_DIV).
    Conflict between rule 26 and token T_MOD resolved as reduce (%left T_MOD).
    Conflict between rule 26 and token T_DIV resolved as reduce (%left T_DIV).
    Conflict between rule 26 and token T_MUL resolved as reduce (%left T_MUL).
    Conflict between rule 26 and token T_POW resolved as shift (T_DIV < T_POW).


state 105

   23 expr: expr . T_ADD expr
   24     | expr . T_SUB expr
   25     | expr . T_MUL expr
   25     | expr T_MUL expr .  [$end, T_ELSE, T_FI, T_DONE, '>', '<', T_NEQ, T_EQ, T_GEQ, T_LEQ, T_SUB, T_ADD, T_MOD, T_DIV, T_MUL, ';', ')']
   26     | expr . T_DIV expr
   27     | expr . T_MOD expr
   28     | expr . T_POW expr
   30     | expr . '<' expr
   31     | expr . '>' expr
   32     | expr . T_LEQ expr
   33     | expr . T_GEQ expr
   34     | expr . T_EQ expr
   35     | expr . T_NEQ expr

    T_POW  shift, and go to state 70

    $default  reduce using rule 25 (expr)

    Conflict between rule 25 and token '>' resolved as reduce ('>' < T_MUL).
    Conflict between rule 25 and token '<' resolved as reduce ('<' < T_MUL).
    Conflict between rule 25 and token T_NEQ resolved as reduce (T_NEQ < T_MUL).
    Conflict between rule 25 and token T_EQ resolved as reduce (T_EQ < T_MUL).
    Conflict between rule 25 and token T_GEQ resolved as reduce (T_GEQ < T_MUL).
    Conflict between rule 25 and token T_LEQ resolved as reduce (T_LEQ < T_MUL).
    Conflict between rule 25 and token T_SUB resolved as reduce (T_SUB < T_MUL).
    Conflict between rule 25 and token T_ADD resolved as reduce (T_ADD < T_MUL).
    Conflict between rule 25 and token T_MOD resolved as reduce (%left T_MOD).
    Conflict between rule 25 and token T_DIV resolved as reduce (%left T_DIV).
    Conflict between rule 25 and token T_MUL resolved as reduce (%left T_MUL).
    Conflict between rule 25 and token T_POW resolved as shift (T_MUL < T_POW).


state 106

   23 expr: expr . T_ADD expr
   24     | expr . T_SUB expr
   25     | expr . T_MUL expr
   26     | expr . T_DIV expr
   27     | expr . T_MOD expr
   28     | expr . T_POW expr
   28     | expr T_POW expr .  [$end, T_ELSE, T_FI, T_DONE, '>', '<', T_NEQ, T_EQ, T_GEQ, T_LEQ, T_SUB, T_ADD, T_MOD, T_DIV, T_MUL, ';', ')']
   30     | expr . '<' expr
   31     | expr . '>' expr
   32     | expr . T_LEQ expr
   33     | expr . T_GEQ expr
   34     | expr . T_EQ expr
   35     | expr . T_NEQ expr

    T_POW  shift, and go to state 70

    $default  reduce using rule 28 (expr)

    Conflict between rule 28 and token '>' resolved as reduce ('>' < T_POW).
    Conflict between rule 28 and token '<' resolved as reduce ('<' < T_POW).
    Conflict between rule 28 and token T_NEQ resolved as reduce (T_NEQ < T_POW).
    Conflict between rule 28 and token T_EQ resolved as reduce (T_EQ < T_POW).
    Conflict between rule 28 and token T_GEQ resolved as reduce (T_GEQ < T_POW).
    Conflict between rule 28 and token T_LEQ resolved as reduce (T_LEQ < T_POW).
    Conflict between rule 28 and token T_SUB resolved as reduce (T_SUB < T_POW).
    Conflict between rule 28 and token T_ADD resolved as reduce (T_ADD < T_POW).
    Conflict between rule 28 and token T_MOD resolved as reduce (T_MOD < T_POW).
    Conflict between rule 28 and token T_DIV resolved as reduce (T_DIV < T_POW).
    Conflict between rule 28 and token T_MUL resolved as reduce (T_MUL < T_POW).
    Conflict between rule 28 and token T_POW resolved as shift (%right T_POW).


state 107

   17 strcomp: '(' expr . ')'
   23 expr: expr . T_ADD expr
   24     | expr . T_SUB expr
   25     | expr . T_MUL expr
   26     | expr . T_DIV expr
   27     | expr . T_MOD expr
   28     | expr . T_POW expr
   30     | expr . '<' expr
   31     | expr . '>' expr
   32     | expr . T_LEQ expr
   33     | expr . T_GEQ expr
   34     | expr . T_EQ expr
   35     | expr . T_NEQ expr

    '>'    shift, and go to state 59
    '<'    shift, and go to state 60
    T_NEQ  shift, and go to state 61
    T_EQ   shift, and go to state 62
    T_GEQ  shift, and go to state 63
    T_LEQ  shift, and go to state 64
    T_SUB  shift, and go to state 65
    T_ADD  shift, and go to state 66
    T_MOD  shift, and go to state 67
    T_DIV  shift, and go to state 68
    T_MUL  shift, and go to state 69
    T_POW  shift, and go to state 70
    ')'    shift, and go to state 121


state 108

   57 nestedcmdexpr: '(' expr ')' .

    $default  reduce using rule 57 (nestedcmdexpr)


state 109

   55 nestedcmdexpr: '"' strlist '"' .

    $default  reduce using rule 55 (nestedcmdexpr)


state 110

   60 nestedsubcmd: nestedcmdexprlist cmdredirin cmdredirout . cmdredirfd
   62 cmdredirfd: . T_ERR2OUT
   63           | . T_OUT2ERR
   64           | .  ['`', '|']

    T_ERR2OUT  shift, and go to state 114
    T_OUT2ERR  shift, and go to state 115

    $default  reduce using rule 64 (cmdredirfd)

    cmdredirfd  go to state 122


state 111

   52 nestedcmdexpr: . T_NUMBER
   53              | . T_STRING
   54              | . T_STRING_SCONST
   55              | . '"' strlist '"'
   56              | . T_VAR
   57              | . '(' expr ')'
   59 nestedcmdexprlist: nestedcmdexprlist . nestedcmdexpr
   61 nestedsubcmd: nestedsubcmd '|' nestedcmdexprlist . cmdredirin cmdredirout cmdredirfd
   65 cmdredirin: . '<' cmdexpr
   66           | .  [T_ERR2OUT, T_OUT2ERR, T_APPEND, '>', '`', '|']

    T_NUMBER         shift, and go to state 34
    T_STRING         shift, and go to state 35
    T_STRING_SCONST  shift, and go to state 36
    T_VAR            shift, and go to state 37
    '<'              shift, and go to state 46
    '('              shift, and go to state 38
    '"'              shift, and go to state 39

    $default  reduce using rule 66 (cmdredirin)

    nestedcmdexpr  go to state 79
    cmdredirin     go to state 123


state 112

   68 cmdredirout: T_APPEND cmdexpr .

    $default  reduce using rule 68 (cmdredirout)


state 113

   67 cmdredirout: '>' cmdexpr .

    $default  reduce using rule 67 (cmdredirout)


state 114

   62 cmdredirfd: T_ERR2OUT .

    $default  reduce using rule 62 (cmdredirfd)


state 115

   63 cmdredirfd: T_OUT2ERR .

    $default  reduce using rule 63 (cmdredirfd)


state 116

   50 subcmd: cmdexprlist cmdredirin cmdredirout cmdredirfd .

    $default  reduce using rule 50 (subcmd)


state 117

   51 subcmd: subcmd '|' cmdexprlist cmdredirin . cmdredirout cmdredirfd
   67 cmdredirout: . '>' cmdexpr
   68            | . T_APPEND cmdexpr
   69            | .  [$end, T_ELSE, T_FI, T_DONE, T_ERR2OUT, T_OUT2ERR, ';', '&', '|']

    T_APPEND  shift, and go to state 85
    '>'       shift, and go to state 86

    $default  reduce using rule 69 (cmdredirout)

    cmdredirout  go to state 124


state 118

    2 stmtlist: .  [T_ELSE, T_FI]
    3         | . stmtlistr
    4         | . stmtlistr ';'
    5 stmtlistr: . stmt
    6          | . stmtlistr ';' stmt
    7 stmt: . T_IF '(' expr ')' T_THEN stmtlist T_FI
    7     | T_IF '(' expr ')' T_THEN . stmtlist T_FI
    8     | . T_IF '(' expr ')' T_THEN stmtlist T_ELSE stmtlist T_FI
    8     | T_IF '(' expr ')' T_THEN . stmtlist T_ELSE stmtlist T_FI
    9     | . T_FOR '(' expr ';' expr ';' expr ')' T_DO stmtlist T_DONE
   10     | . T_WHILE '(' expr ')' T_DO stmtlist T_DONE
   11     | . assignstmt
   12     | . cmd
   38 assignstmt: . T_VAR T_ASSIGN expr
   39 cmdexpr: . T_NUMBER
   40        | . T_STRING
   41        | . T_STRING_SCONST
   42        | . '"' strlist '"'
   43        | . T_VAR
   44        | . '`' nestedsubcmd '`'
   45        | . '(' expr ')'
   46 cmdexprlist: . cmdexpr
   47            | . cmdexprlist cmdexpr
   48 cmd: . subcmd
   49    | . subcmd '&'
   50 subcmd: . cmdexprlist cmdredirin cmdredirout cmdredirfd
   51       | . subcmd '|' cmdexprlist cmdredirin cmdredirout cmdredirfd

    T_IF             shift, and go to state 1
    T_FOR            shift, and go to state 2
    T_WHILE          shift, and go to state 3
    T_NUMBER         shift, and go to state 4
    T_STRING         shift, and go to state 5
    T_STRING_SCONST  shift, and go to state 6
    T_VAR            shift, and go to state 7
    '('              shift, and go to state 8
    '"'              shift, and go to state 9
    '`'              shift, and go to state 10

    $default  reduce using rule 2 (stmtlist)

    stmtlist     go to state 125
    stmtlistr    go to state 13
    stmt         go to state 14
    assignstmt   go to state 15
    cmdexpr      go to state 16
    cmdexprlist  go to state 17
    cmd          go to state 18
    subcmd       go to state 19


state 119

    9 stmt: T_FOR '(' expr ';' expr . ';' expr ')' T_DO stmtlist T_DONE
   23 expr: expr . T_ADD expr
   24     | expr . T_SUB expr
   25     | expr . T_MUL expr
   26     | expr . T_DIV expr
   27     | expr . T_MOD expr
   28     | expr . T_POW expr
   30     | expr . '<' expr
   31     | expr . '>' expr
   32     | expr . T_LEQ expr
   33     | expr . T_GEQ expr
   34     | expr . T_EQ expr
   35     | expr . T_NEQ expr

    '>'    shift, and go to state 59
    '<'    shift, and go to state 60
    T_NEQ  shift, and go to state 61
    T_EQ   shift, and go to state 62
    T_GEQ  shift, and go to state 63
    T_LEQ  shift, and go to state 64
    T_SUB  shift, and go to state 65
    T_ADD  shift, and go to state 66
    T_MOD  shift, and go to state 67
    T_DIV  shift, and go to state 68
    T_MUL  shift, and go to state 69
    T_POW  shift, and go to state 70
    ';'    shift, and go to state 126


state 120

    2 stmtlist: .  [T_DONE]
    3         | . stmtlistr
    4         | . stmtlistr ';'
    5 stmtlistr: . stmt
    6          | . stmtlistr ';' stmt
    7 stmt: . T_IF '(' expr ')' T_THEN stmtlist T_FI
    8     | . T_IF '(' expr ')' T_THEN stmtlist T_ELSE stmtlist T_FI
    9     | . T_FOR '(' expr ';' expr ';' expr ')' T_DO stmtlist T_DONE
   10     | . T_WHILE '(' expr ')' T_DO stmtlist T_DONE
   10     | T_WHILE '(' expr ')' T_DO . stmtlist T_DONE
   11     | . assignstmt
   12     | . cmd
   38 assignstmt: . T_VAR T_ASSIGN expr
   39 cmdexpr: . T_NUMBER
   40        | . T_STRING
   41        | . T_STRING_SCONST
   42        | . '"' strlist '"'
   43        | . T_VAR
   44        | . '`' nestedsubcmd '`'
   45        | . '(' expr ')'
   46 cmdexprlist: . cmdexpr
   47            | . cmdexprlist cmdexpr
   48 cmd: . subcmd
   49    | . subcmd '&'
   50 subcmd: . cmdexprlist cmdredirin cmdredirout cmdredirfd
   51       | . subcmd '|' cmdexprlist cmdredirin cmdredirout cmdredirfd

    T_IF             shift, and go to state 1
    T_FOR            shift, and go to state 2
    T_WHILE          shift, and go to state 3
    T_NUMBER         shift, and go to state 4
    T_STRING         shift, and go to state 5
    T_STRING_SCONST  shift, and go to state 6
    T_VAR            shift, and go to state 7
    '('              shift, and go to state 8
    '"'              shift, and go to state 9
    '`'              shift, and go to state 10

    $default  reduce using rule 2 (stmtlist)

    stmtlist     go to state 127
    stmtlistr    go to state 13
    stmt         go to state 14
    assignstmt   go to state 15
    cmdexpr      go to state 16
    cmdexprlist  go to state 17
    cmd          go to state 18
    subcmd       go to state 19


state 121

   17 strcomp: '(' expr ')' .

    $default  reduce using rule 17 (strcomp)


state 122

   60 nestedsubcmd: nestedcmdexprlist cmdredirin cmdredirout cmdredirfd .

    $default  reduce using rule 60 (nestedsubcmd)


state 123

   61 nestedsubcmd: nestedsubcmd '|' nestedcmdexprlist cmdredirin . cmdredirout cmdredirfd
   67 cmdredirout: . '>' cmdexpr
   68            | . T_APPEND cmdexpr
   69            | .  [T_ERR2OUT, T_OUT2ERR, '`', '|']

    T_APPEND  shift, and go to state 85
    '>'       shift, and go to state 86

    $default  reduce using rule 69 (cmdredirout)

    cmdredirout  go to state 128


state 124

   51 subcmd: subcmd '|' cmdexprlist cmdredirin cmdredirout . cmdredirfd
   62 cmdredirfd: . T_ERR2OUT
   63           | . T_OUT2ERR
   64           | .  [$end, T_ELSE, T_FI, T_DONE, ';', '&', '|']

    T_ERR2OUT  shift, and go to state 114
    T_OUT2ERR  shift, and go to state 115

    $default  reduce using rule 64 (cmdredirfd)

    cmdredirfd  go to state 129


state 125

    7 stmt: T_IF '(' expr ')' T_THEN stmtlist . T_FI
    8     | T_IF '(' expr ')' T_THEN stmtlist . T_ELSE stmtlist T_FI

    T_ELSE  shift, and go to state 130
    T_FI    shift, and go to state 131


state 126

    9 stmt: T_FOR '(' expr ';' expr ';' . expr ')' T_DO stmtlist T_DONE
   18 expr: . T_NUMBER
   19     | . T_STRING_SCONST
   20     | . '"' strlist '"'
   21     | . T_VAR
   22     | . assignstmt
   23     | . expr T_ADD expr
   24     | . expr T_SUB expr
   25     | . expr T_MUL expr
   26     | . expr T_DIV expr
   27     | . expr T_MOD expr
   28     | . expr T_POW expr
   29     | . T_SUB expr
   30     | . expr '<' expr
   31     | . expr '>' expr
   32     | . expr T_LEQ expr
   33     | . expr T_GEQ expr
   34     | . expr T_EQ expr
   35     | . expr T_NEQ expr
   36     | . '`' nestedsubcmd '`'
   37     | . '(' expr ')'
   38 assignstmt: . T_VAR T_ASSIGN expr

    T_NUMBER         shift, and go to state 24
    T_STRING_SCONST  shift, and go to state 25
    T_VAR            shift, and go to state 26
    T_SUB            shift, and go to state 27
    '('              shift, and go to state 28
    '"'              shift, and go to state 29
    '`'              shift, and go to state 30

    expr        go to state 132
    assignstmt  go to state 32


state 127

   10 stmt: T_WHILE '(' expr ')' T_DO stmtlist . T_DONE

    T_DONE  shift, and go to state 133


state 128

   61 nestedsubcmd: nestedsubcmd '|' nestedcmdexprlist cmdredirin cmdredirout . cmdredirfd
   62 cmdredirfd: . T_ERR2OUT
   63           | . T_OUT2ERR
   64           | .  ['`', '|']

    T_ERR2OUT  shift, and go to state 114
    T_OUT2ERR  shift, and go to state 115

    $default  reduce using rule 64 (cmdredirfd)

    cmdredirfd  go to state 134


state 129

   51 subcmd: subcmd '|' cmdexprlist cmdredirin cmdredirout cmdredirfd .

    $default  reduce using rule 51 (subcmd)


state 130

    2 stmtlist: .  [T_FI]
    3         | . stmtlistr
    4         | . stmtlistr ';'
    5 stmtlistr: . stmt
    6          | . stmtlistr ';' stmt
    7 stmt: . T_IF '(' expr ')' T_THEN stmtlist T_FI
    8     | . T_IF '(' expr ')' T_THEN stmtlist T_ELSE stmtlist T_FI
    8     | T_IF '(' expr ')' T_THEN stmtlist T_ELSE . stmtlist T_FI
    9     | . T_FOR '(' expr ';' expr ';' expr ')' T_DO stmtlist T_DONE
   10     | . T_WHILE '(' expr ')' T_DO stmtlist T_DONE
   11     | . assignstmt
   12     | . cmd
   38 assignstmt: . T_VAR T_ASSIGN expr
   39 cmdexpr: . T_NUMBER
   40        | . T_STRING
   41        | . T_STRING_SCONST
   42        | . '"' strlist '"'
   43        | . T_VAR
   44        | . '`' nestedsubcmd '`'
   45        | . '(' expr ')'
   46 cmdexprlist: . cmdexpr
   47            | . cmdexprlist cmdexpr
   48 cmd: . subcmd
   49    | . subcmd '&'
   50 subcmd: . cmdexprlist cmdredirin cmdredirout cmdredirfd
   51       | . subcmd '|' cmdexprlist cmdredirin cmdredirout cmdredirfd

    T_IF             shift, and go to state 1
    T_FOR            shift, and go to state 2
    T_WHILE          shift, and go to state 3
    T_NUMBER         shift, and go to state 4
    T_STRING         shift, and go to state 5
    T_STRING_SCONST  shift, and go to state 6
    T_VAR            shift, and go to state 7
    '('              shift, and go to state 8
    '"'              shift, and go to state 9
    '`'              shift, and go to state 10

    $default  reduce using rule 2 (stmtlist)

    stmtlist     go to state 135
    stmtlistr    go to state 13
    stmt         go to state 14
    assignstmt   go to state 15
    cmdexpr      go to state 16
    cmdexprlist  go to state 17
    cmd          go to state 18
    subcmd       go to state 19


state 131

    7 stmt: T_IF '(' expr ')' T_THEN stmtlist T_FI .

    $default  reduce using rule 7 (stmt)


state 132

    9 stmt: T_FOR '(' expr ';' expr ';' expr . ')' T_DO stmtlist T_DONE
   23 expr: expr . T_ADD expr
   24     | expr . T_SUB expr
   25     | expr . T_MUL expr
   26     | expr . T_DIV expr
   27     | expr . T_MOD expr
   28     | expr . T_POW expr
   30     | expr . '<' expr
   31     | expr . '>' expr
   32     | expr . T_LEQ expr
   33     | expr . T_GEQ expr
   34     | expr . T_EQ expr
   35     | expr . T_NEQ expr

    '>'    shift, and go to state 59
    '<'    shift, and go to state 60
    T_NEQ  shift, and go to state 61
    T_EQ   shift, and go to state 62
    T_GEQ  shift, and go to state 63
    T_LEQ  shift, and go to state 64
    T_SUB  shift, and go to state 65
    T_ADD  shift, and go to state 66
    T_MOD  shift, and go to state 67
    T_DIV  shift, and go to state 68
    T_MUL  shift, and go to state 69
    T_POW  shift, and go to state 70
    ')'    shift, and go to state 136


state 133

   10 stmt: T_WHILE '(' expr ')' T_DO stmtlist T_DONE .

    $default  reduce using rule 10 (stmt)


state 134

   61 nestedsubcmd: nestedsubcmd '|' nestedcmdexprlist cmdredirin cmdredirout cmdredirfd .

    $default  reduce using rule 61 (nestedsubcmd)


state 135

    8 stmt: T_IF '(' expr ')' T_THEN stmtlist T_ELSE stmtlist . T_FI

    T_FI  shift, and go to state 137


state 136

    9 stmt: T_FOR '(' expr ';' expr ';' expr ')' . T_DO stmtlist T_DONE

    T_DO  shift, and go to state 138


state 137

    8 stmt: T_IF '(' expr ')' T_THEN stmtlist T_ELSE stmtlist T_FI .

    $default  reduce using rule 8 (stmt)


state 138

    2 stmtlist: .  [T_DONE]
    3         | . stmtlistr
    4         | . stmtlistr ';'
    5 stmtlistr: . stmt
    6          | . stmtlistr ';' stmt
    7 stmt: . T_IF '(' expr ')' T_THEN stmtlist T_FI
    8     | . T_IF '(' expr ')' T_THEN stmtlist T_ELSE stmtlist T_FI
    9     | . T_FOR '(' expr ';' expr ';' expr ')' T_DO stmtlist T_DONE
    9     | T_FOR '(' expr ';' expr ';' expr ')' T_DO . stmtlist T_DONE
   10     | . T_WHILE '(' expr ')' T_DO stmtlist T_DONE
   11     | . assignstmt
   12     | . cmd
   38 assignstmt: . T_VAR T_ASSIGN expr
   39 cmdexpr: . T_NUMBER
   40        | . T_STRING
   41        | . T_STRING_SCONST
   42        | . '"' strlist '"'
   43        | . T_VAR
   44        | . '`' nestedsubcmd '`'
   45        | . '(' expr ')'
   46 cmdexprlist: . cmdexpr
   47            | . cmdexprlist cmdexpr
   48 cmd: . subcmd
   49    | . subcmd '&'
   50 subcmd: . cmdexprlist cmdredirin cmdredirout cmdredirfd
   51       | . subcmd '|' cmdexprlist cmdredirin cmdredirout cmdredirfd

    T_IF             shift, and go to state 1
    T_FOR            shift, and go to state 2
    T_WHILE          shift, and go to state 3
    T_NUMBER         shift, and go to state 4
    T_STRING         shift, and go to state 5
    T_STRING_SCONST  shift, and go to state 6
    T_VAR            shift, and go to state 7
    '('              shift, and go to state 8
    '"'              shift, and go to state 9
    '`'              shift, and go to state 10

    $default  reduce using rule 2 (stmtlist)

    stmtlist     go to state 139
    stmtlistr    go to state 13
    stmt         go to state 14
    assignstmt   go to state 15
    cmdexpr      go to state 16
    cmdexprlist  go to state 17
    cmd          go to state 18
    subcmd       go to state 19


state 139

    9 stmt: T_FOR '(' expr ';' expr ';' expr ')' T_DO stmtlist . T_DONE

    T_DONE  shift, and go to state 140


state 140

    9 stmt: T_FOR '(' expr ';' expr ';' expr ')' T_DO stmtlist T_DONE .

    $default  reduce using rule 9 (stmt)
