Grammar

    0 $accept: start $end

    1 start: stmtlist

    2 stmtlist: /* empty */
    3         | stmtlistr
    4         | stmtlistr ';'

    5 stmtlistr: stmt
    6          | stmtlistr ';' stmt

    7 stmt: T_IF '(' expr ')' T_THEN stmtlist T_FI
    8     | T_IF '(' expr ')' T_THEN stmtlist T_ELSE stmtlist T_FI
    9     | T_FOR '(' expr ';' expr ';' expr ')' T_DO stmtlist T_DONE
   10     | T_WHILE '(' expr ')' T_DO stmtlist T_DONE
   11     | assignstmt
   12     | cmd

   13 strlist: strlist strcomp
   14        | /* empty */

   15 strcomp: T_STRING
   16        | T_VAR
   17        | '(' expr ')'

   18 expr: T_NUMBER
   19     | T_STRING_SCONST
   20     | '"' strlist '"'
   21     | T_VAR
   22     | assignstmt
   23     | expr T_ADD expr
   24     | expr T_SUB expr
   25     | expr T_MUL expr
   26     | expr T_DIV expr
   27     | expr T_MOD expr
   28     | expr T_POW expr
   29     | T_SUB expr
   30     | T_INC T_VAR
   31     | T_DEC T_VAR
   32     | T_VAR T_INC
   33     | T_VAR T_DEC
   34     | expr '<' expr
   35     | expr '>' expr
   36     | expr T_LEQ expr
   37     | expr T_GEQ expr
   38     | expr T_EQ expr
   39     | expr T_NEQ expr
   40     | '`' nestedsubcmd '`'
   41     | '(' expr ')'

   42 assignstmt: T_VAR T_ASSIGN expr

   43 cmdexpr: T_NUMBER
   44        | T_STRING
   45        | T_STRING_SCONST
   46        | '"' strlist '"'
   47        | T_VAR
   48        | '`' nestedsubcmd '`'
   49        | '(' expr ')'

   50 cmdexprlist: cmdexpr
   51            | cmdexprlist cmdexpr

   52 cmd: subcmd
   53    | subcmd '&'

   54 subcmd: cmdexprlist cmdredirin cmdredirout cmdredirerr cmdredirfd
   55       | subcmd '|' cmdexprlist cmdredirin cmdredirout cmdredirerr cmdredirfd

   56 nestedcmdexpr: T_NUMBER
   57              | T_STRING
   58              | T_STRING_SCONST
   59              | '"' strlist '"'
   60              | T_VAR
   61              | '(' expr ')'

   62 nestedcmdexprlist: nestedcmdexpr
   63                  | nestedcmdexprlist nestedcmdexpr

   64 nestedsubcmd: nestedcmdexprlist cmdredirin cmdredirout cmdredirerr cmdredirfd
   65             | nestedsubcmd '|' nestedcmdexprlist cmdredirin cmdredirout cmdredirerr cmdredirfd

   66 cmdredirfd: T_ERR2OUT
   67           | T_OUT2ERR
   68           | /* empty */

   69 cmdredirin: '<' nestedcmdexpr
   70           | /* empty */

   71 cmdredirerr: T_ERR2FILE nestedcmdexpr
   72            | /* empty */

   73 cmdredirout: '>' nestedcmdexpr
   74            | T_OUT2FILE nestedcmdexpr
   75            | T_APPEND nestedcmdexpr
   76            | /* empty */


Terminals, with rules where they appear

$end (0) 0
'"' (34) 20 46 59
'&' (38) 53
'(' (40) 7 8 9 10 17 41 49 61
')' (41) 7 8 9 10 17 41 49 61
';' (59) 4 6 9
'<' (60) 34 69
'>' (62) 35 73
'`' (96) 40 48
'|' (124) 55 65
error (256)
T_IF (258) 7 8
T_THEN (259) 7 8
T_ELSE (260) 8
T_FI (261) 7 8
T_FOR (262) 9
T_DO (263) 9 10
T_DONE (264) 9 10
T_WHILE (265) 10
T_NUMBER (266) 18 43 56
T_STRING (267) 15 44 57
T_STRING_SCONST (268) 19 45 58
T_VAR (269) 16 21 30 31 32 33 42 47 60
T_ERR2OUT (270) 66
T_OUT2ERR (271) 67
T_APPEND (272) 75
T_ERR2FILE (273) 71
T_OUT2FILE (274) 74
T_ASSIGN (275) 42
T_NEQ (276) 39
T_EQ (277) 38
T_GEQ (278) 37
T_LEQ (279) 36
T_SUB (280) 24 29
T_ADD (281) 23
T_MOD (282) 27
T_DIV (283) 26
T_MUL (284) 25
T_NEG (285)
T_DEC (286) 31 33
T_INC (287) 30 32
T_POW (288) 28


Nonterminals, with rules where they appear

$accept (43)
    on left: 0
start (44)
    on left: 1, on right: 0
stmtlist (45)
    on left: 2 3 4, on right: 1 7 8 9 10
stmtlistr (46)
    on left: 5 6, on right: 3 4 6
stmt (47)
    on left: 7 8 9 10 11 12, on right: 5 6
strlist (48)
    on left: 13 14, on right: 13 20 46 59
strcomp (49)
    on left: 15 16 17, on right: 13
expr (50)
    on left: 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35
    36 37 38 39 40 41, on right: 7 8 9 10 17 23 24 25 26 27 28 29 34
    35 36 37 38 39 41 42 49 61
assignstmt (51)
    on left: 42, on right: 11 22
cmdexpr (52)
    on left: 43 44 45 46 47 48 49, on right: 50 51
cmdexprlist (53)
    on left: 50 51, on right: 51 54 55
cmd (54)
    on left: 52 53, on right: 12
subcmd (55)
    on left: 54 55, on right: 52 53 55
nestedcmdexpr (56)
    on left: 56 57 58 59 60 61, on right: 62 63 69 71 73 74 75
nestedcmdexprlist (57)
    on left: 62 63, on right: 63 64 65
nestedsubcmd (58)
    on left: 64 65, on right: 40 48 65
cmdredirfd (59)
    on left: 66 67 68, on right: 54 55 64 65
cmdredirin (60)
    on left: 69 70, on right: 54 55 64 65
cmdredirerr (61)
    on left: 71 72, on right: 54 55 64 65
cmdredirout (62)
    on left: 73 74 75 76, on right: 54 55 64 65


state 0

    0 $accept: . start $end
    1 start: . stmtlist
    2 stmtlist: .  [$end]
    3         | . stmtlistr
    4         | . stmtlistr ';'
    5 stmtlistr: . stmt
    6          | . stmtlistr ';' stmt
    7 stmt: . T_IF '(' expr ')' T_THEN stmtlist T_FI
    8     | . T_IF '(' expr ')' T_THEN stmtlist T_ELSE stmtlist T_FI
    9     | . T_FOR '(' expr ';' expr ';' expr ')' T_DO stmtlist T_DONE
   10     | . T_WHILE '(' expr ')' T_DO stmtlist T_DONE
   11     | . assignstmt
   12     | . cmd
   42 assignstmt: . T_VAR T_ASSIGN expr
   43 cmdexpr: . T_NUMBER
   44        | . T_STRING
   45        | . T_STRING_SCONST
   46        | . '"' strlist '"'
   47        | . T_VAR
   48        | . '`' nestedsubcmd '`'
   49        | . '(' expr ')'
   50 cmdexprlist: . cmdexpr
   51            | . cmdexprlist cmdexpr
   52 cmd: . subcmd
   53    | . subcmd '&'
   54 subcmd: . cmdexprlist cmdredirin cmdredirout cmdredirerr cmdredirfd
   55       | . subcmd '|' cmdexprlist cmdredirin cmdredirout cmdredirerr cmdredirfd

    T_IF             shift, and go to state 1
    T_FOR            shift, and go to state 2
    T_WHILE          shift, and go to state 3
    T_NUMBER         shift, and go to state 4
    T_STRING         shift, and go to state 5
    T_STRING_SCONST  shift, and go to state 6
    T_VAR            shift, and go to state 7
    '('              shift, and go to state 8
    '"'              shift, and go to state 9
    '`'              shift, and go to state 10

    $default  reduce using rule 2 (stmtlist)

    start        go to state 11
    stmtlist     go to state 12
    stmtlistr    go to state 13
    stmt         go to state 14
    assignstmt   go to state 15
    cmdexpr      go to state 16
    cmdexprlist  go to state 17
    cmd          go to state 18
    subcmd       go to state 19


state 1

    7 stmt: T_IF . '(' expr ')' T_THEN stmtlist T_FI
    8     | T_IF . '(' expr ')' T_THEN stmtlist T_ELSE stmtlist T_FI

    '('  shift, and go to state 20


state 2

    9 stmt: T_FOR . '(' expr ';' expr ';' expr ')' T_DO stmtlist T_DONE

    '('  shift, and go to state 21


state 3

   10 stmt: T_WHILE . '(' expr ')' T_DO stmtlist T_DONE

    '('  shift, and go to state 22


state 4

   43 cmdexpr: T_NUMBER .

    $default  reduce using rule 43 (cmdexpr)


state 5

   44 cmdexpr: T_STRING .

    $default  reduce using rule 44 (cmdexpr)


state 6

   45 cmdexpr: T_STRING_SCONST .

    $default  reduce using rule 45 (cmdexpr)


state 7

   42 assignstmt: T_VAR . T_ASSIGN expr
   47 cmdexpr: T_VAR .  [$end, T_ELSE, T_FI, T_DONE, T_NUMBER, T_STRING, T_STRING_SCONST, T_VAR, T_ERR2OUT, T_OUT2ERR, T_APPEND, T_ERR2FILE, T_OUT2FILE, '>', '<', ';', '(', '"', '`', '&', '|']

    T_ASSIGN  shift, and go to state 23

    $default  reduce using rule 47 (cmdexpr)


state 8

   18 expr: . T_NUMBER
   19     | . T_STRING_SCONST
   20     | . '"' strlist '"'
   21     | . T_VAR
   22     | . assignstmt
   23     | . expr T_ADD expr
   24     | . expr T_SUB expr
   25     | . expr T_MUL expr
   26     | . expr T_DIV expr
   27     | . expr T_MOD expr
   28     | . expr T_POW expr
   29     | . T_SUB expr
   30     | . T_INC T_VAR
   31     | . T_DEC T_VAR
   32     | . T_VAR T_INC
   33     | . T_VAR T_DEC
   34     | . expr '<' expr
   35     | . expr '>' expr
   36     | . expr T_LEQ expr
   37     | . expr T_GEQ expr
   38     | . expr T_EQ expr
   39     | . expr T_NEQ expr
   40     | . '`' nestedsubcmd '`'
   41     | . '(' expr ')'
   42 assignstmt: . T_VAR T_ASSIGN expr
   49 cmdexpr: '(' . expr ')'

    T_NUMBER         shift, and go to state 24
    T_STRING_SCONST  shift, and go to state 25
    T_VAR            shift, and go to state 26
    T_SUB            shift, and go to state 27
    T_DEC            shift, and go to state 28
    T_INC            shift, and go to state 29
    '('              shift, and go to state 30
    '"'              shift, and go to state 31
    '`'              shift, and go to state 32

    expr        go to state 33
    assignstmt  go to state 34


state 9

   13 strlist: . strlist strcomp
   14        | .
   46 cmdexpr: '"' . strlist '"'

    $default  reduce using rule 14 (strlist)

    strlist  go to state 35


state 10

   48 cmdexpr: '`' . nestedsubcmd '`'
   56 nestedcmdexpr: . T_NUMBER
   57              | . T_STRING
   58              | . T_STRING_SCONST
   59              | . '"' strlist '"'
   60              | . T_VAR
   61              | . '(' expr ')'
   62 nestedcmdexprlist: . nestedcmdexpr
   63                  | . nestedcmdexprlist nestedcmdexpr
   64 nestedsubcmd: . nestedcmdexprlist cmdredirin cmdredirout cmdredirerr cmdredirfd
   65             | . nestedsubcmd '|' nestedcmdexprlist cmdredirin cmdredirout cmdredirerr cmdredirfd

    T_NUMBER         shift, and go to state 36
    T_STRING         shift, and go to state 37
    T_STRING_SCONST  shift, and go to state 38
    T_VAR            shift, and go to state 39
    '('              shift, and go to state 40
    '"'              shift, and go to state 41

    nestedcmdexpr      go to state 42
    nestedcmdexprlist  go to state 43
    nestedsubcmd       go to state 44


state 11

    0 $accept: start . $end

    $end  shift, and go to state 45


state 12

    1 start: stmtlist .

    $default  reduce using rule 1 (start)


state 13

    3 stmtlist: stmtlistr .  [$end, T_ELSE, T_FI, T_DONE]
    4         | stmtlistr . ';'
    6 stmtlistr: stmtlistr . ';' stmt

    ';'  shift, and go to state 46

    $default  reduce using rule 3 (stmtlist)


state 14

    5 stmtlistr: stmt .

    $default  reduce using rule 5 (stmtlistr)


state 15

   11 stmt: assignstmt .

    $default  reduce using rule 11 (stmt)


state 16

   50 cmdexprlist: cmdexpr .

    $default  reduce using rule 50 (cmdexprlist)


state 17

   43 cmdexpr: . T_NUMBER
   44        | . T_STRING
   45        | . T_STRING_SCONST
   46        | . '"' strlist '"'
   47        | . T_VAR
   48        | . '`' nestedsubcmd '`'
   49        | . '(' expr ')'
   51 cmdexprlist: cmdexprlist . cmdexpr
   54 subcmd: cmdexprlist . cmdredirin cmdredirout cmdredirerr cmdredirfd
   69 cmdredirin: . '<' nestedcmdexpr
   70           | .  [$end, T_ELSE, T_FI, T_DONE, T_ERR2OUT, T_OUT2ERR, T_APPEND, T_ERR2FILE, T_OUT2FILE, '>', ';', '&', '|']

    T_NUMBER         shift, and go to state 4
    T_STRING         shift, and go to state 5
    T_STRING_SCONST  shift, and go to state 6
    T_VAR            shift, and go to state 47
    '<'              shift, and go to state 48
    '('              shift, and go to state 8
    '"'              shift, and go to state 9
    '`'              shift, and go to state 10

    $default  reduce using rule 70 (cmdredirin)

    cmdexpr     go to state 49
    cmdredirin  go to state 50


state 18

   12 stmt: cmd .

    $default  reduce using rule 12 (stmt)


state 19

   52 cmd: subcmd .  [$end, T_ELSE, T_FI, T_DONE, ';']
   53    | subcmd . '&'
   55 subcmd: subcmd . '|' cmdexprlist cmdredirin cmdredirout cmdredirerr cmdredirfd

    '&'  shift, and go to state 51
    '|'  shift, and go to state 52

    $default  reduce using rule 52 (cmd)


state 20

    7 stmt: T_IF '(' . expr ')' T_THEN stmtlist T_FI
    8     | T_IF '(' . expr ')' T_THEN stmtlist T_ELSE stmtlist T_FI
   18 expr: . T_NUMBER
   19     | . T_STRING_SCONST
   20     | . '"' strlist '"'
   21     | . T_VAR
   22     | . assignstmt
   23     | . expr T_ADD expr
   24     | . expr T_SUB expr
   25     | . expr T_MUL expr
   26     | . expr T_DIV expr
   27     | . expr T_MOD expr
   28     | . expr T_POW expr
   29     | . T_SUB expr
   30     | . T_INC T_VAR
   31     | . T_DEC T_VAR
   32     | . T_VAR T_INC
   33     | . T_VAR T_DEC
   34     | . expr '<' expr
   35     | . expr '>' expr
   36     | . expr T_LEQ expr
   37     | . expr T_GEQ expr
   38     | . expr T_EQ expr
   39     | . expr T_NEQ expr
   40     | . '`' nestedsubcmd '`'
   41     | . '(' expr ')'
   42 assignstmt: . T_VAR T_ASSIGN expr

    T_NUMBER         shift, and go to state 24
    T_STRING_SCONST  shift, and go to state 25
    T_VAR            shift, and go to state 26
    T_SUB            shift, and go to state 27
    T_DEC            shift, and go to state 28
    T_INC            shift, and go to state 29
    '('              shift, and go to state 30
    '"'              shift, and go to state 31
    '`'              shift, and go to state 32

    expr        go to state 53
    assignstmt  go to state 34


state 21

    9 stmt: T_FOR '(' . expr ';' expr ';' expr ')' T_DO stmtlist T_DONE
   18 expr: . T_NUMBER
   19     | . T_STRING_SCONST
   20     | . '"' strlist '"'
   21     | . T_VAR
   22     | . assignstmt
   23     | . expr T_ADD expr
   24     | . expr T_SUB expr
   25     | . expr T_MUL expr
   26     | . expr T_DIV expr
   27     | . expr T_MOD expr
   28     | . expr T_POW expr
   29     | . T_SUB expr
   30     | . T_INC T_VAR
   31     | . T_DEC T_VAR
   32     | . T_VAR T_INC
   33     | . T_VAR T_DEC
   34     | . expr '<' expr
   35     | . expr '>' expr
   36     | . expr T_LEQ expr
   37     | . expr T_GEQ expr
   38     | . expr T_EQ expr
   39     | . expr T_NEQ expr
   40     | . '`' nestedsubcmd '`'
   41     | . '(' expr ')'
   42 assignstmt: . T_VAR T_ASSIGN expr

    T_NUMBER         shift, and go to state 24
    T_STRING_SCONST  shift, and go to state 25
    T_VAR            shift, and go to state 26
    T_SUB            shift, and go to state 27
    T_DEC            shift, and go to state 28
    T_INC            shift, and go to state 29
    '('              shift, and go to state 30
    '"'              shift, and go to state 31
    '`'              shift, and go to state 32

    expr        go to state 54
    assignstmt  go to state 34


state 22

   10 stmt: T_WHILE '(' . expr ')' T_DO stmtlist T_DONE
   18 expr: . T_NUMBER
   19     | . T_STRING_SCONST
   20     | . '"' strlist '"'
   21     | . T_VAR
   22     | . assignstmt
   23     | . expr T_ADD expr
   24     | . expr T_SUB expr
   25     | . expr T_MUL expr
   26     | . expr T_DIV expr
   27     | . expr T_MOD expr
   28     | . expr T_POW expr
   29     | . T_SUB expr
   30     | . T_INC T_VAR
   31     | . T_DEC T_VAR
   32     | . T_VAR T_INC
   33     | . T_VAR T_DEC
   34     | . expr '<' expr
   35     | . expr '>' expr
   36     | . expr T_LEQ expr
   37     | . expr T_GEQ expr
   38     | . expr T_EQ expr
   39     | . expr T_NEQ expr
   40     | . '`' nestedsubcmd '`'
   41     | . '(' expr ')'
   42 assignstmt: . T_VAR T_ASSIGN expr

    T_NUMBER         shift, and go to state 24
    T_STRING_SCONST  shift, and go to state 25
    T_VAR            shift, and go to state 26
    T_SUB            shift, and go to state 27
    T_DEC            shift, and go to state 28
    T_INC            shift, and go to state 29
    '('              shift, and go to state 30
    '"'              shift, and go to state 31
    '`'              shift, and go to state 32

    expr        go to state 55
    assignstmt  go to state 34


state 23

   18 expr: . T_NUMBER
   19     | . T_STRING_SCONST
   20     | . '"' strlist '"'
   21     | . T_VAR
   22     | . assignstmt
   23     | . expr T_ADD expr
   24     | . expr T_SUB expr
   25     | . expr T_MUL expr
   26     | . expr T_DIV expr
   27     | . expr T_MOD expr
   28     | . expr T_POW expr
   29     | . T_SUB expr
   30     | . T_INC T_VAR
   31     | . T_DEC T_VAR
   32     | . T_VAR T_INC
   33     | . T_VAR T_DEC
   34     | . expr '<' expr
   35     | . expr '>' expr
   36     | . expr T_LEQ expr
   37     | . expr T_GEQ expr
   38     | . expr T_EQ expr
   39     | . expr T_NEQ expr
   40     | . '`' nestedsubcmd '`'
   41     | . '(' expr ')'
   42 assignstmt: . T_VAR T_ASSIGN expr
   42           | T_VAR T_ASSIGN . expr

    T_NUMBER         shift, and go to state 24
    T_STRING_SCONST  shift, and go to state 25
    T_VAR            shift, and go to state 26
    T_SUB            shift, and go to state 27
    T_DEC            shift, and go to state 28
    T_INC            shift, and go to state 29
    '('              shift, and go to state 30
    '"'              shift, and go to state 31
    '`'              shift, and go to state 32

    expr        go to state 56
    assignstmt  go to state 34


state 24

   18 expr: T_NUMBER .

    $default  reduce using rule 18 (expr)


state 25

   19 expr: T_STRING_SCONST .

    $default  reduce using rule 19 (expr)


state 26

   21 expr: T_VAR .  [$end, T_ELSE, T_FI, T_DONE, '>', '<', T_NEQ, T_EQ, T_GEQ, T_LEQ, T_SUB, T_ADD, T_MOD, T_DIV, T_MUL, T_POW, ';', ')']
   32     | T_VAR . T_INC
   33     | T_VAR . T_DEC
   42 assignstmt: T_VAR . T_ASSIGN expr

    T_ASSIGN  shift, and go to state 23
    T_DEC     shift, and go to state 57
    T_INC     shift, and go to state 58

    $default  reduce using rule 21 (expr)


state 27

   18 expr: . T_NUMBER
   19     | . T_STRING_SCONST
   20     | . '"' strlist '"'
   21     | . T_VAR
   22     | . assignstmt
   23     | . expr T_ADD expr
   24     | . expr T_SUB expr
   25     | . expr T_MUL expr
   26     | . expr T_DIV expr
   27     | . expr T_MOD expr
   28     | . expr T_POW expr
   29     | . T_SUB expr
   29     | T_SUB . expr
   30     | . T_INC T_VAR
   31     | . T_DEC T_VAR
   32     | . T_VAR T_INC
   33     | . T_VAR T_DEC
   34     | . expr '<' expr
   35     | . expr '>' expr
   36     | . expr T_LEQ expr
   37     | . expr T_GEQ expr
   38     | . expr T_EQ expr
   39     | . expr T_NEQ expr
   40     | . '`' nestedsubcmd '`'
   41     | . '(' expr ')'
   42 assignstmt: . T_VAR T_ASSIGN expr

    T_NUMBER         shift, and go to state 24
    T_STRING_SCONST  shift, and go to state 25
    T_VAR            shift, and go to state 26
    T_SUB            shift, and go to state 27
    T_DEC            shift, and go to state 28
    T_INC            shift, and go to state 29
    '('              shift, and go to state 30
    '"'              shift, and go to state 31
    '`'              shift, and go to state 32

    expr        go to state 59
    assignstmt  go to state 34


state 28

   31 expr: T_DEC . T_VAR

    T_VAR  shift, and go to state 60


state 29

   30 expr: T_INC . T_VAR

    T_VAR  shift, and go to state 61


state 30

   18 expr: . T_NUMBER
   19     | . T_STRING_SCONST
   20     | . '"' strlist '"'
   21     | . T_VAR
   22     | . assignstmt
   23     | . expr T_ADD expr
   24     | . expr T_SUB expr
   25     | . expr T_MUL expr
   26     | . expr T_DIV expr
   27     | . expr T_MOD expr
   28     | . expr T_POW expr
   29     | . T_SUB expr
   30     | . T_INC T_VAR
   31     | . T_DEC T_VAR
   32     | . T_VAR T_INC
   33     | . T_VAR T_DEC
   34     | . expr '<' expr
   35     | . expr '>' expr
   36     | . expr T_LEQ expr
   37     | . expr T_GEQ expr
   38     | . expr T_EQ expr
   39     | . expr T_NEQ expr
   40     | . '`' nestedsubcmd '`'
   41     | . '(' expr ')'
   41     | '(' . expr ')'
   42 assignstmt: . T_VAR T_ASSIGN expr

    T_NUMBER         shift, and go to state 24
    T_STRING_SCONST  shift, and go to state 25
    T_VAR            shift, and go to state 26
    T_SUB            shift, and go to state 27
    T_DEC            shift, and go to state 28
    T_INC            shift, and go to state 29
    '('              shift, and go to state 30
    '"'              shift, and go to state 31
    '`'              shift, and go to state 32

    expr        go to state 62
    assignstmt  go to state 34


state 31

   13 strlist: . strlist strcomp
   14        | .
   20 expr: '"' . strlist '"'

    $default  reduce using rule 14 (strlist)

    strlist  go to state 63


state 32

   40 expr: '`' . nestedsubcmd '`'
   56 nestedcmdexpr: . T_NUMBER
   57              | . T_STRING
   58              | . T_STRING_SCONST
   59              | . '"' strlist '"'
   60              | . T_VAR
   61              | . '(' expr ')'
   62 nestedcmdexprlist: . nestedcmdexpr
   63                  | . nestedcmdexprlist nestedcmdexpr
   64 nestedsubcmd: . nestedcmdexprlist cmdredirin cmdredirout cmdredirerr cmdredirfd
   65             | . nestedsubcmd '|' nestedcmdexprlist cmdredirin cmdredirout cmdredirerr cmdredirfd

    T_NUMBER         shift, and go to state 36
    T_STRING         shift, and go to state 37
    T_STRING_SCONST  shift, and go to state 38
    T_VAR            shift, and go to state 39
    '('              shift, and go to state 40
    '"'              shift, and go to state 41

    nestedcmdexpr      go to state 42
    nestedcmdexprlist  go to state 43
    nestedsubcmd       go to state 64


state 33

   23 expr: expr . T_ADD expr
   24     | expr . T_SUB expr
   25     | expr . T_MUL expr
   26     | expr . T_DIV expr
   27     | expr . T_MOD expr
   28     | expr . T_POW expr
   34     | expr . '<' expr
   35     | expr . '>' expr
   36     | expr . T_LEQ expr
   37     | expr . T_GEQ expr
   38     | expr . T_EQ expr
   39     | expr . T_NEQ expr
   49 cmdexpr: '(' expr . ')'

    '>'    shift, and go to state 65
    '<'    shift, and go to state 66
    T_NEQ  shift, and go to state 67
    T_EQ   shift, and go to state 68
    T_GEQ  shift, and go to state 69
    T_LEQ  shift, and go to state 70
    T_SUB  shift, and go to state 71
    T_ADD  shift, and go to state 72
    T_MOD  shift, and go to state 73
    T_DIV  shift, and go to state 74
    T_MUL  shift, and go to state 75
    T_POW  shift, and go to state 76
    ')'    shift, and go to state 77


state 34

   22 expr: assignstmt .

    $default  reduce using rule 22 (expr)


state 35

   13 strlist: strlist . strcomp
   15 strcomp: . T_STRING
   16        | . T_VAR
   17        | . '(' expr ')'
   46 cmdexpr: '"' strlist . '"'

    T_STRING  shift, and go to state 78
    T_VAR     shift, and go to state 79
    '('       shift, and go to state 80
    '"'       shift, and go to state 81

    strcomp  go to state 82


state 36

   56 nestedcmdexpr: T_NUMBER .

    $default  reduce using rule 56 (nestedcmdexpr)


state 37

   57 nestedcmdexpr: T_STRING .

    $default  reduce using rule 57 (nestedcmdexpr)


state 38

   58 nestedcmdexpr: T_STRING_SCONST .

    $default  reduce using rule 58 (nestedcmdexpr)


state 39

   60 nestedcmdexpr: T_VAR .

    $default  reduce using rule 60 (nestedcmdexpr)


state 40

   18 expr: . T_NUMBER
   19     | . T_STRING_SCONST
   20     | . '"' strlist '"'
   21     | . T_VAR
   22     | . assignstmt
   23     | . expr T_ADD expr
   24     | . expr T_SUB expr
   25     | . expr T_MUL expr
   26     | . expr T_DIV expr
   27     | . expr T_MOD expr
   28     | . expr T_POW expr
   29     | . T_SUB expr
   30     | . T_INC T_VAR
   31     | . T_DEC T_VAR
   32     | . T_VAR T_INC
   33     | . T_VAR T_DEC
   34     | . expr '<' expr
   35     | . expr '>' expr
   36     | . expr T_LEQ expr
   37     | . expr T_GEQ expr
   38     | . expr T_EQ expr
   39     | . expr T_NEQ expr
   40     | . '`' nestedsubcmd '`'
   41     | . '(' expr ')'
   42 assignstmt: . T_VAR T_ASSIGN expr
   61 nestedcmdexpr: '(' . expr ')'

    T_NUMBER         shift, and go to state 24
    T_STRING_SCONST  shift, and go to state 25
    T_VAR            shift, and go to state 26
    T_SUB            shift, and go to state 27
    T_DEC            shift, and go to state 28
    T_INC            shift, and go to state 29
    '('              shift, and go to state 30
    '"'              shift, and go to state 31
    '`'              shift, and go to state 32

    expr        go to state 83
    assignstmt  go to state 34


state 41

   13 strlist: . strlist strcomp
   14        | .
   59 nestedcmdexpr: '"' . strlist '"'

    $default  reduce using rule 14 (strlist)

    strlist  go to state 84


state 42

   62 nestedcmdexprlist: nestedcmdexpr .

    $default  reduce using rule 62 (nestedcmdexprlist)


state 43

   56 nestedcmdexpr: . T_NUMBER
   57              | . T_STRING
   58              | . T_STRING_SCONST
   59              | . '"' strlist '"'
   60              | . T_VAR
   61              | . '(' expr ')'
   63 nestedcmdexprlist: nestedcmdexprlist . nestedcmdexpr
   64 nestedsubcmd: nestedcmdexprlist . cmdredirin cmdredirout cmdredirerr cmdredirfd
   69 cmdredirin: . '<' nestedcmdexpr
   70           | .  [T_ERR2OUT, T_OUT2ERR, T_APPEND, T_ERR2FILE, T_OUT2FILE, '>', '`', '|']

    T_NUMBER         shift, and go to state 36
    T_STRING         shift, and go to state 37
    T_STRING_SCONST  shift, and go to state 38
    T_VAR            shift, and go to state 39
    '<'              shift, and go to state 48
    '('              shift, and go to state 40
    '"'              shift, and go to state 41

    $default  reduce using rule 70 (cmdredirin)

    nestedcmdexpr  go to state 85
    cmdredirin     go to state 86


state 44

   48 cmdexpr: '`' nestedsubcmd . '`'
   65 nestedsubcmd: nestedsubcmd . '|' nestedcmdexprlist cmdredirin cmdredirout cmdredirerr cmdredirfd

    '`'  shift, and go to state 87
    '|'  shift, and go to state 88


state 45

    0 $accept: start $end .

    $default  accept


state 46

    4 stmtlist: stmtlistr ';' .  [$end, T_ELSE, T_FI, T_DONE]
    6 stmtlistr: stmtlistr ';' . stmt
    7 stmt: . T_IF '(' expr ')' T_THEN stmtlist T_FI
    8     | . T_IF '(' expr ')' T_THEN stmtlist T_ELSE stmtlist T_FI
    9     | . T_FOR '(' expr ';' expr ';' expr ')' T_DO stmtlist T_DONE
   10     | . T_WHILE '(' expr ')' T_DO stmtlist T_DONE
   11     | . assignstmt
   12     | . cmd
   42 assignstmt: . T_VAR T_ASSIGN expr
   43 cmdexpr: . T_NUMBER
   44        | . T_STRING
   45        | . T_STRING_SCONST
   46        | . '"' strlist '"'
   47        | . T_VAR
   48        | . '`' nestedsubcmd '`'
   49        | . '(' expr ')'
   50 cmdexprlist: . cmdexpr
   51            | . cmdexprlist cmdexpr
   52 cmd: . subcmd
   53    | . subcmd '&'
   54 subcmd: . cmdexprlist cmdredirin cmdredirout cmdredirerr cmdredirfd
   55       | . subcmd '|' cmdexprlist cmdredirin cmdredirout cmdredirerr cmdredirfd

    T_IF             shift, and go to state 1
    T_FOR            shift, and go to state 2
    T_WHILE          shift, and go to state 3
    T_NUMBER         shift, and go to state 4
    T_STRING         shift, and go to state 5
    T_STRING_SCONST  shift, and go to state 6
    T_VAR            shift, and go to state 7
    '('              shift, and go to state 8
    '"'              shift, and go to state 9
    '`'              shift, and go to state 10

    $default  reduce using rule 4 (stmtlist)

    stmt         go to state 89
    assignstmt   go to state 15
    cmdexpr      go to state 16
    cmdexprlist  go to state 17
    cmd          go to state 18
    subcmd       go to state 19


state 47

   47 cmdexpr: T_VAR .

    $default  reduce using rule 47 (cmdexpr)


state 48

   56 nestedcmdexpr: . T_NUMBER
   57              | . T_STRING
   58              | . T_STRING_SCONST
   59              | . '"' strlist '"'
   60              | . T_VAR
   61              | . '(' expr ')'
   69 cmdredirin: '<' . nestedcmdexpr

    T_NUMBER         shift, and go to state 36
    T_STRING         shift, and go to state 37
    T_STRING_SCONST  shift, and go to state 38
    T_VAR            shift, and go to state 39
    '('              shift, and go to state 40
    '"'              shift, and go to state 41

    nestedcmdexpr  go to state 90


state 49

   51 cmdexprlist: cmdexprlist cmdexpr .

    $default  reduce using rule 51 (cmdexprlist)


state 50

   54 subcmd: cmdexprlist cmdredirin . cmdredirout cmdredirerr cmdredirfd
   73 cmdredirout: . '>' nestedcmdexpr
   74            | . T_OUT2FILE nestedcmdexpr
   75            | . T_APPEND nestedcmdexpr
   76            | .  [$end, T_ELSE, T_FI, T_DONE, T_ERR2OUT, T_OUT2ERR, T_ERR2FILE, ';', '&', '|']

    T_APPEND    shift, and go to state 91
    T_OUT2FILE  shift, and go to state 92
    '>'         shift, and go to state 93

    $default  reduce using rule 76 (cmdredirout)

    cmdredirout  go to state 94


state 51

   53 cmd: subcmd '&' .

    $default  reduce using rule 53 (cmd)


state 52

   43 cmdexpr: . T_NUMBER
   44        | . T_STRING
   45        | . T_STRING_SCONST
   46        | . '"' strlist '"'
   47        | . T_VAR
   48        | . '`' nestedsubcmd '`'
   49        | . '(' expr ')'
   50 cmdexprlist: . cmdexpr
   51            | . cmdexprlist cmdexpr
   55 subcmd: subcmd '|' . cmdexprlist cmdredirin cmdredirout cmdredirerr cmdredirfd

    T_NUMBER         shift, and go to state 4
    T_STRING         shift, and go to state 5
    T_STRING_SCONST  shift, and go to state 6
    T_VAR            shift, and go to state 47
    '('              shift, and go to state 8
    '"'              shift, and go to state 9
    '`'              shift, and go to state 10

    cmdexpr      go to state 16
    cmdexprlist  go to state 95


state 53

    7 stmt: T_IF '(' expr . ')' T_THEN stmtlist T_FI
    8     | T_IF '(' expr . ')' T_THEN stmtlist T_ELSE stmtlist T_FI
   23 expr: expr . T_ADD expr
   24     | expr . T_SUB expr
   25     | expr . T_MUL expr
   26     | expr . T_DIV expr
   27     | expr . T_MOD expr
   28     | expr . T_POW expr
   34     | expr . '<' expr
   35     | expr . '>' expr
   36     | expr . T_LEQ expr
   37     | expr . T_GEQ expr
   38     | expr . T_EQ expr
   39     | expr . T_NEQ expr

    '>'    shift, and go to state 65
    '<'    shift, and go to state 66
    T_NEQ  shift, and go to state 67
    T_EQ   shift, and go to state 68
    T_GEQ  shift, and go to state 69
    T_LEQ  shift, and go to state 70
    T_SUB  shift, and go to state 71
    T_ADD  shift, and go to state 72
    T_MOD  shift, and go to state 73
    T_DIV  shift, and go to state 74
    T_MUL  shift, and go to state 75
    T_POW  shift, and go to state 76
    ')'    shift, and go to state 96


state 54

    9 stmt: T_FOR '(' expr . ';' expr ';' expr ')' T_DO stmtlist T_DONE
   23 expr: expr . T_ADD expr
   24     | expr . T_SUB expr
   25     | expr . T_MUL expr
   26     | expr . T_DIV expr
   27     | expr . T_MOD expr
   28     | expr . T_POW expr
   34     | expr . '<' expr
   35     | expr . '>' expr
   36     | expr . T_LEQ expr
   37     | expr . T_GEQ expr
   38     | expr . T_EQ expr
   39     | expr . T_NEQ expr

    '>'    shift, and go to state 65
    '<'    shift, and go to state 66
    T_NEQ  shift, and go to state 67
    T_EQ   shift, and go to state 68
    T_GEQ  shift, and go to state 69
    T_LEQ  shift, and go to state 70
    T_SUB  shift, and go to state 71
    T_ADD  shift, and go to state 72
    T_MOD  shift, and go to state 73
    T_DIV  shift, and go to state 74
    T_MUL  shift, and go to state 75
    T_POW  shift, and go to state 76
    ';'    shift, and go to state 97


state 55

   10 stmt: T_WHILE '(' expr . ')' T_DO stmtlist T_DONE
   23 expr: expr . T_ADD expr
   24     | expr . T_SUB expr
   25     | expr . T_MUL expr
   26     | expr . T_DIV expr
   27     | expr . T_MOD expr
   28     | expr . T_POW expr
   34     | expr . '<' expr
   35     | expr . '>' expr
   36     | expr . T_LEQ expr
   37     | expr . T_GEQ expr
   38     | expr . T_EQ expr
   39     | expr . T_NEQ expr

    '>'    shift, and go to state 65
    '<'    shift, and go to state 66
    T_NEQ  shift, and go to state 67
    T_EQ   shift, and go to state 68
    T_GEQ  shift, and go to state 69
    T_LEQ  shift, and go to state 70
    T_SUB  shift, and go to state 71
    T_ADD  shift, and go to state 72
    T_MOD  shift, and go to state 73
    T_DIV  shift, and go to state 74
    T_MUL  shift, and go to state 75
    T_POW  shift, and go to state 76
    ')'    shift, and go to state 98


state 56

   23 expr: expr . T_ADD expr
   24     | expr . T_SUB expr
   25     | expr . T_MUL expr
   26     | expr . T_DIV expr
   27     | expr . T_MOD expr
   28     | expr . T_POW expr
   34     | expr . '<' expr
   35     | expr . '>' expr
   36     | expr . T_LEQ expr
   37     | expr . T_GEQ expr
   38     | expr . T_EQ expr
   39     | expr . T_NEQ expr
   42 assignstmt: T_VAR T_ASSIGN expr .  [$end, T_ELSE, T_FI, T_DONE, ';', ')']

    T_SUB  shift, and go to state 71
    T_ADD  shift, and go to state 72
    T_MOD  shift, and go to state 73
    T_DIV  shift, and go to state 74
    T_MUL  shift, and go to state 75
    T_POW  shift, and go to state 76

    '>'    error (nonassociative)
    '<'    error (nonassociative)
    T_NEQ  error (nonassociative)
    T_EQ   error (nonassociative)
    T_GEQ  error (nonassociative)
    T_LEQ  error (nonassociative)

    $default  reduce using rule 42 (assignstmt)

    Conflict between rule 42 and token '>' resolved as an error (%nonassoc '>').
    Conflict between rule 42 and token '<' resolved as an error (%nonassoc '<').
    Conflict between rule 42 and token T_NEQ resolved as an error (%nonassoc T_NEQ).
    Conflict between rule 42 and token T_EQ resolved as an error (%nonassoc T_EQ).
    Conflict between rule 42 and token T_GEQ resolved as an error (%nonassoc T_GEQ).
    Conflict between rule 42 and token T_LEQ resolved as an error (%nonassoc T_LEQ).
    Conflict between rule 42 and token T_SUB resolved as shift (T_ASSIGN < T_SUB).
    Conflict between rule 42 and token T_ADD resolved as shift (T_ASSIGN < T_ADD).
    Conflict between rule 42 and token T_MOD resolved as shift (T_ASSIGN < T_MOD).
    Conflict between rule 42 and token T_DIV resolved as shift (T_ASSIGN < T_DIV).
    Conflict between rule 42 and token T_MUL resolved as shift (T_ASSIGN < T_MUL).
    Conflict between rule 42 and token T_POW resolved as shift (T_ASSIGN < T_POW).


state 57

   33 expr: T_VAR T_DEC .

    $default  reduce using rule 33 (expr)


state 58

   32 expr: T_VAR T_INC .

    $default  reduce using rule 32 (expr)


state 59

   23 expr: expr . T_ADD expr
   24     | expr . T_SUB expr
   25     | expr . T_MUL expr
   26     | expr . T_DIV expr
   27     | expr . T_MOD expr
   28     | expr . T_POW expr
   29     | T_SUB expr .  [$end, T_ELSE, T_FI, T_DONE, '>', '<', T_NEQ, T_EQ, T_GEQ, T_LEQ, T_SUB, T_ADD, T_MOD, T_DIV, T_MUL, ';', ')']
   34     | expr . '<' expr
   35     | expr . '>' expr
   36     | expr . T_LEQ expr
   37     | expr . T_GEQ expr
   38     | expr . T_EQ expr
   39     | expr . T_NEQ expr

    T_POW  shift, and go to state 76

    $default  reduce using rule 29 (expr)

    Conflict between rule 29 and token '>' resolved as reduce ('>' < T_NEG).
    Conflict between rule 29 and token '<' resolved as reduce ('<' < T_NEG).
    Conflict between rule 29 and token T_NEQ resolved as reduce (T_NEQ < T_NEG).
    Conflict between rule 29 and token T_EQ resolved as reduce (T_EQ < T_NEG).
    Conflict between rule 29 and token T_GEQ resolved as reduce (T_GEQ < T_NEG).
    Conflict between rule 29 and token T_LEQ resolved as reduce (T_LEQ < T_NEG).
    Conflict between rule 29 and token T_SUB resolved as reduce (T_SUB < T_NEG).
    Conflict between rule 29 and token T_ADD resolved as reduce (T_ADD < T_NEG).
    Conflict between rule 29 and token T_MOD resolved as reduce (T_MOD < T_NEG).
    Conflict between rule 29 and token T_DIV resolved as reduce (T_DIV < T_NEG).
    Conflict between rule 29 and token T_MUL resolved as reduce (T_MUL < T_NEG).
    Conflict between rule 29 and token T_POW resolved as shift (T_NEG < T_POW).


state 60

   31 expr: T_DEC T_VAR .

    $default  reduce using rule 31 (expr)


state 61

   30 expr: T_INC T_VAR .

    $default  reduce using rule 30 (expr)


state 62

   23 expr: expr . T_ADD expr
   24     | expr . T_SUB expr
   25     | expr . T_MUL expr
   26     | expr . T_DIV expr
   27     | expr . T_MOD expr
   28     | expr . T_POW expr
   34     | expr . '<' expr
   35     | expr . '>' expr
   36     | expr . T_LEQ expr
   37     | expr . T_GEQ expr
   38     | expr . T_EQ expr
   39     | expr . T_NEQ expr
   41     | '(' expr . ')'

    '>'    shift, and go to state 65
    '<'    shift, and go to state 66
    T_NEQ  shift, and go to state 67
    T_EQ   shift, and go to state 68
    T_GEQ  shift, and go to state 69
    T_LEQ  shift, and go to state 70
    T_SUB  shift, and go to state 71
    T_ADD  shift, and go to state 72
    T_MOD  shift, and go to state 73
    T_DIV  shift, and go to state 74
    T_MUL  shift, and go to state 75
    T_POW  shift, and go to state 76
    ')'    shift, and go to state 99


state 63

   13 strlist: strlist . strcomp
   15 strcomp: . T_STRING
   16        | . T_VAR
   17        | . '(' expr ')'
   20 expr: '"' strlist . '"'

    T_STRING  shift, and go to state 78
    T_VAR     shift, and go to state 79
    '('       shift, and go to state 80
    '"'       shift, and go to state 100

    strcomp  go to state 82


state 64

   40 expr: '`' nestedsubcmd . '`'
   65 nestedsubcmd: nestedsubcmd . '|' nestedcmdexprlist cmdredirin cmdredirout cmdredirerr cmdredirfd

    '`'  shift, and go to state 101
    '|'  shift, and go to state 88


state 65

   18 expr: . T_NUMBER
   19     | . T_STRING_SCONST
   20     | . '"' strlist '"'
   21     | . T_VAR
   22     | . assignstmt
   23     | . expr T_ADD expr
   24     | . expr T_SUB expr
   25     | . expr T_MUL expr
   26     | . expr T_DIV expr
   27     | . expr T_MOD expr
   28     | . expr T_POW expr
   29     | . T_SUB expr
   30     | . T_INC T_VAR
   31     | . T_DEC T_VAR
   32     | . T_VAR T_INC
   33     | . T_VAR T_DEC
   34     | . expr '<' expr
   35     | . expr '>' expr
   35     | expr '>' . expr
   36     | . expr T_LEQ expr
   37     | . expr T_GEQ expr
   38     | . expr T_EQ expr
   39     | . expr T_NEQ expr
   40     | . '`' nestedsubcmd '`'
   41     | . '(' expr ')'
   42 assignstmt: . T_VAR T_ASSIGN expr

    T_NUMBER         shift, and go to state 24
    T_STRING_SCONST  shift, and go to state 25
    T_VAR            shift, and go to state 26
    T_SUB            shift, and go to state 27
    T_DEC            shift, and go to state 28
    T_INC            shift, and go to state 29
    '('              shift, and go to state 30
    '"'              shift, and go to state 31
    '`'              shift, and go to state 32

    expr        go to state 102
    assignstmt  go to state 34


state 66

   18 expr: . T_NUMBER
   19     | . T_STRING_SCONST
   20     | . '"' strlist '"'
   21     | . T_VAR
   22     | . assignstmt
   23     | . expr T_ADD expr
   24     | . expr T_SUB expr
   25     | . expr T_MUL expr
   26     | . expr T_DIV expr
   27     | . expr T_MOD expr
   28     | . expr T_POW expr
   29     | . T_SUB expr
   30     | . T_INC T_VAR
   31     | . T_DEC T_VAR
   32     | . T_VAR T_INC
   33     | . T_VAR T_DEC
   34     | . expr '<' expr
   34     | expr '<' . expr
   35     | . expr '>' expr
   36     | . expr T_LEQ expr
   37     | . expr T_GEQ expr
   38     | . expr T_EQ expr
   39     | . expr T_NEQ expr
   40     | . '`' nestedsubcmd '`'
   41     | . '(' expr ')'
   42 assignstmt: . T_VAR T_ASSIGN expr

    T_NUMBER         shift, and go to state 24
    T_STRING_SCONST  shift, and go to state 25
    T_VAR            shift, and go to state 26
    T_SUB            shift, and go to state 27
    T_DEC            shift, and go to state 28
    T_INC            shift, and go to state 29
    '('              shift, and go to state 30
    '"'              shift, and go to state 31
    '`'              shift, and go to state 32

    expr        go to state 103
    assignstmt  go to state 34


state 67

   18 expr: . T_NUMBER
   19     | . T_STRING_SCONST
   20     | . '"' strlist '"'
   21     | . T_VAR
   22     | . assignstmt
   23     | . expr T_ADD expr
   24     | . expr T_SUB expr
   25     | . expr T_MUL expr
   26     | . expr T_DIV expr
   27     | . expr T_MOD expr
   28     | . expr T_POW expr
   29     | . T_SUB expr
   30     | . T_INC T_VAR
   31     | . T_DEC T_VAR
   32     | . T_VAR T_INC
   33     | . T_VAR T_DEC
   34     | . expr '<' expr
   35     | . expr '>' expr
   36     | . expr T_LEQ expr
   37     | . expr T_GEQ expr
   38     | . expr T_EQ expr
   39     | . expr T_NEQ expr
   39     | expr T_NEQ . expr
   40     | . '`' nestedsubcmd '`'
   41     | . '(' expr ')'
   42 assignstmt: . T_VAR T_ASSIGN expr

    T_NUMBER         shift, and go to state 24
    T_STRING_SCONST  shift, and go to state 25
    T_VAR            shift, and go to state 26
    T_SUB            shift, and go to state 27
    T_DEC            shift, and go to state 28
    T_INC            shift, and go to state 29
    '('              shift, and go to state 30
    '"'              shift, and go to state 31
    '`'              shift, and go to state 32

    expr        go to state 104
    assignstmt  go to state 34


state 68

   18 expr: . T_NUMBER
   19     | . T_STRING_SCONST
   20     | . '"' strlist '"'
   21     | . T_VAR
   22     | . assignstmt
   23     | . expr T_ADD expr
   24     | . expr T_SUB expr
   25     | . expr T_MUL expr
   26     | . expr T_DIV expr
   27     | . expr T_MOD expr
   28     | . expr T_POW expr
   29     | . T_SUB expr
   30     | . T_INC T_VAR
   31     | . T_DEC T_VAR
   32     | . T_VAR T_INC
   33     | . T_VAR T_DEC
   34     | . expr '<' expr
   35     | . expr '>' expr
   36     | . expr T_LEQ expr
   37     | . expr T_GEQ expr
   38     | . expr T_EQ expr
   38     | expr T_EQ . expr
   39     | . expr T_NEQ expr
   40     | . '`' nestedsubcmd '`'
   41     | . '(' expr ')'
   42 assignstmt: . T_VAR T_ASSIGN expr

    T_NUMBER         shift, and go to state 24
    T_STRING_SCONST  shift, and go to state 25
    T_VAR            shift, and go to state 26
    T_SUB            shift, and go to state 27
    T_DEC            shift, and go to state 28
    T_INC            shift, and go to state 29
    '('              shift, and go to state 30
    '"'              shift, and go to state 31
    '`'              shift, and go to state 32

    expr        go to state 105
    assignstmt  go to state 34


state 69

   18 expr: . T_NUMBER
   19     | . T_STRING_SCONST
   20     | . '"' strlist '"'
   21     | . T_VAR
   22     | . assignstmt
   23     | . expr T_ADD expr
   24     | . expr T_SUB expr
   25     | . expr T_MUL expr
   26     | . expr T_DIV expr
   27     | . expr T_MOD expr
   28     | . expr T_POW expr
   29     | . T_SUB expr
   30     | . T_INC T_VAR
   31     | . T_DEC T_VAR
   32     | . T_VAR T_INC
   33     | . T_VAR T_DEC
   34     | . expr '<' expr
   35     | . expr '>' expr
   36     | . expr T_LEQ expr
   37     | . expr T_GEQ expr
   37     | expr T_GEQ . expr
   38     | . expr T_EQ expr
   39     | . expr T_NEQ expr
   40     | . '`' nestedsubcmd '`'
   41     | . '(' expr ')'
   42 assignstmt: . T_VAR T_ASSIGN expr

    T_NUMBER         shift, and go to state 24
    T_STRING_SCONST  shift, and go to state 25
    T_VAR            shift, and go to state 26
    T_SUB            shift, and go to state 27
    T_DEC            shift, and go to state 28
    T_INC            shift, and go to state 29
    '('              shift, and go to state 30
    '"'              shift, and go to state 31
    '`'              shift, and go to state 32

    expr        go to state 106
    assignstmt  go to state 34


state 70

   18 expr: . T_NUMBER
   19     | . T_STRING_SCONST
   20     | . '"' strlist '"'
   21     | . T_VAR
   22     | . assignstmt
   23     | . expr T_ADD expr
   24     | . expr T_SUB expr
   25     | . expr T_MUL expr
   26     | . expr T_DIV expr
   27     | . expr T_MOD expr
   28     | . expr T_POW expr
   29     | . T_SUB expr
   30     | . T_INC T_VAR
   31     | . T_DEC T_VAR
   32     | . T_VAR T_INC
   33     | . T_VAR T_DEC
   34     | . expr '<' expr
   35     | . expr '>' expr
   36     | . expr T_LEQ expr
   36     | expr T_LEQ . expr
   37     | . expr T_GEQ expr
   38     | . expr T_EQ expr
   39     | . expr T_NEQ expr
   40     | . '`' nestedsubcmd '`'
   41     | . '(' expr ')'
   42 assignstmt: . T_VAR T_ASSIGN expr

    T_NUMBER         shift, and go to state 24
    T_STRING_SCONST  shift, and go to state 25
    T_VAR            shift, and go to state 26
    T_SUB            shift, and go to state 27
    T_DEC            shift, and go to state 28
    T_INC            shift, and go to state 29
    '('              shift, and go to state 30
    '"'              shift, and go to state 31
    '`'              shift, and go to state 32

    expr        go to state 107
    assignstmt  go to state 34


state 71

   18 expr: . T_NUMBER
   19     | . T_STRING_SCONST
   20     | . '"' strlist '"'
   21     | . T_VAR
   22     | . assignstmt
   23     | . expr T_ADD expr
   24     | . expr T_SUB expr
   24     | expr T_SUB . expr
   25     | . expr T_MUL expr
   26     | . expr T_DIV expr
   27     | . expr T_MOD expr
   28     | . expr T_POW expr
   29     | . T_SUB expr
   30     | . T_INC T_VAR
   31     | . T_DEC T_VAR
   32     | . T_VAR T_INC
   33     | . T_VAR T_DEC
   34     | . expr '<' expr
   35     | . expr '>' expr
   36     | . expr T_LEQ expr
   37     | . expr T_GEQ expr
   38     | . expr T_EQ expr
   39     | . expr T_NEQ expr
   40     | . '`' nestedsubcmd '`'
   41     | . '(' expr ')'
   42 assignstmt: . T_VAR T_ASSIGN expr

    T_NUMBER         shift, and go to state 24
    T_STRING_SCONST  shift, and go to state 25
    T_VAR            shift, and go to state 26
    T_SUB            shift, and go to state 27
    T_DEC            shift, and go to state 28
    T_INC            shift, and go to state 29
    '('              shift, and go to state 30
    '"'              shift, and go to state 31
    '`'              shift, and go to state 32

    expr        go to state 108
    assignstmt  go to state 34


state 72

   18 expr: . T_NUMBER
   19     | . T_STRING_SCONST
   20     | . '"' strlist '"'
   21     | . T_VAR
   22     | . assignstmt
   23     | . expr T_ADD expr
   23     | expr T_ADD . expr
   24     | . expr T_SUB expr
   25     | . expr T_MUL expr
   26     | . expr T_DIV expr
   27     | . expr T_MOD expr
   28     | . expr T_POW expr
   29     | . T_SUB expr
   30     | . T_INC T_VAR
   31     | . T_DEC T_VAR
   32     | . T_VAR T_INC
   33     | . T_VAR T_DEC
   34     | . expr '<' expr
   35     | . expr '>' expr
   36     | . expr T_LEQ expr
   37     | . expr T_GEQ expr
   38     | . expr T_EQ expr
   39     | . expr T_NEQ expr
   40     | . '`' nestedsubcmd '`'
   41     | . '(' expr ')'
   42 assignstmt: . T_VAR T_ASSIGN expr

    T_NUMBER         shift, and go to state 24
    T_STRING_SCONST  shift, and go to state 25
    T_VAR            shift, and go to state 26
    T_SUB            shift, and go to state 27
    T_DEC            shift, and go to state 28
    T_INC            shift, and go to state 29
    '('              shift, and go to state 30
    '"'              shift, and go to state 31
    '`'              shift, and go to state 32

    expr        go to state 109
    assignstmt  go to state 34


state 73

   18 expr: . T_NUMBER
   19     | . T_STRING_SCONST
   20     | . '"' strlist '"'
   21     | . T_VAR
   22     | . assignstmt
   23     | . expr T_ADD expr
   24     | . expr T_SUB expr
   25     | . expr T_MUL expr
   26     | . expr T_DIV expr
   27     | . expr T_MOD expr
   27     | expr T_MOD . expr
   28     | . expr T_POW expr
   29     | . T_SUB expr
   30     | . T_INC T_VAR
   31     | . T_DEC T_VAR
   32     | . T_VAR T_INC
   33     | . T_VAR T_DEC
   34     | . expr '<' expr
   35     | . expr '>' expr
   36     | . expr T_LEQ expr
   37     | . expr T_GEQ expr
   38     | . expr T_EQ expr
   39     | . expr T_NEQ expr
   40     | . '`' nestedsubcmd '`'
   41     | . '(' expr ')'
   42 assignstmt: . T_VAR T_ASSIGN expr

    T_NUMBER         shift, and go to state 24
    T_STRING_SCONST  shift, and go to state 25
    T_VAR            shift, and go to state 26
    T_SUB            shift, and go to state 27
    T_DEC            shift, and go to state 28
    T_INC            shift, and go to state 29
    '('              shift, and go to state 30
    '"'              shift, and go to state 31
    '`'              shift, and go to state 32

    expr        go to state 110
    assignstmt  go to state 34


state 74

   18 expr: . T_NUMBER
   19     | . T_STRING_SCONST
   20     | . '"' strlist '"'
   21     | . T_VAR
   22     | . assignstmt
   23     | . expr T_ADD expr
   24     | . expr T_SUB expr
   25     | . expr T_MUL expr
   26     | . expr T_DIV expr
   26     | expr T_DIV . expr
   27     | . expr T_MOD expr
   28     | . expr T_POW expr
   29     | . T_SUB expr
   30     | . T_INC T_VAR
   31     | . T_DEC T_VAR
   32     | . T_VAR T_INC
   33     | . T_VAR T_DEC
   34     | . expr '<' expr
   35     | . expr '>' expr
   36     | . expr T_LEQ expr
   37     | . expr T_GEQ expr
   38     | . expr T_EQ expr
   39     | . expr T_NEQ expr
   40     | . '`' nestedsubcmd '`'
   41     | . '(' expr ')'
   42 assignstmt: . T_VAR T_ASSIGN expr

    T_NUMBER         shift, and go to state 24
    T_STRING_SCONST  shift, and go to state 25
    T_VAR            shift, and go to state 26
    T_SUB            shift, and go to state 27
    T_DEC            shift, and go to state 28
    T_INC            shift, and go to state 29
    '('              shift, and go to state 30
    '"'              shift, and go to state 31
    '`'              shift, and go to state 32

    expr        go to state 111
    assignstmt  go to state 34


state 75

   18 expr: . T_NUMBER
   19     | . T_STRING_SCONST
   20     | . '"' strlist '"'
   21     | . T_VAR
   22     | . assignstmt
   23     | . expr T_ADD expr
   24     | . expr T_SUB expr
   25     | . expr T_MUL expr
   25     | expr T_MUL . expr
   26     | . expr T_DIV expr
   27     | . expr T_MOD expr
   28     | . expr T_POW expr
   29     | . T_SUB expr
   30     | . T_INC T_VAR
   31     | . T_DEC T_VAR
   32     | . T_VAR T_INC
   33     | . T_VAR T_DEC
   34     | . expr '<' expr
   35     | . expr '>' expr
   36     | . expr T_LEQ expr
   37     | . expr T_GEQ expr
   38     | . expr T_EQ expr
   39     | . expr T_NEQ expr
   40     | . '`' nestedsubcmd '`'
   41     | . '(' expr ')'
   42 assignstmt: . T_VAR T_ASSIGN expr

    T_NUMBER         shift, and go to state 24
    T_STRING_SCONST  shift, and go to state 25
    T_VAR            shift, and go to state 26
    T_SUB            shift, and go to state 27
    T_DEC            shift, and go to state 28
    T_INC            shift, and go to state 29
    '('              shift, and go to state 30
    '"'              shift, and go to state 31
    '`'              shift, and go to state 32

    expr        go to state 112
    assignstmt  go to state 34


state 76

   18 expr: . T_NUMBER
   19     | . T_STRING_SCONST
   20     | . '"' strlist '"'
   21     | . T_VAR
   22     | . assignstmt
   23     | . expr T_ADD expr
   24     | . expr T_SUB expr
   25     | . expr T_MUL expr
   26     | . expr T_DIV expr
   27     | . expr T_MOD expr
   28     | . expr T_POW expr
   28     | expr T_POW . expr
   29     | . T_SUB expr
   30     | . T_INC T_VAR
   31     | . T_DEC T_VAR
   32     | . T_VAR T_INC
   33     | . T_VAR T_DEC
   34     | . expr '<' expr
   35     | . expr '>' expr
   36     | . expr T_LEQ expr
   37     | . expr T_GEQ expr
   38     | . expr T_EQ expr
   39     | . expr T_NEQ expr
   40     | . '`' nestedsubcmd '`'
   41     | . '(' expr ')'
   42 assignstmt: . T_VAR T_ASSIGN expr

    T_NUMBER         shift, and go to state 24
    T_STRING_SCONST  shift, and go to state 25
    T_VAR            shift, and go to state 26
    T_SUB            shift, and go to state 27
    T_DEC            shift, and go to state 28
    T_INC            shift, and go to state 29
    '('              shift, and go to state 30
    '"'              shift, and go to state 31
    '`'              shift, and go to state 32

    expr        go to state 113
    assignstmt  go to state 34


state 77

   49 cmdexpr: '(' expr ')' .

    $default  reduce using rule 49 (cmdexpr)


state 78

   15 strcomp: T_STRING .

    $default  reduce using rule 15 (strcomp)


state 79

   16 strcomp: T_VAR .

    $default  reduce using rule 16 (strcomp)


state 80

   17 strcomp: '(' . expr ')'
   18 expr: . T_NUMBER
   19     | . T_STRING_SCONST
   20     | . '"' strlist '"'
   21     | . T_VAR
   22     | . assignstmt
   23     | . expr T_ADD expr
   24     | . expr T_SUB expr
   25     | . expr T_MUL expr
   26     | . expr T_DIV expr
   27     | . expr T_MOD expr
   28     | . expr T_POW expr
   29     | . T_SUB expr
   30     | . T_INC T_VAR
   31     | . T_DEC T_VAR
   32     | . T_VAR T_INC
   33     | . T_VAR T_DEC
   34     | . expr '<' expr
   35     | . expr '>' expr
   36     | . expr T_LEQ expr
   37     | . expr T_GEQ expr
   38     | . expr T_EQ expr
   39     | . expr T_NEQ expr
   40     | . '`' nestedsubcmd '`'
   41     | . '(' expr ')'
   42 assignstmt: . T_VAR T_ASSIGN expr

    T_NUMBER         shift, and go to state 24
    T_STRING_SCONST  shift, and go to state 25
    T_VAR            shift, and go to state 26
    T_SUB            shift, and go to state 27
    T_DEC            shift, and go to state 28
    T_INC            shift, and go to state 29
    '('              shift, and go to state 30
    '"'              shift, and go to state 31
    '`'              shift, and go to state 32

    expr        go to state 114
    assignstmt  go to state 34


state 81

   46 cmdexpr: '"' strlist '"' .

    $default  reduce using rule 46 (cmdexpr)


state 82

   13 strlist: strlist strcomp .

    $default  reduce using rule 13 (strlist)


state 83

   23 expr: expr . T_ADD expr
   24     | expr . T_SUB expr
   25     | expr . T_MUL expr
   26     | expr . T_DIV expr
   27     | expr . T_MOD expr
   28     | expr . T_POW expr
   34     | expr . '<' expr
   35     | expr . '>' expr
   36     | expr . T_LEQ expr
   37     | expr . T_GEQ expr
   38     | expr . T_EQ expr
   39     | expr . T_NEQ expr
   61 nestedcmdexpr: '(' expr . ')'

    '>'    shift, and go to state 65
    '<'    shift, and go to state 66
    T_NEQ  shift, and go to state 67
    T_EQ   shift, and go to state 68
    T_GEQ  shift, and go to state 69
    T_LEQ  shift, and go to state 70
    T_SUB  shift, and go to state 71
    T_ADD  shift, and go to state 72
    T_MOD  shift, and go to state 73
    T_DIV  shift, and go to state 74
    T_MUL  shift, and go to state 75
    T_POW  shift, and go to state 76
    ')'    shift, and go to state 115


state 84

   13 strlist: strlist . strcomp
   15 strcomp: . T_STRING
   16        | . T_VAR
   17        | . '(' expr ')'
   59 nestedcmdexpr: '"' strlist . '"'

    T_STRING  shift, and go to state 78
    T_VAR     shift, and go to state 79
    '('       shift, and go to state 80
    '"'       shift, and go to state 116

    strcomp  go to state 82


state 85

   63 nestedcmdexprlist: nestedcmdexprlist nestedcmdexpr .

    $default  reduce using rule 63 (nestedcmdexprlist)


state 86

   64 nestedsubcmd: nestedcmdexprlist cmdredirin . cmdredirout cmdredirerr cmdredirfd
   73 cmdredirout: . '>' nestedcmdexpr
   74            | . T_OUT2FILE nestedcmdexpr
   75            | . T_APPEND nestedcmdexpr
   76            | .  [T_ERR2OUT, T_OUT2ERR, T_ERR2FILE, '`', '|']

    T_APPEND    shift, and go to state 91
    T_OUT2FILE  shift, and go to state 92
    '>'         shift, and go to state 93

    $default  reduce using rule 76 (cmdredirout)

    cmdredirout  go to state 117


state 87

   48 cmdexpr: '`' nestedsubcmd '`' .

    $default  reduce using rule 48 (cmdexpr)


state 88

   56 nestedcmdexpr: . T_NUMBER
   57              | . T_STRING
   58              | . T_STRING_SCONST
   59              | . '"' strlist '"'
   60              | . T_VAR
   61              | . '(' expr ')'
   62 nestedcmdexprlist: . nestedcmdexpr
   63                  | . nestedcmdexprlist nestedcmdexpr
   65 nestedsubcmd: nestedsubcmd '|' . nestedcmdexprlist cmdredirin cmdredirout cmdredirerr cmdredirfd

    T_NUMBER         shift, and go to state 36
    T_STRING         shift, and go to state 37
    T_STRING_SCONST  shift, and go to state 38
    T_VAR            shift, and go to state 39
    '('              shift, and go to state 40
    '"'              shift, and go to state 41

    nestedcmdexpr      go to state 42
    nestedcmdexprlist  go to state 118


state 89

    6 stmtlistr: stmtlistr ';' stmt .

    $default  reduce using rule 6 (stmtlistr)


state 90

   69 cmdredirin: '<' nestedcmdexpr .

    $default  reduce using rule 69 (cmdredirin)


state 91

   56 nestedcmdexpr: . T_NUMBER
   57              | . T_STRING
   58              | . T_STRING_SCONST
   59              | . '"' strlist '"'
   60              | . T_VAR
   61              | . '(' expr ')'
   75 cmdredirout: T_APPEND . nestedcmdexpr

    T_NUMBER         shift, and go to state 36
    T_STRING         shift, and go to state 37
    T_STRING_SCONST  shift, and go to state 38
    T_VAR            shift, and go to state 39
    '('              shift, and go to state 40
    '"'              shift, and go to state 41

    nestedcmdexpr  go to state 119


state 92

   56 nestedcmdexpr: . T_NUMBER
   57              | . T_STRING
   58              | . T_STRING_SCONST
   59              | . '"' strlist '"'
   60              | . T_VAR
   61              | . '(' expr ')'
   74 cmdredirout: T_OUT2FILE . nestedcmdexpr

    T_NUMBER         shift, and go to state 36
    T_STRING         shift, and go to state 37
    T_STRING_SCONST  shift, and go to state 38
    T_VAR            shift, and go to state 39
    '('              shift, and go to state 40
    '"'              shift, and go to state 41

    nestedcmdexpr  go to state 120


state 93

   56 nestedcmdexpr: . T_NUMBER
   57              | . T_STRING
   58              | . T_STRING_SCONST
   59              | . '"' strlist '"'
   60              | . T_VAR
   61              | . '(' expr ')'
   73 cmdredirout: '>' . nestedcmdexpr

    T_NUMBER         shift, and go to state 36
    T_STRING         shift, and go to state 37
    T_STRING_SCONST  shift, and go to state 38
    T_VAR            shift, and go to state 39
    '('              shift, and go to state 40
    '"'              shift, and go to state 41

    nestedcmdexpr  go to state 121


state 94

   54 subcmd: cmdexprlist cmdredirin cmdredirout . cmdredirerr cmdredirfd
   71 cmdredirerr: . T_ERR2FILE nestedcmdexpr
   72            | .  [$end, T_ELSE, T_FI, T_DONE, T_ERR2OUT, T_OUT2ERR, ';', '&', '|']

    T_ERR2FILE  shift, and go to state 122

    $default  reduce using rule 72 (cmdredirerr)

    cmdredirerr  go to state 123


state 95

   43 cmdexpr: . T_NUMBER
   44        | . T_STRING
   45        | . T_STRING_SCONST
   46        | . '"' strlist '"'
   47        | . T_VAR
   48        | . '`' nestedsubcmd '`'
   49        | . '(' expr ')'
   51 cmdexprlist: cmdexprlist . cmdexpr
   55 subcmd: subcmd '|' cmdexprlist . cmdredirin cmdredirout cmdredirerr cmdredirfd
   69 cmdredirin: . '<' nestedcmdexpr
   70           | .  [$end, T_ELSE, T_FI, T_DONE, T_ERR2OUT, T_OUT2ERR, T_APPEND, T_ERR2FILE, T_OUT2FILE, '>', ';', '&', '|']

    T_NUMBER         shift, and go to state 4
    T_STRING         shift, and go to state 5
    T_STRING_SCONST  shift, and go to state 6
    T_VAR            shift, and go to state 47
    '<'              shift, and go to state 48
    '('              shift, and go to state 8
    '"'              shift, and go to state 9
    '`'              shift, and go to state 10

    $default  reduce using rule 70 (cmdredirin)

    cmdexpr     go to state 49
    cmdredirin  go to state 124


state 96

    7 stmt: T_IF '(' expr ')' . T_THEN stmtlist T_FI
    8     | T_IF '(' expr ')' . T_THEN stmtlist T_ELSE stmtlist T_FI

    T_THEN  shift, and go to state 125


state 97

    9 stmt: T_FOR '(' expr ';' . expr ';' expr ')' T_DO stmtlist T_DONE
   18 expr: . T_NUMBER
   19     | . T_STRING_SCONST
   20     | . '"' strlist '"'
   21     | . T_VAR
   22     | . assignstmt
   23     | . expr T_ADD expr
   24     | . expr T_SUB expr
   25     | . expr T_MUL expr
   26     | . expr T_DIV expr
   27     | . expr T_MOD expr
   28     | . expr T_POW expr
   29     | . T_SUB expr
   30     | . T_INC T_VAR
   31     | . T_DEC T_VAR
   32     | . T_VAR T_INC
   33     | . T_VAR T_DEC
   34     | . expr '<' expr
   35     | . expr '>' expr
   36     | . expr T_LEQ expr
   37     | . expr T_GEQ expr
   38     | . expr T_EQ expr
   39     | . expr T_NEQ expr
   40     | . '`' nestedsubcmd '`'
   41     | . '(' expr ')'
   42 assignstmt: . T_VAR T_ASSIGN expr

    T_NUMBER         shift, and go to state 24
    T_STRING_SCONST  shift, and go to state 25
    T_VAR            shift, and go to state 26
    T_SUB            shift, and go to state 27
    T_DEC            shift, and go to state 28
    T_INC            shift, and go to state 29
    '('              shift, and go to state 30
    '"'              shift, and go to state 31
    '`'              shift, and go to state 32

    expr        go to state 126
    assignstmt  go to state 34


state 98

   10 stmt: T_WHILE '(' expr ')' . T_DO stmtlist T_DONE

    T_DO  shift, and go to state 127


state 99

   41 expr: '(' expr ')' .

    $default  reduce using rule 41 (expr)


state 100

   20 expr: '"' strlist '"' .

    $default  reduce using rule 20 (expr)


state 101

   40 expr: '`' nestedsubcmd '`' .

    $default  reduce using rule 40 (expr)


state 102

   23 expr: expr . T_ADD expr
   24     | expr . T_SUB expr
   25     | expr . T_MUL expr
   26     | expr . T_DIV expr
   27     | expr . T_MOD expr
   28     | expr . T_POW expr
   34     | expr . '<' expr
   35     | expr . '>' expr
   35     | expr '>' expr .  [$end, T_ELSE, T_FI, T_DONE, ';', ')']
   36     | expr . T_LEQ expr
   37     | expr . T_GEQ expr
   38     | expr . T_EQ expr
   39     | expr . T_NEQ expr

    T_SUB  shift, and go to state 71
    T_ADD  shift, and go to state 72
    T_MOD  shift, and go to state 73
    T_DIV  shift, and go to state 74
    T_MUL  shift, and go to state 75
    T_POW  shift, and go to state 76

    '>'    error (nonassociative)
    '<'    error (nonassociative)
    T_NEQ  error (nonassociative)
    T_EQ   error (nonassociative)
    T_GEQ  error (nonassociative)
    T_LEQ  error (nonassociative)

    $default  reduce using rule 35 (expr)

    Conflict between rule 35 and token '>' resolved as an error (%nonassoc '>').
    Conflict between rule 35 and token '<' resolved as an error (%nonassoc '<').
    Conflict between rule 35 and token T_NEQ resolved as an error (%nonassoc T_NEQ).
    Conflict between rule 35 and token T_EQ resolved as an error (%nonassoc T_EQ).
    Conflict between rule 35 and token T_GEQ resolved as an error (%nonassoc T_GEQ).
    Conflict between rule 35 and token T_LEQ resolved as an error (%nonassoc T_LEQ).
    Conflict between rule 35 and token T_SUB resolved as shift ('>' < T_SUB).
    Conflict between rule 35 and token T_ADD resolved as shift ('>' < T_ADD).
    Conflict between rule 35 and token T_MOD resolved as shift ('>' < T_MOD).
    Conflict between rule 35 and token T_DIV resolved as shift ('>' < T_DIV).
    Conflict between rule 35 and token T_MUL resolved as shift ('>' < T_MUL).
    Conflict between rule 35 and token T_POW resolved as shift ('>' < T_POW).


state 103

   23 expr: expr . T_ADD expr
   24     | expr . T_SUB expr
   25     | expr . T_MUL expr
   26     | expr . T_DIV expr
   27     | expr . T_MOD expr
   28     | expr . T_POW expr
   34     | expr . '<' expr
   34     | expr '<' expr .  [$end, T_ELSE, T_FI, T_DONE, ';', ')']
   35     | expr . '>' expr
   36     | expr . T_LEQ expr
   37     | expr . T_GEQ expr
   38     | expr . T_EQ expr
   39     | expr . T_NEQ expr

    T_SUB  shift, and go to state 71
    T_ADD  shift, and go to state 72
    T_MOD  shift, and go to state 73
    T_DIV  shift, and go to state 74
    T_MUL  shift, and go to state 75
    T_POW  shift, and go to state 76

    '>'    error (nonassociative)
    '<'    error (nonassociative)
    T_NEQ  error (nonassociative)
    T_EQ   error (nonassociative)
    T_GEQ  error (nonassociative)
    T_LEQ  error (nonassociative)

    $default  reduce using rule 34 (expr)

    Conflict between rule 34 and token '>' resolved as an error (%nonassoc '>').
    Conflict between rule 34 and token '<' resolved as an error (%nonassoc '<').
    Conflict between rule 34 and token T_NEQ resolved as an error (%nonassoc T_NEQ).
    Conflict between rule 34 and token T_EQ resolved as an error (%nonassoc T_EQ).
    Conflict between rule 34 and token T_GEQ resolved as an error (%nonassoc T_GEQ).
    Conflict between rule 34 and token T_LEQ resolved as an error (%nonassoc T_LEQ).
    Conflict between rule 34 and token T_SUB resolved as shift ('<' < T_SUB).
    Conflict between rule 34 and token T_ADD resolved as shift ('<' < T_ADD).
    Conflict between rule 34 and token T_MOD resolved as shift ('<' < T_MOD).
    Conflict between rule 34 and token T_DIV resolved as shift ('<' < T_DIV).
    Conflict between rule 34 and token T_MUL resolved as shift ('<' < T_MUL).
    Conflict between rule 34 and token T_POW resolved as shift ('<' < T_POW).


state 104

   23 expr: expr . T_ADD expr
   24     | expr . T_SUB expr
   25     | expr . T_MUL expr
   26     | expr . T_DIV expr
   27     | expr . T_MOD expr
   28     | expr . T_POW expr
   34     | expr . '<' expr
   35     | expr . '>' expr
   36     | expr . T_LEQ expr
   37     | expr . T_GEQ expr
   38     | expr . T_EQ expr
   39     | expr . T_NEQ expr
   39     | expr T_NEQ expr .  [$end, T_ELSE, T_FI, T_DONE, ';', ')']

    T_SUB  shift, and go to state 71
    T_ADD  shift, and go to state 72
    T_MOD  shift, and go to state 73
    T_DIV  shift, and go to state 74
    T_MUL  shift, and go to state 75
    T_POW  shift, and go to state 76

    '>'    error (nonassociative)
    '<'    error (nonassociative)
    T_NEQ  error (nonassociative)
    T_EQ   error (nonassociative)
    T_GEQ  error (nonassociative)
    T_LEQ  error (nonassociative)

    $default  reduce using rule 39 (expr)

    Conflict between rule 39 and token '>' resolved as an error (%nonassoc '>').
    Conflict between rule 39 and token '<' resolved as an error (%nonassoc '<').
    Conflict between rule 39 and token T_NEQ resolved as an error (%nonassoc T_NEQ).
    Conflict between rule 39 and token T_EQ resolved as an error (%nonassoc T_EQ).
    Conflict between rule 39 and token T_GEQ resolved as an error (%nonassoc T_GEQ).
    Conflict between rule 39 and token T_LEQ resolved as an error (%nonassoc T_LEQ).
    Conflict between rule 39 and token T_SUB resolved as shift (T_NEQ < T_SUB).
    Conflict between rule 39 and token T_ADD resolved as shift (T_NEQ < T_ADD).
    Conflict between rule 39 and token T_MOD resolved as shift (T_NEQ < T_MOD).
    Conflict between rule 39 and token T_DIV resolved as shift (T_NEQ < T_DIV).
    Conflict between rule 39 and token T_MUL resolved as shift (T_NEQ < T_MUL).
    Conflict between rule 39 and token T_POW resolved as shift (T_NEQ < T_POW).


state 105

   23 expr: expr . T_ADD expr
   24     | expr . T_SUB expr
   25     | expr . T_MUL expr
   26     | expr . T_DIV expr
   27     | expr . T_MOD expr
   28     | expr . T_POW expr
   34     | expr . '<' expr
   35     | expr . '>' expr
   36     | expr . T_LEQ expr
   37     | expr . T_GEQ expr
   38     | expr . T_EQ expr
   38     | expr T_EQ expr .  [$end, T_ELSE, T_FI, T_DONE, ';', ')']
   39     | expr . T_NEQ expr

    T_SUB  shift, and go to state 71
    T_ADD  shift, and go to state 72
    T_MOD  shift, and go to state 73
    T_DIV  shift, and go to state 74
    T_MUL  shift, and go to state 75
    T_POW  shift, and go to state 76

    '>'    error (nonassociative)
    '<'    error (nonassociative)
    T_NEQ  error (nonassociative)
    T_EQ   error (nonassociative)
    T_GEQ  error (nonassociative)
    T_LEQ  error (nonassociative)

    $default  reduce using rule 38 (expr)

    Conflict between rule 38 and token '>' resolved as an error (%nonassoc '>').
    Conflict between rule 38 and token '<' resolved as an error (%nonassoc '<').
    Conflict between rule 38 and token T_NEQ resolved as an error (%nonassoc T_NEQ).
    Conflict between rule 38 and token T_EQ resolved as an error (%nonassoc T_EQ).
    Conflict between rule 38 and token T_GEQ resolved as an error (%nonassoc T_GEQ).
    Conflict between rule 38 and token T_LEQ resolved as an error (%nonassoc T_LEQ).
    Conflict between rule 38 and token T_SUB resolved as shift (T_EQ < T_SUB).
    Conflict between rule 38 and token T_ADD resolved as shift (T_EQ < T_ADD).
    Conflict between rule 38 and token T_MOD resolved as shift (T_EQ < T_MOD).
    Conflict between rule 38 and token T_DIV resolved as shift (T_EQ < T_DIV).
    Conflict between rule 38 and token T_MUL resolved as shift (T_EQ < T_MUL).
    Conflict between rule 38 and token T_POW resolved as shift (T_EQ < T_POW).


state 106

   23 expr: expr . T_ADD expr
   24     | expr . T_SUB expr
   25     | expr . T_MUL expr
   26     | expr . T_DIV expr
   27     | expr . T_MOD expr
   28     | expr . T_POW expr
   34     | expr . '<' expr
   35     | expr . '>' expr
   36     | expr . T_LEQ expr
   37     | expr . T_GEQ expr
   37     | expr T_GEQ expr .  [$end, T_ELSE, T_FI, T_DONE, ';', ')']
   38     | expr . T_EQ expr
   39     | expr . T_NEQ expr

    T_SUB  shift, and go to state 71
    T_ADD  shift, and go to state 72
    T_MOD  shift, and go to state 73
    T_DIV  shift, and go to state 74
    T_MUL  shift, and go to state 75
    T_POW  shift, and go to state 76

    '>'    error (nonassociative)
    '<'    error (nonassociative)
    T_NEQ  error (nonassociative)
    T_EQ   error (nonassociative)
    T_GEQ  error (nonassociative)
    T_LEQ  error (nonassociative)

    $default  reduce using rule 37 (expr)

    Conflict between rule 37 and token '>' resolved as an error (%nonassoc '>').
    Conflict between rule 37 and token '<' resolved as an error (%nonassoc '<').
    Conflict between rule 37 and token T_NEQ resolved as an error (%nonassoc T_NEQ).
    Conflict between rule 37 and token T_EQ resolved as an error (%nonassoc T_EQ).
    Conflict between rule 37 and token T_GEQ resolved as an error (%nonassoc T_GEQ).
    Conflict between rule 37 and token T_LEQ resolved as an error (%nonassoc T_LEQ).
    Conflict between rule 37 and token T_SUB resolved as shift (T_GEQ < T_SUB).
    Conflict between rule 37 and token T_ADD resolved as shift (T_GEQ < T_ADD).
    Conflict between rule 37 and token T_MOD resolved as shift (T_GEQ < T_MOD).
    Conflict between rule 37 and token T_DIV resolved as shift (T_GEQ < T_DIV).
    Conflict between rule 37 and token T_MUL resolved as shift (T_GEQ < T_MUL).
    Conflict between rule 37 and token T_POW resolved as shift (T_GEQ < T_POW).


state 107

   23 expr: expr . T_ADD expr
   24     | expr . T_SUB expr
   25     | expr . T_MUL expr
   26     | expr . T_DIV expr
   27     | expr . T_MOD expr
   28     | expr . T_POW expr
   34     | expr . '<' expr
   35     | expr . '>' expr
   36     | expr . T_LEQ expr
   36     | expr T_LEQ expr .  [$end, T_ELSE, T_FI, T_DONE, ';', ')']
   37     | expr . T_GEQ expr
   38     | expr . T_EQ expr
   39     | expr . T_NEQ expr

    T_SUB  shift, and go to state 71
    T_ADD  shift, and go to state 72
    T_MOD  shift, and go to state 73
    T_DIV  shift, and go to state 74
    T_MUL  shift, and go to state 75
    T_POW  shift, and go to state 76

    '>'    error (nonassociative)
    '<'    error (nonassociative)
    T_NEQ  error (nonassociative)
    T_EQ   error (nonassociative)
    T_GEQ  error (nonassociative)
    T_LEQ  error (nonassociative)

    $default  reduce using rule 36 (expr)

    Conflict between rule 36 and token '>' resolved as an error (%nonassoc '>').
    Conflict between rule 36 and token '<' resolved as an error (%nonassoc '<').
    Conflict between rule 36 and token T_NEQ resolved as an error (%nonassoc T_NEQ).
    Conflict between rule 36 and token T_EQ resolved as an error (%nonassoc T_EQ).
    Conflict between rule 36 and token T_GEQ resolved as an error (%nonassoc T_GEQ).
    Conflict between rule 36 and token T_LEQ resolved as an error (%nonassoc T_LEQ).
    Conflict between rule 36 and token T_SUB resolved as shift (T_LEQ < T_SUB).
    Conflict between rule 36 and token T_ADD resolved as shift (T_LEQ < T_ADD).
    Conflict between rule 36 and token T_MOD resolved as shift (T_LEQ < T_MOD).
    Conflict between rule 36 and token T_DIV resolved as shift (T_LEQ < T_DIV).
    Conflict between rule 36 and token T_MUL resolved as shift (T_LEQ < T_MUL).
    Conflict between rule 36 and token T_POW resolved as shift (T_LEQ < T_POW).


state 108

   23 expr: expr . T_ADD expr
   24     | expr . T_SUB expr
   24     | expr T_SUB expr .  [$end, T_ELSE, T_FI, T_DONE, '>', '<', T_NEQ, T_EQ, T_GEQ, T_LEQ, T_SUB, T_ADD, ';', ')']
   25     | expr . T_MUL expr
   26     | expr . T_DIV expr
   27     | expr . T_MOD expr
   28     | expr . T_POW expr
   34     | expr . '<' expr
   35     | expr . '>' expr
   36     | expr . T_LEQ expr
   37     | expr . T_GEQ expr
   38     | expr . T_EQ expr
   39     | expr . T_NEQ expr

    T_MOD  shift, and go to state 73
    T_DIV  shift, and go to state 74
    T_MUL  shift, and go to state 75
    T_POW  shift, and go to state 76

    $default  reduce using rule 24 (expr)

    Conflict between rule 24 and token '>' resolved as reduce ('>' < T_SUB).
    Conflict between rule 24 and token '<' resolved as reduce ('<' < T_SUB).
    Conflict between rule 24 and token T_NEQ resolved as reduce (T_NEQ < T_SUB).
    Conflict between rule 24 and token T_EQ resolved as reduce (T_EQ < T_SUB).
    Conflict between rule 24 and token T_GEQ resolved as reduce (T_GEQ < T_SUB).
    Conflict between rule 24 and token T_LEQ resolved as reduce (T_LEQ < T_SUB).
    Conflict between rule 24 and token T_SUB resolved as reduce (%left T_SUB).
    Conflict between rule 24 and token T_ADD resolved as reduce (%left T_ADD).
    Conflict between rule 24 and token T_MOD resolved as shift (T_SUB < T_MOD).
    Conflict between rule 24 and token T_DIV resolved as shift (T_SUB < T_DIV).
    Conflict between rule 24 and token T_MUL resolved as shift (T_SUB < T_MUL).
    Conflict between rule 24 and token T_POW resolved as shift (T_SUB < T_POW).


state 109

   23 expr: expr . T_ADD expr
   23     | expr T_ADD expr .  [$end, T_ELSE, T_FI, T_DONE, '>', '<', T_NEQ, T_EQ, T_GEQ, T_LEQ, T_SUB, T_ADD, ';', ')']
   24     | expr . T_SUB expr
   25     | expr . T_MUL expr
   26     | expr . T_DIV expr
   27     | expr . T_MOD expr
   28     | expr . T_POW expr
   34     | expr . '<' expr
   35     | expr . '>' expr
   36     | expr . T_LEQ expr
   37     | expr . T_GEQ expr
   38     | expr . T_EQ expr
   39     | expr . T_NEQ expr

    T_MOD  shift, and go to state 73
    T_DIV  shift, and go to state 74
    T_MUL  shift, and go to state 75
    T_POW  shift, and go to state 76

    $default  reduce using rule 23 (expr)

    Conflict between rule 23 and token '>' resolved as reduce ('>' < T_ADD).
    Conflict between rule 23 and token '<' resolved as reduce ('<' < T_ADD).
    Conflict between rule 23 and token T_NEQ resolved as reduce (T_NEQ < T_ADD).
    Conflict between rule 23 and token T_EQ resolved as reduce (T_EQ < T_ADD).
    Conflict between rule 23 and token T_GEQ resolved as reduce (T_GEQ < T_ADD).
    Conflict between rule 23 and token T_LEQ resolved as reduce (T_LEQ < T_ADD).
    Conflict between rule 23 and token T_SUB resolved as reduce (%left T_SUB).
    Conflict between rule 23 and token T_ADD resolved as reduce (%left T_ADD).
    Conflict between rule 23 and token T_MOD resolved as shift (T_ADD < T_MOD).
    Conflict between rule 23 and token T_DIV resolved as shift (T_ADD < T_DIV).
    Conflict between rule 23 and token T_MUL resolved as shift (T_ADD < T_MUL).
    Conflict between rule 23 and token T_POW resolved as shift (T_ADD < T_POW).


state 110

   23 expr: expr . T_ADD expr
   24     | expr . T_SUB expr
   25     | expr . T_MUL expr
   26     | expr . T_DIV expr
   27     | expr . T_MOD expr
   27     | expr T_MOD expr .  [$end, T_ELSE, T_FI, T_DONE, '>', '<', T_NEQ, T_EQ, T_GEQ, T_LEQ, T_SUB, T_ADD, T_MOD, T_DIV, T_MUL, ';', ')']
   28     | expr . T_POW expr
   34     | expr . '<' expr
   35     | expr . '>' expr
   36     | expr . T_LEQ expr
   37     | expr . T_GEQ expr
   38     | expr . T_EQ expr
   39     | expr . T_NEQ expr

    T_POW  shift, and go to state 76

    $default  reduce using rule 27 (expr)

    Conflict between rule 27 and token '>' resolved as reduce ('>' < T_MOD).
    Conflict between rule 27 and token '<' resolved as reduce ('<' < T_MOD).
    Conflict between rule 27 and token T_NEQ resolved as reduce (T_NEQ < T_MOD).
    Conflict between rule 27 and token T_EQ resolved as reduce (T_EQ < T_MOD).
    Conflict between rule 27 and token T_GEQ resolved as reduce (T_GEQ < T_MOD).
    Conflict between rule 27 and token T_LEQ resolved as reduce (T_LEQ < T_MOD).
    Conflict between rule 27 and token T_SUB resolved as reduce (T_SUB < T_MOD).
    Conflict between rule 27 and token T_ADD resolved as reduce (T_ADD < T_MOD).
    Conflict between rule 27 and token T_MOD resolved as reduce (%left T_MOD).
    Conflict between rule 27 and token T_DIV resolved as reduce (%left T_DIV).
    Conflict between rule 27 and token T_MUL resolved as reduce (%left T_MUL).
    Conflict between rule 27 and token T_POW resolved as shift (T_MOD < T_POW).


state 111

   23 expr: expr . T_ADD expr
   24     | expr . T_SUB expr
   25     | expr . T_MUL expr
   26     | expr . T_DIV expr
   26     | expr T_DIV expr .  [$end, T_ELSE, T_FI, T_DONE, '>', '<', T_NEQ, T_EQ, T_GEQ, T_LEQ, T_SUB, T_ADD, T_MOD, T_DIV, T_MUL, ';', ')']
   27     | expr . T_MOD expr
   28     | expr . T_POW expr
   34     | expr . '<' expr
   35     | expr . '>' expr
   36     | expr . T_LEQ expr
   37     | expr . T_GEQ expr
   38     | expr . T_EQ expr
   39     | expr . T_NEQ expr

    T_POW  shift, and go to state 76

    $default  reduce using rule 26 (expr)

    Conflict between rule 26 and token '>' resolved as reduce ('>' < T_DIV).
    Conflict between rule 26 and token '<' resolved as reduce ('<' < T_DIV).
    Conflict between rule 26 and token T_NEQ resolved as reduce (T_NEQ < T_DIV).
    Conflict between rule 26 and token T_EQ resolved as reduce (T_EQ < T_DIV).
    Conflict between rule 26 and token T_GEQ resolved as reduce (T_GEQ < T_DIV).
    Conflict between rule 26 and token T_LEQ resolved as reduce (T_LEQ < T_DIV).
    Conflict between rule 26 and token T_SUB resolved as reduce (T_SUB < T_DIV).
    Conflict between rule 26 and token T_ADD resolved as reduce (T_ADD < T_DIV).
    Conflict between rule 26 and token T_MOD resolved as reduce (%left T_MOD).
    Conflict between rule 26 and token T_DIV resolved as reduce (%left T_DIV).
    Conflict between rule 26 and token T_MUL resolved as reduce (%left T_MUL).
    Conflict between rule 26 and token T_POW resolved as shift (T_DIV < T_POW).


state 112

   23 expr: expr . T_ADD expr
   24     | expr . T_SUB expr
   25     | expr . T_MUL expr
   25     | expr T_MUL expr .  [$end, T_ELSE, T_FI, T_DONE, '>', '<', T_NEQ, T_EQ, T_GEQ, T_LEQ, T_SUB, T_ADD, T_MOD, T_DIV, T_MUL, ';', ')']
   26     | expr . T_DIV expr
   27     | expr . T_MOD expr
   28     | expr . T_POW expr
   34     | expr . '<' expr
   35     | expr . '>' expr
   36     | expr . T_LEQ expr
   37     | expr . T_GEQ expr
   38     | expr . T_EQ expr
   39     | expr . T_NEQ expr

    T_POW  shift, and go to state 76

    $default  reduce using rule 25 (expr)

    Conflict between rule 25 and token '>' resolved as reduce ('>' < T_MUL).
    Conflict between rule 25 and token '<' resolved as reduce ('<' < T_MUL).
    Conflict between rule 25 and token T_NEQ resolved as reduce (T_NEQ < T_MUL).
    Conflict between rule 25 and token T_EQ resolved as reduce (T_EQ < T_MUL).
    Conflict between rule 25 and token T_GEQ resolved as reduce (T_GEQ < T_MUL).
    Conflict between rule 25 and token T_LEQ resolved as reduce (T_LEQ < T_MUL).
    Conflict between rule 25 and token T_SUB resolved as reduce (T_SUB < T_MUL).
    Conflict between rule 25 and token T_ADD resolved as reduce (T_ADD < T_MUL).
    Conflict between rule 25 and token T_MOD resolved as reduce (%left T_MOD).
    Conflict between rule 25 and token T_DIV resolved as reduce (%left T_DIV).
    Conflict between rule 25 and token T_MUL resolved as reduce (%left T_MUL).
    Conflict between rule 25 and token T_POW resolved as shift (T_MUL < T_POW).


state 113

   23 expr: expr . T_ADD expr
   24     | expr . T_SUB expr
   25     | expr . T_MUL expr
   26     | expr . T_DIV expr
   27     | expr . T_MOD expr
   28     | expr . T_POW expr
   28     | expr T_POW expr .  [$end, T_ELSE, T_FI, T_DONE, '>', '<', T_NEQ, T_EQ, T_GEQ, T_LEQ, T_SUB, T_ADD, T_MOD, T_DIV, T_MUL, ';', ')']
   34     | expr . '<' expr
   35     | expr . '>' expr
   36     | expr . T_LEQ expr
   37     | expr . T_GEQ expr
   38     | expr . T_EQ expr
   39     | expr . T_NEQ expr

    T_POW  shift, and go to state 76

    $default  reduce using rule 28 (expr)

    Conflict between rule 28 and token '>' resolved as reduce ('>' < T_POW).
    Conflict between rule 28 and token '<' resolved as reduce ('<' < T_POW).
    Conflict between rule 28 and token T_NEQ resolved as reduce (T_NEQ < T_POW).
    Conflict between rule 28 and token T_EQ resolved as reduce (T_EQ < T_POW).
    Conflict between rule 28 and token T_GEQ resolved as reduce (T_GEQ < T_POW).
    Conflict between rule 28 and token T_LEQ resolved as reduce (T_LEQ < T_POW).
    Conflict between rule 28 and token T_SUB resolved as reduce (T_SUB < T_POW).
    Conflict between rule 28 and token T_ADD resolved as reduce (T_ADD < T_POW).
    Conflict between rule 28 and token T_MOD resolved as reduce (T_MOD < T_POW).
    Conflict between rule 28 and token T_DIV resolved as reduce (T_DIV < T_POW).
    Conflict between rule 28 and token T_MUL resolved as reduce (T_MUL < T_POW).
    Conflict between rule 28 and token T_POW resolved as shift (%right T_POW).


state 114

   17 strcomp: '(' expr . ')'
   23 expr: expr . T_ADD expr
   24     | expr . T_SUB expr
   25     | expr . T_MUL expr
   26     | expr . T_DIV expr
   27     | expr . T_MOD expr
   28     | expr . T_POW expr
   34     | expr . '<' expr
   35     | expr . '>' expr
   36     | expr . T_LEQ expr
   37     | expr . T_GEQ expr
   38     | expr . T_EQ expr
   39     | expr . T_NEQ expr

    '>'    shift, and go to state 65
    '<'    shift, and go to state 66
    T_NEQ  shift, and go to state 67
    T_EQ   shift, and go to state 68
    T_GEQ  shift, and go to state 69
    T_LEQ  shift, and go to state 70
    T_SUB  shift, and go to state 71
    T_ADD  shift, and go to state 72
    T_MOD  shift, and go to state 73
    T_DIV  shift, and go to state 74
    T_MUL  shift, and go to state 75
    T_POW  shift, and go to state 76
    ')'    shift, and go to state 128


state 115

   61 nestedcmdexpr: '(' expr ')' .

    $default  reduce using rule 61 (nestedcmdexpr)


state 116

   59 nestedcmdexpr: '"' strlist '"' .

    $default  reduce using rule 59 (nestedcmdexpr)


state 117

   64 nestedsubcmd: nestedcmdexprlist cmdredirin cmdredirout . cmdredirerr cmdredirfd
   71 cmdredirerr: . T_ERR2FILE nestedcmdexpr
   72            | .  [T_ERR2OUT, T_OUT2ERR, '`', '|']

    T_ERR2FILE  shift, and go to state 122

    $default  reduce using rule 72 (cmdredirerr)

    cmdredirerr  go to state 129


state 118

   56 nestedcmdexpr: . T_NUMBER
   57              | . T_STRING
   58              | . T_STRING_SCONST
   59              | . '"' strlist '"'
   60              | . T_VAR
   61              | . '(' expr ')'
   63 nestedcmdexprlist: nestedcmdexprlist . nestedcmdexpr
   65 nestedsubcmd: nestedsubcmd '|' nestedcmdexprlist . cmdredirin cmdredirout cmdredirerr cmdredirfd
   69 cmdredirin: . '<' nestedcmdexpr
   70           | .  [T_ERR2OUT, T_OUT2ERR, T_APPEND, T_ERR2FILE, T_OUT2FILE, '>', '`', '|']

    T_NUMBER         shift, and go to state 36
    T_STRING         shift, and go to state 37
    T_STRING_SCONST  shift, and go to state 38
    T_VAR            shift, and go to state 39
    '<'              shift, and go to state 48
    '('              shift, and go to state 40
    '"'              shift, and go to state 41

    $default  reduce using rule 70 (cmdredirin)

    nestedcmdexpr  go to state 85
    cmdredirin     go to state 130


state 119

   75 cmdredirout: T_APPEND nestedcmdexpr .

    $default  reduce using rule 75 (cmdredirout)


state 120

   74 cmdredirout: T_OUT2FILE nestedcmdexpr .

    $default  reduce using rule 74 (cmdredirout)


state 121

   73 cmdredirout: '>' nestedcmdexpr .

    $default  reduce using rule 73 (cmdredirout)


state 122

   56 nestedcmdexpr: . T_NUMBER
   57              | . T_STRING
   58              | . T_STRING_SCONST
   59              | . '"' strlist '"'
   60              | . T_VAR
   61              | . '(' expr ')'
   71 cmdredirerr: T_ERR2FILE . nestedcmdexpr

    T_NUMBER         shift, and go to state 36
    T_STRING         shift, and go to state 37
    T_STRING_SCONST  shift, and go to state 38
    T_VAR            shift, and go to state 39
    '('              shift, and go to state 40
    '"'              shift, and go to state 41

    nestedcmdexpr  go to state 131


state 123

   54 subcmd: cmdexprlist cmdredirin cmdredirout cmdredirerr . cmdredirfd
   66 cmdredirfd: . T_ERR2OUT
   67           | . T_OUT2ERR
   68           | .  [$end, T_ELSE, T_FI, T_DONE, ';', '&', '|']

    T_ERR2OUT  shift, and go to state 132
    T_OUT2ERR  shift, and go to state 133

    $default  reduce using rule 68 (cmdredirfd)

    cmdredirfd  go to state 134


state 124

   55 subcmd: subcmd '|' cmdexprlist cmdredirin . cmdredirout cmdredirerr cmdredirfd
   73 cmdredirout: . '>' nestedcmdexpr
   74            | . T_OUT2FILE nestedcmdexpr
   75            | . T_APPEND nestedcmdexpr
   76            | .  [$end, T_ELSE, T_FI, T_DONE, T_ERR2OUT, T_OUT2ERR, T_ERR2FILE, ';', '&', '|']

    T_APPEND    shift, and go to state 91
    T_OUT2FILE  shift, and go to state 92
    '>'         shift, and go to state 93

    $default  reduce using rule 76 (cmdredirout)

    cmdredirout  go to state 135


state 125

    2 stmtlist: .  [T_ELSE, T_FI]
    3         | . stmtlistr
    4         | . stmtlistr ';'
    5 stmtlistr: . stmt
    6          | . stmtlistr ';' stmt
    7 stmt: . T_IF '(' expr ')' T_THEN stmtlist T_FI
    7     | T_IF '(' expr ')' T_THEN . stmtlist T_FI
    8     | . T_IF '(' expr ')' T_THEN stmtlist T_ELSE stmtlist T_FI
    8     | T_IF '(' expr ')' T_THEN . stmtlist T_ELSE stmtlist T_FI
    9     | . T_FOR '(' expr ';' expr ';' expr ')' T_DO stmtlist T_DONE
   10     | . T_WHILE '(' expr ')' T_DO stmtlist T_DONE
   11     | . assignstmt
   12     | . cmd
   42 assignstmt: . T_VAR T_ASSIGN expr
   43 cmdexpr: . T_NUMBER
   44        | . T_STRING
   45        | . T_STRING_SCONST
   46        | . '"' strlist '"'
   47        | . T_VAR
   48        | . '`' nestedsubcmd '`'
   49        | . '(' expr ')'
   50 cmdexprlist: . cmdexpr
   51            | . cmdexprlist cmdexpr
   52 cmd: . subcmd
   53    | . subcmd '&'
   54 subcmd: . cmdexprlist cmdredirin cmdredirout cmdredirerr cmdredirfd
   55       | . subcmd '|' cmdexprlist cmdredirin cmdredirout cmdredirerr cmdredirfd

    T_IF             shift, and go to state 1
    T_FOR            shift, and go to state 2
    T_WHILE          shift, and go to state 3
    T_NUMBER         shift, and go to state 4
    T_STRING         shift, and go to state 5
    T_STRING_SCONST  shift, and go to state 6
    T_VAR            shift, and go to state 7
    '('              shift, and go to state 8
    '"'              shift, and go to state 9
    '`'              shift, and go to state 10

    $default  reduce using rule 2 (stmtlist)

    stmtlist     go to state 136
    stmtlistr    go to state 13
    stmt         go to state 14
    assignstmt   go to state 15
    cmdexpr      go to state 16
    cmdexprlist  go to state 17
    cmd          go to state 18
    subcmd       go to state 19


state 126

    9 stmt: T_FOR '(' expr ';' expr . ';' expr ')' T_DO stmtlist T_DONE
   23 expr: expr . T_ADD expr
   24     | expr . T_SUB expr
   25     | expr . T_MUL expr
   26     | expr . T_DIV expr
   27     | expr . T_MOD expr
   28     | expr . T_POW expr
   34     | expr . '<' expr
   35     | expr . '>' expr
   36     | expr . T_LEQ expr
   37     | expr . T_GEQ expr
   38     | expr . T_EQ expr
   39     | expr . T_NEQ expr

    '>'    shift, and go to state 65
    '<'    shift, and go to state 66
    T_NEQ  shift, and go to state 67
    T_EQ   shift, and go to state 68
    T_GEQ  shift, and go to state 69
    T_LEQ  shift, and go to state 70
    T_SUB  shift, and go to state 71
    T_ADD  shift, and go to state 72
    T_MOD  shift, and go to state 73
    T_DIV  shift, and go to state 74
    T_MUL  shift, and go to state 75
    T_POW  shift, and go to state 76
    ';'    shift, and go to state 137


state 127

    2 stmtlist: .  [T_DONE]
    3         | . stmtlistr
    4         | . stmtlistr ';'
    5 stmtlistr: . stmt
    6          | . stmtlistr ';' stmt
    7 stmt: . T_IF '(' expr ')' T_THEN stmtlist T_FI
    8     | . T_IF '(' expr ')' T_THEN stmtlist T_ELSE stmtlist T_FI
    9     | . T_FOR '(' expr ';' expr ';' expr ')' T_DO stmtlist T_DONE
   10     | . T_WHILE '(' expr ')' T_DO stmtlist T_DONE
   10     | T_WHILE '(' expr ')' T_DO . stmtlist T_DONE
   11     | . assignstmt
   12     | . cmd
   42 assignstmt: . T_VAR T_ASSIGN expr
   43 cmdexpr: . T_NUMBER
   44        | . T_STRING
   45        | . T_STRING_SCONST
   46        | . '"' strlist '"'
   47        | . T_VAR
   48        | . '`' nestedsubcmd '`'
   49        | . '(' expr ')'
   50 cmdexprlist: . cmdexpr
   51            | . cmdexprlist cmdexpr
   52 cmd: . subcmd
   53    | . subcmd '&'
   54 subcmd: . cmdexprlist cmdredirin cmdredirout cmdredirerr cmdredirfd
   55       | . subcmd '|' cmdexprlist cmdredirin cmdredirout cmdredirerr cmdredirfd

    T_IF             shift, and go to state 1
    T_FOR            shift, and go to state 2
    T_WHILE          shift, and go to state 3
    T_NUMBER         shift, and go to state 4
    T_STRING         shift, and go to state 5
    T_STRING_SCONST  shift, and go to state 6
    T_VAR            shift, and go to state 7
    '('              shift, and go to state 8
    '"'              shift, and go to state 9
    '`'              shift, and go to state 10

    $default  reduce using rule 2 (stmtlist)

    stmtlist     go to state 138
    stmtlistr    go to state 13
    stmt         go to state 14
    assignstmt   go to state 15
    cmdexpr      go to state 16
    cmdexprlist  go to state 17
    cmd          go to state 18
    subcmd       go to state 19


state 128

   17 strcomp: '(' expr ')' .

    $default  reduce using rule 17 (strcomp)


state 129

   64 nestedsubcmd: nestedcmdexprlist cmdredirin cmdredirout cmdredirerr . cmdredirfd
   66 cmdredirfd: . T_ERR2OUT
   67           | . T_OUT2ERR
   68           | .  ['`', '|']

    T_ERR2OUT  shift, and go to state 132
    T_OUT2ERR  shift, and go to state 133

    $default  reduce using rule 68 (cmdredirfd)

    cmdredirfd  go to state 139


state 130

   65 nestedsubcmd: nestedsubcmd '|' nestedcmdexprlist cmdredirin . cmdredirout cmdredirerr cmdredirfd
   73 cmdredirout: . '>' nestedcmdexpr
   74            | . T_OUT2FILE nestedcmdexpr
   75            | . T_APPEND nestedcmdexpr
   76            | .  [T_ERR2OUT, T_OUT2ERR, T_ERR2FILE, '`', '|']

    T_APPEND    shift, and go to state 91
    T_OUT2FILE  shift, and go to state 92
    '>'         shift, and go to state 93

    $default  reduce using rule 76 (cmdredirout)

    cmdredirout  go to state 140


state 131

   71 cmdredirerr: T_ERR2FILE nestedcmdexpr .

    $default  reduce using rule 71 (cmdredirerr)


state 132

   66 cmdredirfd: T_ERR2OUT .

    $default  reduce using rule 66 (cmdredirfd)


state 133

   67 cmdredirfd: T_OUT2ERR .

    $default  reduce using rule 67 (cmdredirfd)


state 134

   54 subcmd: cmdexprlist cmdredirin cmdredirout cmdredirerr cmdredirfd .

    $default  reduce using rule 54 (subcmd)


state 135

   55 subcmd: subcmd '|' cmdexprlist cmdredirin cmdredirout . cmdredirerr cmdredirfd
   71 cmdredirerr: . T_ERR2FILE nestedcmdexpr
   72            | .  [$end, T_ELSE, T_FI, T_DONE, T_ERR2OUT, T_OUT2ERR, ';', '&', '|']

    T_ERR2FILE  shift, and go to state 122

    $default  reduce using rule 72 (cmdredirerr)

    cmdredirerr  go to state 141


state 136

    7 stmt: T_IF '(' expr ')' T_THEN stmtlist . T_FI
    8     | T_IF '(' expr ')' T_THEN stmtlist . T_ELSE stmtlist T_FI

    T_ELSE  shift, and go to state 142
    T_FI    shift, and go to state 143


state 137

    9 stmt: T_FOR '(' expr ';' expr ';' . expr ')' T_DO stmtlist T_DONE
   18 expr: . T_NUMBER
   19     | . T_STRING_SCONST
   20     | . '"' strlist '"'
   21     | . T_VAR
   22     | . assignstmt
   23     | . expr T_ADD expr
   24     | . expr T_SUB expr
   25     | . expr T_MUL expr
   26     | . expr T_DIV expr
   27     | . expr T_MOD expr
   28     | . expr T_POW expr
   29     | . T_SUB expr
   30     | . T_INC T_VAR
   31     | . T_DEC T_VAR
   32     | . T_VAR T_INC
   33     | . T_VAR T_DEC
   34     | . expr '<' expr
   35     | . expr '>' expr
   36     | . expr T_LEQ expr
   37     | . expr T_GEQ expr
   38     | . expr T_EQ expr
   39     | . expr T_NEQ expr
   40     | . '`' nestedsubcmd '`'
   41     | . '(' expr ')'
   42 assignstmt: . T_VAR T_ASSIGN expr

    T_NUMBER         shift, and go to state 24
    T_STRING_SCONST  shift, and go to state 25
    T_VAR            shift, and go to state 26
    T_SUB            shift, and go to state 27
    T_DEC            shift, and go to state 28
    T_INC            shift, and go to state 29
    '('              shift, and go to state 30
    '"'              shift, and go to state 31
    '`'              shift, and go to state 32

    expr        go to state 144
    assignstmt  go to state 34


state 138

   10 stmt: T_WHILE '(' expr ')' T_DO stmtlist . T_DONE

    T_DONE  shift, and go to state 145


state 139

   64 nestedsubcmd: nestedcmdexprlist cmdredirin cmdredirout cmdredirerr cmdredirfd .

    $default  reduce using rule 64 (nestedsubcmd)


state 140

   65 nestedsubcmd: nestedsubcmd '|' nestedcmdexprlist cmdredirin cmdredirout . cmdredirerr cmdredirfd
   71 cmdredirerr: . T_ERR2FILE nestedcmdexpr
   72            | .  [T_ERR2OUT, T_OUT2ERR, '`', '|']

    T_ERR2FILE  shift, and go to state 122

    $default  reduce using rule 72 (cmdredirerr)

    cmdredirerr  go to state 146


state 141

   55 subcmd: subcmd '|' cmdexprlist cmdredirin cmdredirout cmdredirerr . cmdredirfd
   66 cmdredirfd: . T_ERR2OUT
   67           | . T_OUT2ERR
   68           | .  [$end, T_ELSE, T_FI, T_DONE, ';', '&', '|']

    T_ERR2OUT  shift, and go to state 132
    T_OUT2ERR  shift, and go to state 133

    $default  reduce using rule 68 (cmdredirfd)

    cmdredirfd  go to state 147


state 142

    2 stmtlist: .  [T_FI]
    3         | . stmtlistr
    4         | . stmtlistr ';'
    5 stmtlistr: . stmt
    6          | . stmtlistr ';' stmt
    7 stmt: . T_IF '(' expr ')' T_THEN stmtlist T_FI
    8     | . T_IF '(' expr ')' T_THEN stmtlist T_ELSE stmtlist T_FI
    8     | T_IF '(' expr ')' T_THEN stmtlist T_ELSE . stmtlist T_FI
    9     | . T_FOR '(' expr ';' expr ';' expr ')' T_DO stmtlist T_DONE
   10     | . T_WHILE '(' expr ')' T_DO stmtlist T_DONE
   11     | . assignstmt
   12     | . cmd
   42 assignstmt: . T_VAR T_ASSIGN expr
   43 cmdexpr: . T_NUMBER
   44        | . T_STRING
   45        | . T_STRING_SCONST
   46        | . '"' strlist '"'
   47        | . T_VAR
   48        | . '`' nestedsubcmd '`'
   49        | . '(' expr ')'
   50 cmdexprlist: . cmdexpr
   51            | . cmdexprlist cmdexpr
   52 cmd: . subcmd
   53    | . subcmd '&'
   54 subcmd: . cmdexprlist cmdredirin cmdredirout cmdredirerr cmdredirfd
   55       | . subcmd '|' cmdexprlist cmdredirin cmdredirout cmdredirerr cmdredirfd

    T_IF             shift, and go to state 1
    T_FOR            shift, and go to state 2
    T_WHILE          shift, and go to state 3
    T_NUMBER         shift, and go to state 4
    T_STRING         shift, and go to state 5
    T_STRING_SCONST  shift, and go to state 6
    T_VAR            shift, and go to state 7
    '('              shift, and go to state 8
    '"'              shift, and go to state 9
    '`'              shift, and go to state 10

    $default  reduce using rule 2 (stmtlist)

    stmtlist     go to state 148
    stmtlistr    go to state 13
    stmt         go to state 14
    assignstmt   go to state 15
    cmdexpr      go to state 16
    cmdexprlist  go to state 17
    cmd          go to state 18
    subcmd       go to state 19


state 143

    7 stmt: T_IF '(' expr ')' T_THEN stmtlist T_FI .

    $default  reduce using rule 7 (stmt)


state 144

    9 stmt: T_FOR '(' expr ';' expr ';' expr . ')' T_DO stmtlist T_DONE
   23 expr: expr . T_ADD expr
   24     | expr . T_SUB expr
   25     | expr . T_MUL expr
   26     | expr . T_DIV expr
   27     | expr . T_MOD expr
   28     | expr . T_POW expr
   34     | expr . '<' expr
   35     | expr . '>' expr
   36     | expr . T_LEQ expr
   37     | expr . T_GEQ expr
   38     | expr . T_EQ expr
   39     | expr . T_NEQ expr

    '>'    shift, and go to state 65
    '<'    shift, and go to state 66
    T_NEQ  shift, and go to state 67
    T_EQ   shift, and go to state 68
    T_GEQ  shift, and go to state 69
    T_LEQ  shift, and go to state 70
    T_SUB  shift, and go to state 71
    T_ADD  shift, and go to state 72
    T_MOD  shift, and go to state 73
    T_DIV  shift, and go to state 74
    T_MUL  shift, and go to state 75
    T_POW  shift, and go to state 76
    ')'    shift, and go to state 149


state 145

   10 stmt: T_WHILE '(' expr ')' T_DO stmtlist T_DONE .

    $default  reduce using rule 10 (stmt)


state 146

   65 nestedsubcmd: nestedsubcmd '|' nestedcmdexprlist cmdredirin cmdredirout cmdredirerr . cmdredirfd
   66 cmdredirfd: . T_ERR2OUT
   67           | . T_OUT2ERR
   68           | .  ['`', '|']

    T_ERR2OUT  shift, and go to state 132
    T_OUT2ERR  shift, and go to state 133

    $default  reduce using rule 68 (cmdredirfd)

    cmdredirfd  go to state 150


state 147

   55 subcmd: subcmd '|' cmdexprlist cmdredirin cmdredirout cmdredirerr cmdredirfd .

    $default  reduce using rule 55 (subcmd)


state 148

    8 stmt: T_IF '(' expr ')' T_THEN stmtlist T_ELSE stmtlist . T_FI

    T_FI  shift, and go to state 151


state 149

    9 stmt: T_FOR '(' expr ';' expr ';' expr ')' . T_DO stmtlist T_DONE

    T_DO  shift, and go to state 152


state 150

   65 nestedsubcmd: nestedsubcmd '|' nestedcmdexprlist cmdredirin cmdredirout cmdredirerr cmdredirfd .

    $default  reduce using rule 65 (nestedsubcmd)


state 151

    8 stmt: T_IF '(' expr ')' T_THEN stmtlist T_ELSE stmtlist T_FI .

    $default  reduce using rule 8 (stmt)


state 152

    2 stmtlist: .  [T_DONE]
    3         | . stmtlistr
    4         | . stmtlistr ';'
    5 stmtlistr: . stmt
    6          | . stmtlistr ';' stmt
    7 stmt: . T_IF '(' expr ')' T_THEN stmtlist T_FI
    8     | . T_IF '(' expr ')' T_THEN stmtlist T_ELSE stmtlist T_FI
    9     | . T_FOR '(' expr ';' expr ';' expr ')' T_DO stmtlist T_DONE
    9     | T_FOR '(' expr ';' expr ';' expr ')' T_DO . stmtlist T_DONE
   10     | . T_WHILE '(' expr ')' T_DO stmtlist T_DONE
   11     | . assignstmt
   12     | . cmd
   42 assignstmt: . T_VAR T_ASSIGN expr
   43 cmdexpr: . T_NUMBER
   44        | . T_STRING
   45        | . T_STRING_SCONST
   46        | . '"' strlist '"'
   47        | . T_VAR
   48        | . '`' nestedsubcmd '`'
   49        | . '(' expr ')'
   50 cmdexprlist: . cmdexpr
   51            | . cmdexprlist cmdexpr
   52 cmd: . subcmd
   53    | . subcmd '&'
   54 subcmd: . cmdexprlist cmdredirin cmdredirout cmdredirerr cmdredirfd
   55       | . subcmd '|' cmdexprlist cmdredirin cmdredirout cmdredirerr cmdredirfd

    T_IF             shift, and go to state 1
    T_FOR            shift, and go to state 2
    T_WHILE          shift, and go to state 3
    T_NUMBER         shift, and go to state 4
    T_STRING         shift, and go to state 5
    T_STRING_SCONST  shift, and go to state 6
    T_VAR            shift, and go to state 7
    '('              shift, and go to state 8
    '"'              shift, and go to state 9
    '`'              shift, and go to state 10

    $default  reduce using rule 2 (stmtlist)

    stmtlist     go to state 153
    stmtlistr    go to state 13
    stmt         go to state 14
    assignstmt   go to state 15
    cmdexpr      go to state 16
    cmdexprlist  go to state 17
    cmd          go to state 18
    subcmd       go to state 19


state 153

    9 stmt: T_FOR '(' expr ';' expr ';' expr ')' T_DO stmtlist . T_DONE

    T_DONE  shift, and go to state 154


state 154

    9 stmt: T_FOR '(' expr ';' expr ';' expr ')' T_DO stmtlist T_DONE .

    $default  reduce using rule 9 (stmt)
