Grammar

    0 $accept: start $end

    1 start: stmtlist

    2 stmtlist: /* empty */
    3         | stmtlistr
    4         | stmtlistr ';'

    5 stmtlistr: stmt
    6          | stmtlistr ';' stmt

    7 stmt: T_FUNCTION T_STRING T_BEGIN stmtlist T_END
    8     | T_IF '(' expr ')' T_THEN stmtlist T_FI
    9     | T_IF '(' expr ')' T_THEN stmtlist T_ELSE stmtlist T_FI
   10     | T_FOR '(' expr ';' expr ';' expr ')' T_DO stmtlist T_DONE
   11     | T_WHILE '(' expr ')' T_DO stmtlist T_DONE
   12     | assignstmt
   13     | cmd

   14 strlist: strlist strcomp
   15        | /* empty */

   16 strcomp: T_STRING
   17        | T_VAR
   18        | '(' expr ')'

   19 expr: T_NUMBER
   20     | T_STRING_SCONST
   21     | '"' strlist '"'
   22     | T_VAR
   23     | T_VAR '[' expr ']'
   24     | '[' exprlist ']'
   25     | assignstmt
   26     | expr T_ADD expr
   27     | expr T_SUB expr
   28     | expr T_MUL expr
   29     | expr T_DIV expr
   30     | expr T_MOD expr
   31     | expr T_POW expr
   32     | T_SUB expr
   33     | T_INC T_VAR
   34     | T_DEC T_VAR
   35     | T_VAR T_INC
   36     | T_VAR T_DEC
   37     | expr '<' expr
   38     | expr '>' expr
   39     | expr T_LEQ expr
   40     | expr T_GEQ expr
   41     | expr T_EQ expr
   42     | expr T_NEQ expr
   43     | '`' nestedsubcmd '`'
   44     | '(' expr ')'
   45     | expr '.' T_STRING

   46 exprlist: neexprlist
   47         | /* empty */

   48 neexprlist: neexprlist ',' expr
   49           | expr

   50 assignstmt: T_VAR T_ASSIGN expr
   51           | T_VAR '[' ']' T_ASSIGN expr
   52           | T_VAR '[' expr ']' T_ASSIGN expr

   53 cmdexpr: T_NUMBER
   54        | T_STRING
   55        | T_STRING_SCONST
   56        | '"' strlist '"'
   57        | T_VAR
   58        | '`' nestedsubcmd '`'
   59        | '(' expr ')'

   60 cmdexprlist: cmdexpr
   61            | cmdexprlist cmdexpr

   62 cmd: subcmd
   63    | subcmd '&'

   64 subcmd: cmdexprlist cmdredirin cmdredirout cmdredirerr cmdredirfd
   65       | subcmd '|' cmdexprlist cmdredirin cmdredirout cmdredirerr cmdredirfd

   66 nestedcmdexpr: T_NUMBER
   67              | T_STRING
   68              | T_STRING_SCONST
   69              | '"' strlist '"'
   70              | T_VAR
   71              | '(' expr ')'

   72 nestedcmdexprlist: nestedcmdexpr
   73                  | nestedcmdexprlist nestedcmdexpr

   74 nestedsubcmd: nestedcmdexprlist cmdredirin cmdredirout cmdredirerr cmdredirfd
   75             | nestedsubcmd '|' nestedcmdexprlist cmdredirin cmdredirout cmdredirerr cmdredirfd

   76 cmdredirfd: T_ERR2OUT
   77           | T_OUT2ERR
   78           | /* empty */

   79 cmdredirin: '<' nestedcmdexpr
   80           | /* empty */

   81 cmdredirerr: T_ERR2FILE nestedcmdexpr
   82            | /* empty */

   83 cmdredirout: '>' nestedcmdexpr
   84            | T_OUT2FILE nestedcmdexpr
   85            | T_APPEND nestedcmdexpr
   86            | /* empty */


Terminals, with rules where they appear

$end (0) 0
'"' (34) 21 56 69
'&' (38) 63
'(' (40) 8 9 10 11 18 44 59 71
')' (41) 8 9 10 11 18 44 59 71
',' (44) 48
'.' (46) 45
';' (59) 4 6 10
'<' (60) 37 79
'>' (62) 38 83
'[' (91) 23 24 51 52
']' (93) 23 24 51 52
'`' (96) 43 58
'|' (124) 65 75
error (256)
T_IF (258) 8 9
T_THEN (259) 8 9
T_ELSE (260) 9
T_FI (261) 8 9
T_FOR (262) 10
T_DO (263) 10 11
T_DONE (264) 10 11
T_WHILE (265) 11
T_FUNCTION (266) 7
T_BEGIN (267) 7
T_END (268) 7
T_NUMBER (269) 19 53 66
T_STRING (270) 7 16 45 54 67
T_STRING_SCONST (271) 20 55 68
T_VAR (272) 17 22 23 33 34 35 36 50 51 52 57 70
T_ERR2OUT (273) 76
T_OUT2ERR (274) 77
T_APPEND (275) 85
T_ERR2FILE (276) 81
T_OUT2FILE (277) 84
T_ASSIGN (278) 50 51 52
T_NEQ (279) 42
T_EQ (280) 41
T_GEQ (281) 40
T_LEQ (282) 39
T_SUB (283) 27 32
T_ADD (284) 26
T_MOD (285) 30
T_DIV (286) 29
T_MUL (287) 28
T_NEG (288)
T_DEC (289) 34 36
T_INC (290) 33 35
T_POW (291) 31


Nonterminals, with rules where they appear

$accept (50)
    on left: 0
start (51)
    on left: 1, on right: 0
stmtlist (52)
    on left: 2 3 4, on right: 1 7 8 9 10 11
stmtlistr (53)
    on left: 5 6, on right: 3 4 6
stmt (54)
    on left: 7 8 9 10 11 12 13, on right: 5 6
strlist (55)
    on left: 14 15, on right: 14 21 56 69
strcomp (56)
    on left: 16 17 18, on right: 14
expr (57)
    on left: 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36
    37 38 39 40 41 42 43 44 45, on right: 8 9 10 11 18 23 26 27 28
    29 30 31 32 37 38 39 40 41 42 44 45 48 49 50 51 52 59 71
exprlist (58)
    on left: 46 47, on right: 24
neexprlist (59)
    on left: 48 49, on right: 46 48
assignstmt (60)
    on left: 50 51 52, on right: 12 25
cmdexpr (61)
    on left: 53 54 55 56 57 58 59, on right: 60 61
cmdexprlist (62)
    on left: 60 61, on right: 61 64 65
cmd (63)
    on left: 62 63, on right: 13
subcmd (64)
    on left: 64 65, on right: 62 63 65
nestedcmdexpr (65)
    on left: 66 67 68 69 70 71, on right: 72 73 79 81 83 84 85
nestedcmdexprlist (66)
    on left: 72 73, on right: 73 74 75
nestedsubcmd (67)
    on left: 74 75, on right: 43 58 75
cmdredirfd (68)
    on left: 76 77 78, on right: 64 65 74 75
cmdredirin (69)
    on left: 79 80, on right: 64 65 74 75
cmdredirerr (70)
    on left: 81 82, on right: 64 65 74 75
cmdredirout (71)
    on left: 83 84 85 86, on right: 64 65 74 75


state 0

    0 $accept: . start $end
    1 start: . stmtlist
    2 stmtlist: .  [$end]
    3         | . stmtlistr
    4         | . stmtlistr ';'
    5 stmtlistr: . stmt
    6          | . stmtlistr ';' stmt
    7 stmt: . T_FUNCTION T_STRING T_BEGIN stmtlist T_END
    8     | . T_IF '(' expr ')' T_THEN stmtlist T_FI
    9     | . T_IF '(' expr ')' T_THEN stmtlist T_ELSE stmtlist T_FI
   10     | . T_FOR '(' expr ';' expr ';' expr ')' T_DO stmtlist T_DONE
   11     | . T_WHILE '(' expr ')' T_DO stmtlist T_DONE
   12     | . assignstmt
   13     | . cmd
   50 assignstmt: . T_VAR T_ASSIGN expr
   51           | . T_VAR '[' ']' T_ASSIGN expr
   52           | . T_VAR '[' expr ']' T_ASSIGN expr
   53 cmdexpr: . T_NUMBER
   54        | . T_STRING
   55        | . T_STRING_SCONST
   56        | . '"' strlist '"'
   57        | . T_VAR
   58        | . '`' nestedsubcmd '`'
   59        | . '(' expr ')'
   60 cmdexprlist: . cmdexpr
   61            | . cmdexprlist cmdexpr
   62 cmd: . subcmd
   63    | . subcmd '&'
   64 subcmd: . cmdexprlist cmdredirin cmdredirout cmdredirerr cmdredirfd
   65       | . subcmd '|' cmdexprlist cmdredirin cmdredirout cmdredirerr cmdredirfd

    T_IF             shift, and go to state 1
    T_FOR            shift, and go to state 2
    T_WHILE          shift, and go to state 3
    T_FUNCTION       shift, and go to state 4
    T_NUMBER         shift, and go to state 5
    T_STRING         shift, and go to state 6
    T_STRING_SCONST  shift, and go to state 7
    T_VAR            shift, and go to state 8
    '('              shift, and go to state 9
    '"'              shift, and go to state 10
    '`'              shift, and go to state 11

    $default  reduce using rule 2 (stmtlist)

    start        go to state 12
    stmtlist     go to state 13
    stmtlistr    go to state 14
    stmt         go to state 15
    assignstmt   go to state 16
    cmdexpr      go to state 17
    cmdexprlist  go to state 18
    cmd          go to state 19
    subcmd       go to state 20


state 1

    8 stmt: T_IF . '(' expr ')' T_THEN stmtlist T_FI
    9     | T_IF . '(' expr ')' T_THEN stmtlist T_ELSE stmtlist T_FI

    '('  shift, and go to state 21


state 2

   10 stmt: T_FOR . '(' expr ';' expr ';' expr ')' T_DO stmtlist T_DONE

    '('  shift, and go to state 22


state 3

   11 stmt: T_WHILE . '(' expr ')' T_DO stmtlist T_DONE

    '('  shift, and go to state 23


state 4

    7 stmt: T_FUNCTION . T_STRING T_BEGIN stmtlist T_END

    T_STRING  shift, and go to state 24


state 5

   53 cmdexpr: T_NUMBER .

    $default  reduce using rule 53 (cmdexpr)


state 6

   54 cmdexpr: T_STRING .

    $default  reduce using rule 54 (cmdexpr)


state 7

   55 cmdexpr: T_STRING_SCONST .

    $default  reduce using rule 55 (cmdexpr)


state 8

   50 assignstmt: T_VAR . T_ASSIGN expr
   51           | T_VAR . '[' ']' T_ASSIGN expr
   52           | T_VAR . '[' expr ']' T_ASSIGN expr
   57 cmdexpr: T_VAR .  [$end, T_ELSE, T_FI, T_DONE, T_END, T_NUMBER, T_STRING, T_STRING_SCONST, T_VAR, T_ERR2OUT, T_OUT2ERR, T_APPEND, T_ERR2FILE, T_OUT2FILE, '>', '<', ';', '(', '"', '`', '&', '|']

    T_ASSIGN  shift, and go to state 25
    '['       shift, and go to state 26

    $default  reduce using rule 57 (cmdexpr)


state 9

   19 expr: . T_NUMBER
   20     | . T_STRING_SCONST
   21     | . '"' strlist '"'
   22     | . T_VAR
   23     | . T_VAR '[' expr ']'
   24     | . '[' exprlist ']'
   25     | . assignstmt
   26     | . expr T_ADD expr
   27     | . expr T_SUB expr
   28     | . expr T_MUL expr
   29     | . expr T_DIV expr
   30     | . expr T_MOD expr
   31     | . expr T_POW expr
   32     | . T_SUB expr
   33     | . T_INC T_VAR
   34     | . T_DEC T_VAR
   35     | . T_VAR T_INC
   36     | . T_VAR T_DEC
   37     | . expr '<' expr
   38     | . expr '>' expr
   39     | . expr T_LEQ expr
   40     | . expr T_GEQ expr
   41     | . expr T_EQ expr
   42     | . expr T_NEQ expr
   43     | . '`' nestedsubcmd '`'
   44     | . '(' expr ')'
   45     | . expr '.' T_STRING
   50 assignstmt: . T_VAR T_ASSIGN expr
   51           | . T_VAR '[' ']' T_ASSIGN expr
   52           | . T_VAR '[' expr ']' T_ASSIGN expr
   59 cmdexpr: '(' . expr ')'

    T_NUMBER         shift, and go to state 27
    T_STRING_SCONST  shift, and go to state 28
    T_VAR            shift, and go to state 29
    T_SUB            shift, and go to state 30
    T_DEC            shift, and go to state 31
    T_INC            shift, and go to state 32
    '('              shift, and go to state 33
    '"'              shift, and go to state 34
    '['              shift, and go to state 35
    '`'              shift, and go to state 36

    expr        go to state 37
    assignstmt  go to state 38


state 10

   14 strlist: . strlist strcomp
   15        | .
   56 cmdexpr: '"' . strlist '"'

    $default  reduce using rule 15 (strlist)

    strlist  go to state 39


state 11

   58 cmdexpr: '`' . nestedsubcmd '`'
   66 nestedcmdexpr: . T_NUMBER
   67              | . T_STRING
   68              | . T_STRING_SCONST
   69              | . '"' strlist '"'
   70              | . T_VAR
   71              | . '(' expr ')'
   72 nestedcmdexprlist: . nestedcmdexpr
   73                  | . nestedcmdexprlist nestedcmdexpr
   74 nestedsubcmd: . nestedcmdexprlist cmdredirin cmdredirout cmdredirerr cmdredirfd
   75             | . nestedsubcmd '|' nestedcmdexprlist cmdredirin cmdredirout cmdredirerr cmdredirfd

    T_NUMBER         shift, and go to state 40
    T_STRING         shift, and go to state 41
    T_STRING_SCONST  shift, and go to state 42
    T_VAR            shift, and go to state 43
    '('              shift, and go to state 44
    '"'              shift, and go to state 45

    nestedcmdexpr      go to state 46
    nestedcmdexprlist  go to state 47
    nestedsubcmd       go to state 48


state 12

    0 $accept: start . $end

    $end  shift, and go to state 49


state 13

    1 start: stmtlist .

    $default  reduce using rule 1 (start)


state 14

    3 stmtlist: stmtlistr .  [$end, T_ELSE, T_FI, T_DONE, T_END]
    4         | stmtlistr . ';'
    6 stmtlistr: stmtlistr . ';' stmt

    ';'  shift, and go to state 50

    $default  reduce using rule 3 (stmtlist)


state 15

    5 stmtlistr: stmt .

    $default  reduce using rule 5 (stmtlistr)


state 16

   12 stmt: assignstmt .

    $default  reduce using rule 12 (stmt)


state 17

   60 cmdexprlist: cmdexpr .

    $default  reduce using rule 60 (cmdexprlist)


state 18

   53 cmdexpr: . T_NUMBER
   54        | . T_STRING
   55        | . T_STRING_SCONST
   56        | . '"' strlist '"'
   57        | . T_VAR
   58        | . '`' nestedsubcmd '`'
   59        | . '(' expr ')'
   61 cmdexprlist: cmdexprlist . cmdexpr
   64 subcmd: cmdexprlist . cmdredirin cmdredirout cmdredirerr cmdredirfd
   79 cmdredirin: . '<' nestedcmdexpr
   80           | .  [$end, T_ELSE, T_FI, T_DONE, T_END, T_ERR2OUT, T_OUT2ERR, T_APPEND, T_ERR2FILE, T_OUT2FILE, '>', ';', '&', '|']

    T_NUMBER         shift, and go to state 5
    T_STRING         shift, and go to state 6
    T_STRING_SCONST  shift, and go to state 7
    T_VAR            shift, and go to state 51
    '<'              shift, and go to state 52
    '('              shift, and go to state 9
    '"'              shift, and go to state 10
    '`'              shift, and go to state 11

    $default  reduce using rule 80 (cmdredirin)

    cmdexpr     go to state 53
    cmdredirin  go to state 54


state 19

   13 stmt: cmd .

    $default  reduce using rule 13 (stmt)


state 20

   62 cmd: subcmd .  [$end, T_ELSE, T_FI, T_DONE, T_END, ';']
   63    | subcmd . '&'
   65 subcmd: subcmd . '|' cmdexprlist cmdredirin cmdredirout cmdredirerr cmdredirfd

    '&'  shift, and go to state 55
    '|'  shift, and go to state 56

    $default  reduce using rule 62 (cmd)


state 21

    8 stmt: T_IF '(' . expr ')' T_THEN stmtlist T_FI
    9     | T_IF '(' . expr ')' T_THEN stmtlist T_ELSE stmtlist T_FI
   19 expr: . T_NUMBER
   20     | . T_STRING_SCONST
   21     | . '"' strlist '"'
   22     | . T_VAR
   23     | . T_VAR '[' expr ']'
   24     | . '[' exprlist ']'
   25     | . assignstmt
   26     | . expr T_ADD expr
   27     | . expr T_SUB expr
   28     | . expr T_MUL expr
   29     | . expr T_DIV expr
   30     | . expr T_MOD expr
   31     | . expr T_POW expr
   32     | . T_SUB expr
   33     | . T_INC T_VAR
   34     | . T_DEC T_VAR
   35     | . T_VAR T_INC
   36     | . T_VAR T_DEC
   37     | . expr '<' expr
   38     | . expr '>' expr
   39     | . expr T_LEQ expr
   40     | . expr T_GEQ expr
   41     | . expr T_EQ expr
   42     | . expr T_NEQ expr
   43     | . '`' nestedsubcmd '`'
   44     | . '(' expr ')'
   45     | . expr '.' T_STRING
   50 assignstmt: . T_VAR T_ASSIGN expr
   51           | . T_VAR '[' ']' T_ASSIGN expr
   52           | . T_VAR '[' expr ']' T_ASSIGN expr

    T_NUMBER         shift, and go to state 27
    T_STRING_SCONST  shift, and go to state 28
    T_VAR            shift, and go to state 29
    T_SUB            shift, and go to state 30
    T_DEC            shift, and go to state 31
    T_INC            shift, and go to state 32
    '('              shift, and go to state 33
    '"'              shift, and go to state 34
    '['              shift, and go to state 35
    '`'              shift, and go to state 36

    expr        go to state 57
    assignstmt  go to state 38


state 22

   10 stmt: T_FOR '(' . expr ';' expr ';' expr ')' T_DO stmtlist T_DONE
   19 expr: . T_NUMBER
   20     | . T_STRING_SCONST
   21     | . '"' strlist '"'
   22     | . T_VAR
   23     | . T_VAR '[' expr ']'
   24     | . '[' exprlist ']'
   25     | . assignstmt
   26     | . expr T_ADD expr
   27     | . expr T_SUB expr
   28     | . expr T_MUL expr
   29     | . expr T_DIV expr
   30     | . expr T_MOD expr
   31     | . expr T_POW expr
   32     | . T_SUB expr
   33     | . T_INC T_VAR
   34     | . T_DEC T_VAR
   35     | . T_VAR T_INC
   36     | . T_VAR T_DEC
   37     | . expr '<' expr
   38     | . expr '>' expr
   39     | . expr T_LEQ expr
   40     | . expr T_GEQ expr
   41     | . expr T_EQ expr
   42     | . expr T_NEQ expr
   43     | . '`' nestedsubcmd '`'
   44     | . '(' expr ')'
   45     | . expr '.' T_STRING
   50 assignstmt: . T_VAR T_ASSIGN expr
   51           | . T_VAR '[' ']' T_ASSIGN expr
   52           | . T_VAR '[' expr ']' T_ASSIGN expr

    T_NUMBER         shift, and go to state 27
    T_STRING_SCONST  shift, and go to state 28
    T_VAR            shift, and go to state 29
    T_SUB            shift, and go to state 30
    T_DEC            shift, and go to state 31
    T_INC            shift, and go to state 32
    '('              shift, and go to state 33
    '"'              shift, and go to state 34
    '['              shift, and go to state 35
    '`'              shift, and go to state 36

    expr        go to state 58
    assignstmt  go to state 38


state 23

   11 stmt: T_WHILE '(' . expr ')' T_DO stmtlist T_DONE
   19 expr: . T_NUMBER
   20     | . T_STRING_SCONST
   21     | . '"' strlist '"'
   22     | . T_VAR
   23     | . T_VAR '[' expr ']'
   24     | . '[' exprlist ']'
   25     | . assignstmt
   26     | . expr T_ADD expr
   27     | . expr T_SUB expr
   28     | . expr T_MUL expr
   29     | . expr T_DIV expr
   30     | . expr T_MOD expr
   31     | . expr T_POW expr
   32     | . T_SUB expr
   33     | . T_INC T_VAR
   34     | . T_DEC T_VAR
   35     | . T_VAR T_INC
   36     | . T_VAR T_DEC
   37     | . expr '<' expr
   38     | . expr '>' expr
   39     | . expr T_LEQ expr
   40     | . expr T_GEQ expr
   41     | . expr T_EQ expr
   42     | . expr T_NEQ expr
   43     | . '`' nestedsubcmd '`'
   44     | . '(' expr ')'
   45     | . expr '.' T_STRING
   50 assignstmt: . T_VAR T_ASSIGN expr
   51           | . T_VAR '[' ']' T_ASSIGN expr
   52           | . T_VAR '[' expr ']' T_ASSIGN expr

    T_NUMBER         shift, and go to state 27
    T_STRING_SCONST  shift, and go to state 28
    T_VAR            shift, and go to state 29
    T_SUB            shift, and go to state 30
    T_DEC            shift, and go to state 31
    T_INC            shift, and go to state 32
    '('              shift, and go to state 33
    '"'              shift, and go to state 34
    '['              shift, and go to state 35
    '`'              shift, and go to state 36

    expr        go to state 59
    assignstmt  go to state 38


state 24

    7 stmt: T_FUNCTION T_STRING . T_BEGIN stmtlist T_END

    T_BEGIN  shift, and go to state 60


state 25

   19 expr: . T_NUMBER
   20     | . T_STRING_SCONST
   21     | . '"' strlist '"'
   22     | . T_VAR
   23     | . T_VAR '[' expr ']'
   24     | . '[' exprlist ']'
   25     | . assignstmt
   26     | . expr T_ADD expr
   27     | . expr T_SUB expr
   28     | . expr T_MUL expr
   29     | . expr T_DIV expr
   30     | . expr T_MOD expr
   31     | . expr T_POW expr
   32     | . T_SUB expr
   33     | . T_INC T_VAR
   34     | . T_DEC T_VAR
   35     | . T_VAR T_INC
   36     | . T_VAR T_DEC
   37     | . expr '<' expr
   38     | . expr '>' expr
   39     | . expr T_LEQ expr
   40     | . expr T_GEQ expr
   41     | . expr T_EQ expr
   42     | . expr T_NEQ expr
   43     | . '`' nestedsubcmd '`'
   44     | . '(' expr ')'
   45     | . expr '.' T_STRING
   50 assignstmt: . T_VAR T_ASSIGN expr
   50           | T_VAR T_ASSIGN . expr
   51           | . T_VAR '[' ']' T_ASSIGN expr
   52           | . T_VAR '[' expr ']' T_ASSIGN expr

    T_NUMBER         shift, and go to state 27
    T_STRING_SCONST  shift, and go to state 28
    T_VAR            shift, and go to state 29
    T_SUB            shift, and go to state 30
    T_DEC            shift, and go to state 31
    T_INC            shift, and go to state 32
    '('              shift, and go to state 33
    '"'              shift, and go to state 34
    '['              shift, and go to state 35
    '`'              shift, and go to state 36

    expr        go to state 61
    assignstmt  go to state 38


state 26

   19 expr: . T_NUMBER
   20     | . T_STRING_SCONST
   21     | . '"' strlist '"'
   22     | . T_VAR
   23     | . T_VAR '[' expr ']'
   24     | . '[' exprlist ']'
   25     | . assignstmt
   26     | . expr T_ADD expr
   27     | . expr T_SUB expr
   28     | . expr T_MUL expr
   29     | . expr T_DIV expr
   30     | . expr T_MOD expr
   31     | . expr T_POW expr
   32     | . T_SUB expr
   33     | . T_INC T_VAR
   34     | . T_DEC T_VAR
   35     | . T_VAR T_INC
   36     | . T_VAR T_DEC
   37     | . expr '<' expr
   38     | . expr '>' expr
   39     | . expr T_LEQ expr
   40     | . expr T_GEQ expr
   41     | . expr T_EQ expr
   42     | . expr T_NEQ expr
   43     | . '`' nestedsubcmd '`'
   44     | . '(' expr ')'
   45     | . expr '.' T_STRING
   50 assignstmt: . T_VAR T_ASSIGN expr
   51           | . T_VAR '[' ']' T_ASSIGN expr
   51           | T_VAR '[' . ']' T_ASSIGN expr
   52           | . T_VAR '[' expr ']' T_ASSIGN expr
   52           | T_VAR '[' . expr ']' T_ASSIGN expr

    T_NUMBER         shift, and go to state 27
    T_STRING_SCONST  shift, and go to state 28
    T_VAR            shift, and go to state 29
    T_SUB            shift, and go to state 30
    T_DEC            shift, and go to state 31
    T_INC            shift, and go to state 32
    '('              shift, and go to state 33
    '"'              shift, and go to state 34
    '['              shift, and go to state 35
    ']'              shift, and go to state 62
    '`'              shift, and go to state 36

    expr        go to state 63
    assignstmt  go to state 38


state 27

   19 expr: T_NUMBER .

    $default  reduce using rule 19 (expr)


state 28

   20 expr: T_STRING_SCONST .

    $default  reduce using rule 20 (expr)


state 29

   22 expr: T_VAR .  [$end, T_ELSE, T_FI, T_DONE, T_END, '>', '<', T_NEQ, T_EQ, T_GEQ, T_LEQ, T_SUB, T_ADD, T_MOD, T_DIV, T_MUL, T_POW, '.', ';', ')', ']', ',']
   23     | T_VAR . '[' expr ']'
   35     | T_VAR . T_INC
   36     | T_VAR . T_DEC
   50 assignstmt: T_VAR . T_ASSIGN expr
   51           | T_VAR . '[' ']' T_ASSIGN expr
   52           | T_VAR . '[' expr ']' T_ASSIGN expr

    T_ASSIGN  shift, and go to state 25
    T_DEC     shift, and go to state 64
    T_INC     shift, and go to state 65
    '['       shift, and go to state 66

    $default  reduce using rule 22 (expr)


state 30

   19 expr: . T_NUMBER
   20     | . T_STRING_SCONST
   21     | . '"' strlist '"'
   22     | . T_VAR
   23     | . T_VAR '[' expr ']'
   24     | . '[' exprlist ']'
   25     | . assignstmt
   26     | . expr T_ADD expr
   27     | . expr T_SUB expr
   28     | . expr T_MUL expr
   29     | . expr T_DIV expr
   30     | . expr T_MOD expr
   31     | . expr T_POW expr
   32     | . T_SUB expr
   32     | T_SUB . expr
   33     | . T_INC T_VAR
   34     | . T_DEC T_VAR
   35     | . T_VAR T_INC
   36     | . T_VAR T_DEC
   37     | . expr '<' expr
   38     | . expr '>' expr
   39     | . expr T_LEQ expr
   40     | . expr T_GEQ expr
   41     | . expr T_EQ expr
   42     | . expr T_NEQ expr
   43     | . '`' nestedsubcmd '`'
   44     | . '(' expr ')'
   45     | . expr '.' T_STRING
   50 assignstmt: . T_VAR T_ASSIGN expr
   51           | . T_VAR '[' ']' T_ASSIGN expr
   52           | . T_VAR '[' expr ']' T_ASSIGN expr

    T_NUMBER         shift, and go to state 27
    T_STRING_SCONST  shift, and go to state 28
    T_VAR            shift, and go to state 29
    T_SUB            shift, and go to state 30
    T_DEC            shift, and go to state 31
    T_INC            shift, and go to state 32
    '('              shift, and go to state 33
    '"'              shift, and go to state 34
    '['              shift, and go to state 35
    '`'              shift, and go to state 36

    expr        go to state 67
    assignstmt  go to state 38


state 31

   34 expr: T_DEC . T_VAR

    T_VAR  shift, and go to state 68


state 32

   33 expr: T_INC . T_VAR

    T_VAR  shift, and go to state 69


state 33

   19 expr: . T_NUMBER
   20     | . T_STRING_SCONST
   21     | . '"' strlist '"'
   22     | . T_VAR
   23     | . T_VAR '[' expr ']'
   24     | . '[' exprlist ']'
   25     | . assignstmt
   26     | . expr T_ADD expr
   27     | . expr T_SUB expr
   28     | . expr T_MUL expr
   29     | . expr T_DIV expr
   30     | . expr T_MOD expr
   31     | . expr T_POW expr
   32     | . T_SUB expr
   33     | . T_INC T_VAR
   34     | . T_DEC T_VAR
   35     | . T_VAR T_INC
   36     | . T_VAR T_DEC
   37     | . expr '<' expr
   38     | . expr '>' expr
   39     | . expr T_LEQ expr
   40     | . expr T_GEQ expr
   41     | . expr T_EQ expr
   42     | . expr T_NEQ expr
   43     | . '`' nestedsubcmd '`'
   44     | . '(' expr ')'
   44     | '(' . expr ')'
   45     | . expr '.' T_STRING
   50 assignstmt: . T_VAR T_ASSIGN expr
   51           | . T_VAR '[' ']' T_ASSIGN expr
   52           | . T_VAR '[' expr ']' T_ASSIGN expr

    T_NUMBER         shift, and go to state 27
    T_STRING_SCONST  shift, and go to state 28
    T_VAR            shift, and go to state 29
    T_SUB            shift, and go to state 30
    T_DEC            shift, and go to state 31
    T_INC            shift, and go to state 32
    '('              shift, and go to state 33
    '"'              shift, and go to state 34
    '['              shift, and go to state 35
    '`'              shift, and go to state 36

    expr        go to state 70
    assignstmt  go to state 38


state 34

   14 strlist: . strlist strcomp
   15        | .
   21 expr: '"' . strlist '"'

    $default  reduce using rule 15 (strlist)

    strlist  go to state 71


state 35

   19 expr: . T_NUMBER
   20     | . T_STRING_SCONST
   21     | . '"' strlist '"'
   22     | . T_VAR
   23     | . T_VAR '[' expr ']'
   24     | . '[' exprlist ']'
   24     | '[' . exprlist ']'
   25     | . assignstmt
   26     | . expr T_ADD expr
   27     | . expr T_SUB expr
   28     | . expr T_MUL expr
   29     | . expr T_DIV expr
   30     | . expr T_MOD expr
   31     | . expr T_POW expr
   32     | . T_SUB expr
   33     | . T_INC T_VAR
   34     | . T_DEC T_VAR
   35     | . T_VAR T_INC
   36     | . T_VAR T_DEC
   37     | . expr '<' expr
   38     | . expr '>' expr
   39     | . expr T_LEQ expr
   40     | . expr T_GEQ expr
   41     | . expr T_EQ expr
   42     | . expr T_NEQ expr
   43     | . '`' nestedsubcmd '`'
   44     | . '(' expr ')'
   45     | . expr '.' T_STRING
   46 exprlist: . neexprlist
   47         | .  [']']
   48 neexprlist: . neexprlist ',' expr
   49           | . expr
   50 assignstmt: . T_VAR T_ASSIGN expr
   51           | . T_VAR '[' ']' T_ASSIGN expr
   52           | . T_VAR '[' expr ']' T_ASSIGN expr

    T_NUMBER         shift, and go to state 27
    T_STRING_SCONST  shift, and go to state 28
    T_VAR            shift, and go to state 29
    T_SUB            shift, and go to state 30
    T_DEC            shift, and go to state 31
    T_INC            shift, and go to state 32
    '('              shift, and go to state 33
    '"'              shift, and go to state 34
    '['              shift, and go to state 35
    '`'              shift, and go to state 36

    $default  reduce using rule 47 (exprlist)

    expr        go to state 72
    exprlist    go to state 73
    neexprlist  go to state 74
    assignstmt  go to state 38


state 36

   43 expr: '`' . nestedsubcmd '`'
   66 nestedcmdexpr: . T_NUMBER
   67              | . T_STRING
   68              | . T_STRING_SCONST
   69              | . '"' strlist '"'
   70              | . T_VAR
   71              | . '(' expr ')'
   72 nestedcmdexprlist: . nestedcmdexpr
   73                  | . nestedcmdexprlist nestedcmdexpr
   74 nestedsubcmd: . nestedcmdexprlist cmdredirin cmdredirout cmdredirerr cmdredirfd
   75             | . nestedsubcmd '|' nestedcmdexprlist cmdredirin cmdredirout cmdredirerr cmdredirfd

    T_NUMBER         shift, and go to state 40
    T_STRING         shift, and go to state 41
    T_STRING_SCONST  shift, and go to state 42
    T_VAR            shift, and go to state 43
    '('              shift, and go to state 44
    '"'              shift, and go to state 45

    nestedcmdexpr      go to state 46
    nestedcmdexprlist  go to state 47
    nestedsubcmd       go to state 75


state 37

   26 expr: expr . T_ADD expr
   27     | expr . T_SUB expr
   28     | expr . T_MUL expr
   29     | expr . T_DIV expr
   30     | expr . T_MOD expr
   31     | expr . T_POW expr
   37     | expr . '<' expr
   38     | expr . '>' expr
   39     | expr . T_LEQ expr
   40     | expr . T_GEQ expr
   41     | expr . T_EQ expr
   42     | expr . T_NEQ expr
   45     | expr . '.' T_STRING
   59 cmdexpr: '(' expr . ')'

    '>'    shift, and go to state 76
    '<'    shift, and go to state 77
    T_NEQ  shift, and go to state 78
    T_EQ   shift, and go to state 79
    T_GEQ  shift, and go to state 80
    T_LEQ  shift, and go to state 81
    T_SUB  shift, and go to state 82
    T_ADD  shift, and go to state 83
    T_MOD  shift, and go to state 84
    T_DIV  shift, and go to state 85
    T_MUL  shift, and go to state 86
    T_POW  shift, and go to state 87
    '.'    shift, and go to state 88
    ')'    shift, and go to state 89


state 38

   25 expr: assignstmt .

    $default  reduce using rule 25 (expr)


state 39

   14 strlist: strlist . strcomp
   16 strcomp: . T_STRING
   17        | . T_VAR
   18        | . '(' expr ')'
   56 cmdexpr: '"' strlist . '"'

    T_STRING  shift, and go to state 90
    T_VAR     shift, and go to state 91
    '('       shift, and go to state 92
    '"'       shift, and go to state 93

    strcomp  go to state 94


state 40

   66 nestedcmdexpr: T_NUMBER .

    $default  reduce using rule 66 (nestedcmdexpr)


state 41

   67 nestedcmdexpr: T_STRING .

    $default  reduce using rule 67 (nestedcmdexpr)


state 42

   68 nestedcmdexpr: T_STRING_SCONST .

    $default  reduce using rule 68 (nestedcmdexpr)


state 43

   70 nestedcmdexpr: T_VAR .

    $default  reduce using rule 70 (nestedcmdexpr)


state 44

   19 expr: . T_NUMBER
   20     | . T_STRING_SCONST
   21     | . '"' strlist '"'
   22     | . T_VAR
   23     | . T_VAR '[' expr ']'
   24     | . '[' exprlist ']'
   25     | . assignstmt
   26     | . expr T_ADD expr
   27     | . expr T_SUB expr
   28     | . expr T_MUL expr
   29     | . expr T_DIV expr
   30     | . expr T_MOD expr
   31     | . expr T_POW expr
   32     | . T_SUB expr
   33     | . T_INC T_VAR
   34     | . T_DEC T_VAR
   35     | . T_VAR T_INC
   36     | . T_VAR T_DEC
   37     | . expr '<' expr
   38     | . expr '>' expr
   39     | . expr T_LEQ expr
   40     | . expr T_GEQ expr
   41     | . expr T_EQ expr
   42     | . expr T_NEQ expr
   43     | . '`' nestedsubcmd '`'
   44     | . '(' expr ')'
   45     | . expr '.' T_STRING
   50 assignstmt: . T_VAR T_ASSIGN expr
   51           | . T_VAR '[' ']' T_ASSIGN expr
   52           | . T_VAR '[' expr ']' T_ASSIGN expr
   71 nestedcmdexpr: '(' . expr ')'

    T_NUMBER         shift, and go to state 27
    T_STRING_SCONST  shift, and go to state 28
    T_VAR            shift, and go to state 29
    T_SUB            shift, and go to state 30
    T_DEC            shift, and go to state 31
    T_INC            shift, and go to state 32
    '('              shift, and go to state 33
    '"'              shift, and go to state 34
    '['              shift, and go to state 35
    '`'              shift, and go to state 36

    expr        go to state 95
    assignstmt  go to state 38


state 45

   14 strlist: . strlist strcomp
   15        | .
   69 nestedcmdexpr: '"' . strlist '"'

    $default  reduce using rule 15 (strlist)

    strlist  go to state 96


state 46

   72 nestedcmdexprlist: nestedcmdexpr .

    $default  reduce using rule 72 (nestedcmdexprlist)


state 47

   66 nestedcmdexpr: . T_NUMBER
   67              | . T_STRING
   68              | . T_STRING_SCONST
   69              | . '"' strlist '"'
   70              | . T_VAR
   71              | . '(' expr ')'
   73 nestedcmdexprlist: nestedcmdexprlist . nestedcmdexpr
   74 nestedsubcmd: nestedcmdexprlist . cmdredirin cmdredirout cmdredirerr cmdredirfd
   79 cmdredirin: . '<' nestedcmdexpr
   80           | .  [T_ERR2OUT, T_OUT2ERR, T_APPEND, T_ERR2FILE, T_OUT2FILE, '>', '`', '|']

    T_NUMBER         shift, and go to state 40
    T_STRING         shift, and go to state 41
    T_STRING_SCONST  shift, and go to state 42
    T_VAR            shift, and go to state 43
    '<'              shift, and go to state 52
    '('              shift, and go to state 44
    '"'              shift, and go to state 45

    $default  reduce using rule 80 (cmdredirin)

    nestedcmdexpr  go to state 97
    cmdredirin     go to state 98


state 48

   58 cmdexpr: '`' nestedsubcmd . '`'
   75 nestedsubcmd: nestedsubcmd . '|' nestedcmdexprlist cmdredirin cmdredirout cmdredirerr cmdredirfd

    '`'  shift, and go to state 99
    '|'  shift, and go to state 100


state 49

    0 $accept: start $end .

    $default  accept


state 50

    4 stmtlist: stmtlistr ';' .  [$end, T_ELSE, T_FI, T_DONE, T_END]
    6 stmtlistr: stmtlistr ';' . stmt
    7 stmt: . T_FUNCTION T_STRING T_BEGIN stmtlist T_END
    8     | . T_IF '(' expr ')' T_THEN stmtlist T_FI
    9     | . T_IF '(' expr ')' T_THEN stmtlist T_ELSE stmtlist T_FI
   10     | . T_FOR '(' expr ';' expr ';' expr ')' T_DO stmtlist T_DONE
   11     | . T_WHILE '(' expr ')' T_DO stmtlist T_DONE
   12     | . assignstmt
   13     | . cmd
   50 assignstmt: . T_VAR T_ASSIGN expr
   51           | . T_VAR '[' ']' T_ASSIGN expr
   52           | . T_VAR '[' expr ']' T_ASSIGN expr
   53 cmdexpr: . T_NUMBER
   54        | . T_STRING
   55        | . T_STRING_SCONST
   56        | . '"' strlist '"'
   57        | . T_VAR
   58        | . '`' nestedsubcmd '`'
   59        | . '(' expr ')'
   60 cmdexprlist: . cmdexpr
   61            | . cmdexprlist cmdexpr
   62 cmd: . subcmd
   63    | . subcmd '&'
   64 subcmd: . cmdexprlist cmdredirin cmdredirout cmdredirerr cmdredirfd
   65       | . subcmd '|' cmdexprlist cmdredirin cmdredirout cmdredirerr cmdredirfd

    T_IF             shift, and go to state 1
    T_FOR            shift, and go to state 2
    T_WHILE          shift, and go to state 3
    T_FUNCTION       shift, and go to state 4
    T_NUMBER         shift, and go to state 5
    T_STRING         shift, and go to state 6
    T_STRING_SCONST  shift, and go to state 7
    T_VAR            shift, and go to state 8
    '('              shift, and go to state 9
    '"'              shift, and go to state 10
    '`'              shift, and go to state 11

    $default  reduce using rule 4 (stmtlist)

    stmt         go to state 101
    assignstmt   go to state 16
    cmdexpr      go to state 17
    cmdexprlist  go to state 18
    cmd          go to state 19
    subcmd       go to state 20


state 51

   57 cmdexpr: T_VAR .

    $default  reduce using rule 57 (cmdexpr)


state 52

   66 nestedcmdexpr: . T_NUMBER
   67              | . T_STRING
   68              | . T_STRING_SCONST
   69              | . '"' strlist '"'
   70              | . T_VAR
   71              | . '(' expr ')'
   79 cmdredirin: '<' . nestedcmdexpr

    T_NUMBER         shift, and go to state 40
    T_STRING         shift, and go to state 41
    T_STRING_SCONST  shift, and go to state 42
    T_VAR            shift, and go to state 43
    '('              shift, and go to state 44
    '"'              shift, and go to state 45

    nestedcmdexpr  go to state 102


state 53

   61 cmdexprlist: cmdexprlist cmdexpr .

    $default  reduce using rule 61 (cmdexprlist)


state 54

   64 subcmd: cmdexprlist cmdredirin . cmdredirout cmdredirerr cmdredirfd
   83 cmdredirout: . '>' nestedcmdexpr
   84            | . T_OUT2FILE nestedcmdexpr
   85            | . T_APPEND nestedcmdexpr
   86            | .  [$end, T_ELSE, T_FI, T_DONE, T_END, T_ERR2OUT, T_OUT2ERR, T_ERR2FILE, ';', '&', '|']

    T_APPEND    shift, and go to state 103
    T_OUT2FILE  shift, and go to state 104
    '>'         shift, and go to state 105

    $default  reduce using rule 86 (cmdredirout)

    cmdredirout  go to state 106


state 55

   63 cmd: subcmd '&' .

    $default  reduce using rule 63 (cmd)


state 56

   53 cmdexpr: . T_NUMBER
   54        | . T_STRING
   55        | . T_STRING_SCONST
   56        | . '"' strlist '"'
   57        | . T_VAR
   58        | . '`' nestedsubcmd '`'
   59        | . '(' expr ')'
   60 cmdexprlist: . cmdexpr
   61            | . cmdexprlist cmdexpr
   65 subcmd: subcmd '|' . cmdexprlist cmdredirin cmdredirout cmdredirerr cmdredirfd

    T_NUMBER         shift, and go to state 5
    T_STRING         shift, and go to state 6
    T_STRING_SCONST  shift, and go to state 7
    T_VAR            shift, and go to state 51
    '('              shift, and go to state 9
    '"'              shift, and go to state 10
    '`'              shift, and go to state 11

    cmdexpr      go to state 17
    cmdexprlist  go to state 107


state 57

    8 stmt: T_IF '(' expr . ')' T_THEN stmtlist T_FI
    9     | T_IF '(' expr . ')' T_THEN stmtlist T_ELSE stmtlist T_FI
   26 expr: expr . T_ADD expr
   27     | expr . T_SUB expr
   28     | expr . T_MUL expr
   29     | expr . T_DIV expr
   30     | expr . T_MOD expr
   31     | expr . T_POW expr
   37     | expr . '<' expr
   38     | expr . '>' expr
   39     | expr . T_LEQ expr
   40     | expr . T_GEQ expr
   41     | expr . T_EQ expr
   42     | expr . T_NEQ expr
   45     | expr . '.' T_STRING

    '>'    shift, and go to state 76
    '<'    shift, and go to state 77
    T_NEQ  shift, and go to state 78
    T_EQ   shift, and go to state 79
    T_GEQ  shift, and go to state 80
    T_LEQ  shift, and go to state 81
    T_SUB  shift, and go to state 82
    T_ADD  shift, and go to state 83
    T_MOD  shift, and go to state 84
    T_DIV  shift, and go to state 85
    T_MUL  shift, and go to state 86
    T_POW  shift, and go to state 87
    '.'    shift, and go to state 88
    ')'    shift, and go to state 108


state 58

   10 stmt: T_FOR '(' expr . ';' expr ';' expr ')' T_DO stmtlist T_DONE
   26 expr: expr . T_ADD expr
   27     | expr . T_SUB expr
   28     | expr . T_MUL expr
   29     | expr . T_DIV expr
   30     | expr . T_MOD expr
   31     | expr . T_POW expr
   37     | expr . '<' expr
   38     | expr . '>' expr
   39     | expr . T_LEQ expr
   40     | expr . T_GEQ expr
   41     | expr . T_EQ expr
   42     | expr . T_NEQ expr
   45     | expr . '.' T_STRING

    '>'    shift, and go to state 76
    '<'    shift, and go to state 77
    T_NEQ  shift, and go to state 78
    T_EQ   shift, and go to state 79
    T_GEQ  shift, and go to state 80
    T_LEQ  shift, and go to state 81
    T_SUB  shift, and go to state 82
    T_ADD  shift, and go to state 83
    T_MOD  shift, and go to state 84
    T_DIV  shift, and go to state 85
    T_MUL  shift, and go to state 86
    T_POW  shift, and go to state 87
    '.'    shift, and go to state 88
    ';'    shift, and go to state 109


state 59

   11 stmt: T_WHILE '(' expr . ')' T_DO stmtlist T_DONE
   26 expr: expr . T_ADD expr
   27     | expr . T_SUB expr
   28     | expr . T_MUL expr
   29     | expr . T_DIV expr
   30     | expr . T_MOD expr
   31     | expr . T_POW expr
   37     | expr . '<' expr
   38     | expr . '>' expr
   39     | expr . T_LEQ expr
   40     | expr . T_GEQ expr
   41     | expr . T_EQ expr
   42     | expr . T_NEQ expr
   45     | expr . '.' T_STRING

    '>'    shift, and go to state 76
    '<'    shift, and go to state 77
    T_NEQ  shift, and go to state 78
    T_EQ   shift, and go to state 79
    T_GEQ  shift, and go to state 80
    T_LEQ  shift, and go to state 81
    T_SUB  shift, and go to state 82
    T_ADD  shift, and go to state 83
    T_MOD  shift, and go to state 84
    T_DIV  shift, and go to state 85
    T_MUL  shift, and go to state 86
    T_POW  shift, and go to state 87
    '.'    shift, and go to state 88
    ')'    shift, and go to state 110


state 60

    2 stmtlist: .  [T_END]
    3         | . stmtlistr
    4         | . stmtlistr ';'
    5 stmtlistr: . stmt
    6          | . stmtlistr ';' stmt
    7 stmt: . T_FUNCTION T_STRING T_BEGIN stmtlist T_END
    7     | T_FUNCTION T_STRING T_BEGIN . stmtlist T_END
    8     | . T_IF '(' expr ')' T_THEN stmtlist T_FI
    9     | . T_IF '(' expr ')' T_THEN stmtlist T_ELSE stmtlist T_FI
   10     | . T_FOR '(' expr ';' expr ';' expr ')' T_DO stmtlist T_DONE
   11     | . T_WHILE '(' expr ')' T_DO stmtlist T_DONE
   12     | . assignstmt
   13     | . cmd
   50 assignstmt: . T_VAR T_ASSIGN expr
   51           | . T_VAR '[' ']' T_ASSIGN expr
   52           | . T_VAR '[' expr ']' T_ASSIGN expr
   53 cmdexpr: . T_NUMBER
   54        | . T_STRING
   55        | . T_STRING_SCONST
   56        | . '"' strlist '"'
   57        | . T_VAR
   58        | . '`' nestedsubcmd '`'
   59        | . '(' expr ')'
   60 cmdexprlist: . cmdexpr
   61            | . cmdexprlist cmdexpr
   62 cmd: . subcmd
   63    | . subcmd '&'
   64 subcmd: . cmdexprlist cmdredirin cmdredirout cmdredirerr cmdredirfd
   65       | . subcmd '|' cmdexprlist cmdredirin cmdredirout cmdredirerr cmdredirfd

    T_IF             shift, and go to state 1
    T_FOR            shift, and go to state 2
    T_WHILE          shift, and go to state 3
    T_FUNCTION       shift, and go to state 4
    T_NUMBER         shift, and go to state 5
    T_STRING         shift, and go to state 6
    T_STRING_SCONST  shift, and go to state 7
    T_VAR            shift, and go to state 8
    '('              shift, and go to state 9
    '"'              shift, and go to state 10
    '`'              shift, and go to state 11

    $default  reduce using rule 2 (stmtlist)

    stmtlist     go to state 111
    stmtlistr    go to state 14
    stmt         go to state 15
    assignstmt   go to state 16
    cmdexpr      go to state 17
    cmdexprlist  go to state 18
    cmd          go to state 19
    subcmd       go to state 20


state 61

   26 expr: expr . T_ADD expr
   27     | expr . T_SUB expr
   28     | expr . T_MUL expr
   29     | expr . T_DIV expr
   30     | expr . T_MOD expr
   31     | expr . T_POW expr
   37     | expr . '<' expr
   38     | expr . '>' expr
   39     | expr . T_LEQ expr
   40     | expr . T_GEQ expr
   41     | expr . T_EQ expr
   42     | expr . T_NEQ expr
   45     | expr . '.' T_STRING
   50 assignstmt: T_VAR T_ASSIGN expr .  [$end, T_ELSE, T_FI, T_DONE, T_END, ';', ')', ']', ',']

    T_SUB  shift, and go to state 82
    T_ADD  shift, and go to state 83
    T_MOD  shift, and go to state 84
    T_DIV  shift, and go to state 85
    T_MUL  shift, and go to state 86
    T_POW  shift, and go to state 87
    '.'    shift, and go to state 88

    '>'    error (nonassociative)
    '<'    error (nonassociative)
    T_NEQ  error (nonassociative)
    T_EQ   error (nonassociative)
    T_GEQ  error (nonassociative)
    T_LEQ  error (nonassociative)

    $default  reduce using rule 50 (assignstmt)

    Conflict between rule 50 and token '>' resolved as an error (%nonassoc '>').
    Conflict between rule 50 and token '<' resolved as an error (%nonassoc '<').
    Conflict between rule 50 and token T_NEQ resolved as an error (%nonassoc T_NEQ).
    Conflict between rule 50 and token T_EQ resolved as an error (%nonassoc T_EQ).
    Conflict between rule 50 and token T_GEQ resolved as an error (%nonassoc T_GEQ).
    Conflict between rule 50 and token T_LEQ resolved as an error (%nonassoc T_LEQ).
    Conflict between rule 50 and token T_SUB resolved as shift (T_ASSIGN < T_SUB).
    Conflict between rule 50 and token T_ADD resolved as shift (T_ASSIGN < T_ADD).
    Conflict between rule 50 and token T_MOD resolved as shift (T_ASSIGN < T_MOD).
    Conflict between rule 50 and token T_DIV resolved as shift (T_ASSIGN < T_DIV).
    Conflict between rule 50 and token T_MUL resolved as shift (T_ASSIGN < T_MUL).
    Conflict between rule 50 and token T_POW resolved as shift (T_ASSIGN < T_POW).
    Conflict between rule 50 and token '.' resolved as shift (T_ASSIGN < '.').


state 62

   51 assignstmt: T_VAR '[' ']' . T_ASSIGN expr

    T_ASSIGN  shift, and go to state 112


state 63

   26 expr: expr . T_ADD expr
   27     | expr . T_SUB expr
   28     | expr . T_MUL expr
   29     | expr . T_DIV expr
   30     | expr . T_MOD expr
   31     | expr . T_POW expr
   37     | expr . '<' expr
   38     | expr . '>' expr
   39     | expr . T_LEQ expr
   40     | expr . T_GEQ expr
   41     | expr . T_EQ expr
   42     | expr . T_NEQ expr
   45     | expr . '.' T_STRING
   52 assignstmt: T_VAR '[' expr . ']' T_ASSIGN expr

    '>'    shift, and go to state 76
    '<'    shift, and go to state 77
    T_NEQ  shift, and go to state 78
    T_EQ   shift, and go to state 79
    T_GEQ  shift, and go to state 80
    T_LEQ  shift, and go to state 81
    T_SUB  shift, and go to state 82
    T_ADD  shift, and go to state 83
    T_MOD  shift, and go to state 84
    T_DIV  shift, and go to state 85
    T_MUL  shift, and go to state 86
    T_POW  shift, and go to state 87
    '.'    shift, and go to state 88
    ']'    shift, and go to state 113


state 64

   36 expr: T_VAR T_DEC .

    $default  reduce using rule 36 (expr)


state 65

   35 expr: T_VAR T_INC .

    $default  reduce using rule 35 (expr)


state 66

   19 expr: . T_NUMBER
   20     | . T_STRING_SCONST
   21     | . '"' strlist '"'
   22     | . T_VAR
   23     | . T_VAR '[' expr ']'
   23     | T_VAR '[' . expr ']'
   24     | . '[' exprlist ']'
   25     | . assignstmt
   26     | . expr T_ADD expr
   27     | . expr T_SUB expr
   28     | . expr T_MUL expr
   29     | . expr T_DIV expr
   30     | . expr T_MOD expr
   31     | . expr T_POW expr
   32     | . T_SUB expr
   33     | . T_INC T_VAR
   34     | . T_DEC T_VAR
   35     | . T_VAR T_INC
   36     | . T_VAR T_DEC
   37     | . expr '<' expr
   38     | . expr '>' expr
   39     | . expr T_LEQ expr
   40     | . expr T_GEQ expr
   41     | . expr T_EQ expr
   42     | . expr T_NEQ expr
   43     | . '`' nestedsubcmd '`'
   44     | . '(' expr ')'
   45     | . expr '.' T_STRING
   50 assignstmt: . T_VAR T_ASSIGN expr
   51           | . T_VAR '[' ']' T_ASSIGN expr
   51           | T_VAR '[' . ']' T_ASSIGN expr
   52           | . T_VAR '[' expr ']' T_ASSIGN expr
   52           | T_VAR '[' . expr ']' T_ASSIGN expr

    T_NUMBER         shift, and go to state 27
    T_STRING_SCONST  shift, and go to state 28
    T_VAR            shift, and go to state 29
    T_SUB            shift, and go to state 30
    T_DEC            shift, and go to state 31
    T_INC            shift, and go to state 32
    '('              shift, and go to state 33
    '"'              shift, and go to state 34
    '['              shift, and go to state 35
    ']'              shift, and go to state 62
    '`'              shift, and go to state 36

    expr        go to state 114
    assignstmt  go to state 38


state 67

   26 expr: expr . T_ADD expr
   27     | expr . T_SUB expr
   28     | expr . T_MUL expr
   29     | expr . T_DIV expr
   30     | expr . T_MOD expr
   31     | expr . T_POW expr
   32     | T_SUB expr .  [$end, T_ELSE, T_FI, T_DONE, T_END, '>', '<', T_NEQ, T_EQ, T_GEQ, T_LEQ, T_SUB, T_ADD, T_MOD, T_DIV, T_MUL, ';', ')', ']', ',']
   37     | expr . '<' expr
   38     | expr . '>' expr
   39     | expr . T_LEQ expr
   40     | expr . T_GEQ expr
   41     | expr . T_EQ expr
   42     | expr . T_NEQ expr
   45     | expr . '.' T_STRING

    T_POW  shift, and go to state 87
    '.'    shift, and go to state 88

    $default  reduce using rule 32 (expr)

    Conflict between rule 32 and token '>' resolved as reduce ('>' < T_NEG).
    Conflict between rule 32 and token '<' resolved as reduce ('<' < T_NEG).
    Conflict between rule 32 and token T_NEQ resolved as reduce (T_NEQ < T_NEG).
    Conflict between rule 32 and token T_EQ resolved as reduce (T_EQ < T_NEG).
    Conflict between rule 32 and token T_GEQ resolved as reduce (T_GEQ < T_NEG).
    Conflict between rule 32 and token T_LEQ resolved as reduce (T_LEQ < T_NEG).
    Conflict between rule 32 and token T_SUB resolved as reduce (T_SUB < T_NEG).
    Conflict between rule 32 and token T_ADD resolved as reduce (T_ADD < T_NEG).
    Conflict between rule 32 and token T_MOD resolved as reduce (T_MOD < T_NEG).
    Conflict between rule 32 and token T_DIV resolved as reduce (T_DIV < T_NEG).
    Conflict between rule 32 and token T_MUL resolved as reduce (T_MUL < T_NEG).
    Conflict between rule 32 and token T_POW resolved as shift (T_NEG < T_POW).
    Conflict between rule 32 and token '.' resolved as shift (T_NEG < '.').


state 68

   34 expr: T_DEC T_VAR .

    $default  reduce using rule 34 (expr)


state 69

   33 expr: T_INC T_VAR .

    $default  reduce using rule 33 (expr)


state 70

   26 expr: expr . T_ADD expr
   27     | expr . T_SUB expr
   28     | expr . T_MUL expr
   29     | expr . T_DIV expr
   30     | expr . T_MOD expr
   31     | expr . T_POW expr
   37     | expr . '<' expr
   38     | expr . '>' expr
   39     | expr . T_LEQ expr
   40     | expr . T_GEQ expr
   41     | expr . T_EQ expr
   42     | expr . T_NEQ expr
   44     | '(' expr . ')'
   45     | expr . '.' T_STRING

    '>'    shift, and go to state 76
    '<'    shift, and go to state 77
    T_NEQ  shift, and go to state 78
    T_EQ   shift, and go to state 79
    T_GEQ  shift, and go to state 80
    T_LEQ  shift, and go to state 81
    T_SUB  shift, and go to state 82
    T_ADD  shift, and go to state 83
    T_MOD  shift, and go to state 84
    T_DIV  shift, and go to state 85
    T_MUL  shift, and go to state 86
    T_POW  shift, and go to state 87
    '.'    shift, and go to state 88
    ')'    shift, and go to state 115


state 71

   14 strlist: strlist . strcomp
   16 strcomp: . T_STRING
   17        | . T_VAR
   18        | . '(' expr ')'
   21 expr: '"' strlist . '"'

    T_STRING  shift, and go to state 90
    T_VAR     shift, and go to state 91
    '('       shift, and go to state 92
    '"'       shift, and go to state 116

    strcomp  go to state 94


state 72

   26 expr: expr . T_ADD expr
   27     | expr . T_SUB expr
   28     | expr . T_MUL expr
   29     | expr . T_DIV expr
   30     | expr . T_MOD expr
   31     | expr . T_POW expr
   37     | expr . '<' expr
   38     | expr . '>' expr
   39     | expr . T_LEQ expr
   40     | expr . T_GEQ expr
   41     | expr . T_EQ expr
   42     | expr . T_NEQ expr
   45     | expr . '.' T_STRING
   49 neexprlist: expr .  [']', ',']

    '>'    shift, and go to state 76
    '<'    shift, and go to state 77
    T_NEQ  shift, and go to state 78
    T_EQ   shift, and go to state 79
    T_GEQ  shift, and go to state 80
    T_LEQ  shift, and go to state 81
    T_SUB  shift, and go to state 82
    T_ADD  shift, and go to state 83
    T_MOD  shift, and go to state 84
    T_DIV  shift, and go to state 85
    T_MUL  shift, and go to state 86
    T_POW  shift, and go to state 87
    '.'    shift, and go to state 88

    $default  reduce using rule 49 (neexprlist)


state 73

   24 expr: '[' exprlist . ']'

    ']'  shift, and go to state 117


state 74

   46 exprlist: neexprlist .  [']']
   48 neexprlist: neexprlist . ',' expr

    ','  shift, and go to state 118

    $default  reduce using rule 46 (exprlist)


state 75

   43 expr: '`' nestedsubcmd . '`'
   75 nestedsubcmd: nestedsubcmd . '|' nestedcmdexprlist cmdredirin cmdredirout cmdredirerr cmdredirfd

    '`'  shift, and go to state 119
    '|'  shift, and go to state 100


state 76

   19 expr: . T_NUMBER
   20     | . T_STRING_SCONST
   21     | . '"' strlist '"'
   22     | . T_VAR
   23     | . T_VAR '[' expr ']'
   24     | . '[' exprlist ']'
   25     | . assignstmt
   26     | . expr T_ADD expr
   27     | . expr T_SUB expr
   28     | . expr T_MUL expr
   29     | . expr T_DIV expr
   30     | . expr T_MOD expr
   31     | . expr T_POW expr
   32     | . T_SUB expr
   33     | . T_INC T_VAR
   34     | . T_DEC T_VAR
   35     | . T_VAR T_INC
   36     | . T_VAR T_DEC
   37     | . expr '<' expr
   38     | . expr '>' expr
   38     | expr '>' . expr
   39     | . expr T_LEQ expr
   40     | . expr T_GEQ expr
   41     | . expr T_EQ expr
   42     | . expr T_NEQ expr
   43     | . '`' nestedsubcmd '`'
   44     | . '(' expr ')'
   45     | . expr '.' T_STRING
   50 assignstmt: . T_VAR T_ASSIGN expr
   51           | . T_VAR '[' ']' T_ASSIGN expr
   52           | . T_VAR '[' expr ']' T_ASSIGN expr

    T_NUMBER         shift, and go to state 27
    T_STRING_SCONST  shift, and go to state 28
    T_VAR            shift, and go to state 29
    T_SUB            shift, and go to state 30
    T_DEC            shift, and go to state 31
    T_INC            shift, and go to state 32
    '('              shift, and go to state 33
    '"'              shift, and go to state 34
    '['              shift, and go to state 35
    '`'              shift, and go to state 36

    expr        go to state 120
    assignstmt  go to state 38


state 77

   19 expr: . T_NUMBER
   20     | . T_STRING_SCONST
   21     | . '"' strlist '"'
   22     | . T_VAR
   23     | . T_VAR '[' expr ']'
   24     | . '[' exprlist ']'
   25     | . assignstmt
   26     | . expr T_ADD expr
   27     | . expr T_SUB expr
   28     | . expr T_MUL expr
   29     | . expr T_DIV expr
   30     | . expr T_MOD expr
   31     | . expr T_POW expr
   32     | . T_SUB expr
   33     | . T_INC T_VAR
   34     | . T_DEC T_VAR
   35     | . T_VAR T_INC
   36     | . T_VAR T_DEC
   37     | . expr '<' expr
   37     | expr '<' . expr
   38     | . expr '>' expr
   39     | . expr T_LEQ expr
   40     | . expr T_GEQ expr
   41     | . expr T_EQ expr
   42     | . expr T_NEQ expr
   43     | . '`' nestedsubcmd '`'
   44     | . '(' expr ')'
   45     | . expr '.' T_STRING
   50 assignstmt: . T_VAR T_ASSIGN expr
   51           | . T_VAR '[' ']' T_ASSIGN expr
   52           | . T_VAR '[' expr ']' T_ASSIGN expr

    T_NUMBER         shift, and go to state 27
    T_STRING_SCONST  shift, and go to state 28
    T_VAR            shift, and go to state 29
    T_SUB            shift, and go to state 30
    T_DEC            shift, and go to state 31
    T_INC            shift, and go to state 32
    '('              shift, and go to state 33
    '"'              shift, and go to state 34
    '['              shift, and go to state 35
    '`'              shift, and go to state 36

    expr        go to state 121
    assignstmt  go to state 38


state 78

   19 expr: . T_NUMBER
   20     | . T_STRING_SCONST
   21     | . '"' strlist '"'
   22     | . T_VAR
   23     | . T_VAR '[' expr ']'
   24     | . '[' exprlist ']'
   25     | . assignstmt
   26     | . expr T_ADD expr
   27     | . expr T_SUB expr
   28     | . expr T_MUL expr
   29     | . expr T_DIV expr
   30     | . expr T_MOD expr
   31     | . expr T_POW expr
   32     | . T_SUB expr
   33     | . T_INC T_VAR
   34     | . T_DEC T_VAR
   35     | . T_VAR T_INC
   36     | . T_VAR T_DEC
   37     | . expr '<' expr
   38     | . expr '>' expr
   39     | . expr T_LEQ expr
   40     | . expr T_GEQ expr
   41     | . expr T_EQ expr
   42     | . expr T_NEQ expr
   42     | expr T_NEQ . expr
   43     | . '`' nestedsubcmd '`'
   44     | . '(' expr ')'
   45     | . expr '.' T_STRING
   50 assignstmt: . T_VAR T_ASSIGN expr
   51           | . T_VAR '[' ']' T_ASSIGN expr
   52           | . T_VAR '[' expr ']' T_ASSIGN expr

    T_NUMBER         shift, and go to state 27
    T_STRING_SCONST  shift, and go to state 28
    T_VAR            shift, and go to state 29
    T_SUB            shift, and go to state 30
    T_DEC            shift, and go to state 31
    T_INC            shift, and go to state 32
    '('              shift, and go to state 33
    '"'              shift, and go to state 34
    '['              shift, and go to state 35
    '`'              shift, and go to state 36

    expr        go to state 122
    assignstmt  go to state 38


state 79

   19 expr: . T_NUMBER
   20     | . T_STRING_SCONST
   21     | . '"' strlist '"'
   22     | . T_VAR
   23     | . T_VAR '[' expr ']'
   24     | . '[' exprlist ']'
   25     | . assignstmt
   26     | . expr T_ADD expr
   27     | . expr T_SUB expr
   28     | . expr T_MUL expr
   29     | . expr T_DIV expr
   30     | . expr T_MOD expr
   31     | . expr T_POW expr
   32     | . T_SUB expr
   33     | . T_INC T_VAR
   34     | . T_DEC T_VAR
   35     | . T_VAR T_INC
   36     | . T_VAR T_DEC
   37     | . expr '<' expr
   38     | . expr '>' expr
   39     | . expr T_LEQ expr
   40     | . expr T_GEQ expr
   41     | . expr T_EQ expr
   41     | expr T_EQ . expr
   42     | . expr T_NEQ expr
   43     | . '`' nestedsubcmd '`'
   44     | . '(' expr ')'
   45     | . expr '.' T_STRING
   50 assignstmt: . T_VAR T_ASSIGN expr
   51           | . T_VAR '[' ']' T_ASSIGN expr
   52           | . T_VAR '[' expr ']' T_ASSIGN expr

    T_NUMBER         shift, and go to state 27
    T_STRING_SCONST  shift, and go to state 28
    T_VAR            shift, and go to state 29
    T_SUB            shift, and go to state 30
    T_DEC            shift, and go to state 31
    T_INC            shift, and go to state 32
    '('              shift, and go to state 33
    '"'              shift, and go to state 34
    '['              shift, and go to state 35
    '`'              shift, and go to state 36

    expr        go to state 123
    assignstmt  go to state 38


state 80

   19 expr: . T_NUMBER
   20     | . T_STRING_SCONST
   21     | . '"' strlist '"'
   22     | . T_VAR
   23     | . T_VAR '[' expr ']'
   24     | . '[' exprlist ']'
   25     | . assignstmt
   26     | . expr T_ADD expr
   27     | . expr T_SUB expr
   28     | . expr T_MUL expr
   29     | . expr T_DIV expr
   30     | . expr T_MOD expr
   31     | . expr T_POW expr
   32     | . T_SUB expr
   33     | . T_INC T_VAR
   34     | . T_DEC T_VAR
   35     | . T_VAR T_INC
   36     | . T_VAR T_DEC
   37     | . expr '<' expr
   38     | . expr '>' expr
   39     | . expr T_LEQ expr
   40     | . expr T_GEQ expr
   40     | expr T_GEQ . expr
   41     | . expr T_EQ expr
   42     | . expr T_NEQ expr
   43     | . '`' nestedsubcmd '`'
   44     | . '(' expr ')'
   45     | . expr '.' T_STRING
   50 assignstmt: . T_VAR T_ASSIGN expr
   51           | . T_VAR '[' ']' T_ASSIGN expr
   52           | . T_VAR '[' expr ']' T_ASSIGN expr

    T_NUMBER         shift, and go to state 27
    T_STRING_SCONST  shift, and go to state 28
    T_VAR            shift, and go to state 29
    T_SUB            shift, and go to state 30
    T_DEC            shift, and go to state 31
    T_INC            shift, and go to state 32
    '('              shift, and go to state 33
    '"'              shift, and go to state 34
    '['              shift, and go to state 35
    '`'              shift, and go to state 36

    expr        go to state 124
    assignstmt  go to state 38


state 81

   19 expr: . T_NUMBER
   20     | . T_STRING_SCONST
   21     | . '"' strlist '"'
   22     | . T_VAR
   23     | . T_VAR '[' expr ']'
   24     | . '[' exprlist ']'
   25     | . assignstmt
   26     | . expr T_ADD expr
   27     | . expr T_SUB expr
   28     | . expr T_MUL expr
   29     | . expr T_DIV expr
   30     | . expr T_MOD expr
   31     | . expr T_POW expr
   32     | . T_SUB expr
   33     | . T_INC T_VAR
   34     | . T_DEC T_VAR
   35     | . T_VAR T_INC
   36     | . T_VAR T_DEC
   37     | . expr '<' expr
   38     | . expr '>' expr
   39     | . expr T_LEQ expr
   39     | expr T_LEQ . expr
   40     | . expr T_GEQ expr
   41     | . expr T_EQ expr
   42     | . expr T_NEQ expr
   43     | . '`' nestedsubcmd '`'
   44     | . '(' expr ')'
   45     | . expr '.' T_STRING
   50 assignstmt: . T_VAR T_ASSIGN expr
   51           | . T_VAR '[' ']' T_ASSIGN expr
   52           | . T_VAR '[' expr ']' T_ASSIGN expr

    T_NUMBER         shift, and go to state 27
    T_STRING_SCONST  shift, and go to state 28
    T_VAR            shift, and go to state 29
    T_SUB            shift, and go to state 30
    T_DEC            shift, and go to state 31
    T_INC            shift, and go to state 32
    '('              shift, and go to state 33
    '"'              shift, and go to state 34
    '['              shift, and go to state 35
    '`'              shift, and go to state 36

    expr        go to state 125
    assignstmt  go to state 38


state 82

   19 expr: . T_NUMBER
   20     | . T_STRING_SCONST
   21     | . '"' strlist '"'
   22     | . T_VAR
   23     | . T_VAR '[' expr ']'
   24     | . '[' exprlist ']'
   25     | . assignstmt
   26     | . expr T_ADD expr
   27     | . expr T_SUB expr
   27     | expr T_SUB . expr
   28     | . expr T_MUL expr
   29     | . expr T_DIV expr
   30     | . expr T_MOD expr
   31     | . expr T_POW expr
   32     | . T_SUB expr
   33     | . T_INC T_VAR
   34     | . T_DEC T_VAR
   35     | . T_VAR T_INC
   36     | . T_VAR T_DEC
   37     | . expr '<' expr
   38     | . expr '>' expr
   39     | . expr T_LEQ expr
   40     | . expr T_GEQ expr
   41     | . expr T_EQ expr
   42     | . expr T_NEQ expr
   43     | . '`' nestedsubcmd '`'
   44     | . '(' expr ')'
   45     | . expr '.' T_STRING
   50 assignstmt: . T_VAR T_ASSIGN expr
   51           | . T_VAR '[' ']' T_ASSIGN expr
   52           | . T_VAR '[' expr ']' T_ASSIGN expr

    T_NUMBER         shift, and go to state 27
    T_STRING_SCONST  shift, and go to state 28
    T_VAR            shift, and go to state 29
    T_SUB            shift, and go to state 30
    T_DEC            shift, and go to state 31
    T_INC            shift, and go to state 32
    '('              shift, and go to state 33
    '"'              shift, and go to state 34
    '['              shift, and go to state 35
    '`'              shift, and go to state 36

    expr        go to state 126
    assignstmt  go to state 38


state 83

   19 expr: . T_NUMBER
   20     | . T_STRING_SCONST
   21     | . '"' strlist '"'
   22     | . T_VAR
   23     | . T_VAR '[' expr ']'
   24     | . '[' exprlist ']'
   25     | . assignstmt
   26     | . expr T_ADD expr
   26     | expr T_ADD . expr
   27     | . expr T_SUB expr
   28     | . expr T_MUL expr
   29     | . expr T_DIV expr
   30     | . expr T_MOD expr
   31     | . expr T_POW expr
   32     | . T_SUB expr
   33     | . T_INC T_VAR
   34     | . T_DEC T_VAR
   35     | . T_VAR T_INC
   36     | . T_VAR T_DEC
   37     | . expr '<' expr
   38     | . expr '>' expr
   39     | . expr T_LEQ expr
   40     | . expr T_GEQ expr
   41     | . expr T_EQ expr
   42     | . expr T_NEQ expr
   43     | . '`' nestedsubcmd '`'
   44     | . '(' expr ')'
   45     | . expr '.' T_STRING
   50 assignstmt: . T_VAR T_ASSIGN expr
   51           | . T_VAR '[' ']' T_ASSIGN expr
   52           | . T_VAR '[' expr ']' T_ASSIGN expr

    T_NUMBER         shift, and go to state 27
    T_STRING_SCONST  shift, and go to state 28
    T_VAR            shift, and go to state 29
    T_SUB            shift, and go to state 30
    T_DEC            shift, and go to state 31
    T_INC            shift, and go to state 32
    '('              shift, and go to state 33
    '"'              shift, and go to state 34
    '['              shift, and go to state 35
    '`'              shift, and go to state 36

    expr        go to state 127
    assignstmt  go to state 38


state 84

   19 expr: . T_NUMBER
   20     | . T_STRING_SCONST
   21     | . '"' strlist '"'
   22     | . T_VAR
   23     | . T_VAR '[' expr ']'
   24     | . '[' exprlist ']'
   25     | . assignstmt
   26     | . expr T_ADD expr
   27     | . expr T_SUB expr
   28     | . expr T_MUL expr
   29     | . expr T_DIV expr
   30     | . expr T_MOD expr
   30     | expr T_MOD . expr
   31     | . expr T_POW expr
   32     | . T_SUB expr
   33     | . T_INC T_VAR
   34     | . T_DEC T_VAR
   35     | . T_VAR T_INC
   36     | . T_VAR T_DEC
   37     | . expr '<' expr
   38     | . expr '>' expr
   39     | . expr T_LEQ expr
   40     | . expr T_GEQ expr
   41     | . expr T_EQ expr
   42     | . expr T_NEQ expr
   43     | . '`' nestedsubcmd '`'
   44     | . '(' expr ')'
   45     | . expr '.' T_STRING
   50 assignstmt: . T_VAR T_ASSIGN expr
   51           | . T_VAR '[' ']' T_ASSIGN expr
   52           | . T_VAR '[' expr ']' T_ASSIGN expr

    T_NUMBER         shift, and go to state 27
    T_STRING_SCONST  shift, and go to state 28
    T_VAR            shift, and go to state 29
    T_SUB            shift, and go to state 30
    T_DEC            shift, and go to state 31
    T_INC            shift, and go to state 32
    '('              shift, and go to state 33
    '"'              shift, and go to state 34
    '['              shift, and go to state 35
    '`'              shift, and go to state 36

    expr        go to state 128
    assignstmt  go to state 38


state 85

   19 expr: . T_NUMBER
   20     | . T_STRING_SCONST
   21     | . '"' strlist '"'
   22     | . T_VAR
   23     | . T_VAR '[' expr ']'
   24     | . '[' exprlist ']'
   25     | . assignstmt
   26     | . expr T_ADD expr
   27     | . expr T_SUB expr
   28     | . expr T_MUL expr
   29     | . expr T_DIV expr
   29     | expr T_DIV . expr
   30     | . expr T_MOD expr
   31     | . expr T_POW expr
   32     | . T_SUB expr
   33     | . T_INC T_VAR
   34     | . T_DEC T_VAR
   35     | . T_VAR T_INC
   36     | . T_VAR T_DEC
   37     | . expr '<' expr
   38     | . expr '>' expr
   39     | . expr T_LEQ expr
   40     | . expr T_GEQ expr
   41     | . expr T_EQ expr
   42     | . expr T_NEQ expr
   43     | . '`' nestedsubcmd '`'
   44     | . '(' expr ')'
   45     | . expr '.' T_STRING
   50 assignstmt: . T_VAR T_ASSIGN expr
   51           | . T_VAR '[' ']' T_ASSIGN expr
   52           | . T_VAR '[' expr ']' T_ASSIGN expr

    T_NUMBER         shift, and go to state 27
    T_STRING_SCONST  shift, and go to state 28
    T_VAR            shift, and go to state 29
    T_SUB            shift, and go to state 30
    T_DEC            shift, and go to state 31
    T_INC            shift, and go to state 32
    '('              shift, and go to state 33
    '"'              shift, and go to state 34
    '['              shift, and go to state 35
    '`'              shift, and go to state 36

    expr        go to state 129
    assignstmt  go to state 38


state 86

   19 expr: . T_NUMBER
   20     | . T_STRING_SCONST
   21     | . '"' strlist '"'
   22     | . T_VAR
   23     | . T_VAR '[' expr ']'
   24     | . '[' exprlist ']'
   25     | . assignstmt
   26     | . expr T_ADD expr
   27     | . expr T_SUB expr
   28     | . expr T_MUL expr
   28     | expr T_MUL . expr
   29     | . expr T_DIV expr
   30     | . expr T_MOD expr
   31     | . expr T_POW expr
   32     | . T_SUB expr
   33     | . T_INC T_VAR
   34     | . T_DEC T_VAR
   35     | . T_VAR T_INC
   36     | . T_VAR T_DEC
   37     | . expr '<' expr
   38     | . expr '>' expr
   39     | . expr T_LEQ expr
   40     | . expr T_GEQ expr
   41     | . expr T_EQ expr
   42     | . expr T_NEQ expr
   43     | . '`' nestedsubcmd '`'
   44     | . '(' expr ')'
   45     | . expr '.' T_STRING
   50 assignstmt: . T_VAR T_ASSIGN expr
   51           | . T_VAR '[' ']' T_ASSIGN expr
   52           | . T_VAR '[' expr ']' T_ASSIGN expr

    T_NUMBER         shift, and go to state 27
    T_STRING_SCONST  shift, and go to state 28
    T_VAR            shift, and go to state 29
    T_SUB            shift, and go to state 30
    T_DEC            shift, and go to state 31
    T_INC            shift, and go to state 32
    '('              shift, and go to state 33
    '"'              shift, and go to state 34
    '['              shift, and go to state 35
    '`'              shift, and go to state 36

    expr        go to state 130
    assignstmt  go to state 38


state 87

   19 expr: . T_NUMBER
   20     | . T_STRING_SCONST
   21     | . '"' strlist '"'
   22     | . T_VAR
   23     | . T_VAR '[' expr ']'
   24     | . '[' exprlist ']'
   25     | . assignstmt
   26     | . expr T_ADD expr
   27     | . expr T_SUB expr
   28     | . expr T_MUL expr
   29     | . expr T_DIV expr
   30     | . expr T_MOD expr
   31     | . expr T_POW expr
   31     | expr T_POW . expr
   32     | . T_SUB expr
   33     | . T_INC T_VAR
   34     | . T_DEC T_VAR
   35     | . T_VAR T_INC
   36     | . T_VAR T_DEC
   37     | . expr '<' expr
   38     | . expr '>' expr
   39     | . expr T_LEQ expr
   40     | . expr T_GEQ expr
   41     | . expr T_EQ expr
   42     | . expr T_NEQ expr
   43     | . '`' nestedsubcmd '`'
   44     | . '(' expr ')'
   45     | . expr '.' T_STRING
   50 assignstmt: . T_VAR T_ASSIGN expr
   51           | . T_VAR '[' ']' T_ASSIGN expr
   52           | . T_VAR '[' expr ']' T_ASSIGN expr

    T_NUMBER         shift, and go to state 27
    T_STRING_SCONST  shift, and go to state 28
    T_VAR            shift, and go to state 29
    T_SUB            shift, and go to state 30
    T_DEC            shift, and go to state 31
    T_INC            shift, and go to state 32
    '('              shift, and go to state 33
    '"'              shift, and go to state 34
    '['              shift, and go to state 35
    '`'              shift, and go to state 36

    expr        go to state 131
    assignstmt  go to state 38


state 88

   45 expr: expr '.' . T_STRING

    T_STRING  shift, and go to state 132


state 89

   59 cmdexpr: '(' expr ')' .

    $default  reduce using rule 59 (cmdexpr)


state 90

   16 strcomp: T_STRING .

    $default  reduce using rule 16 (strcomp)


state 91

   17 strcomp: T_VAR .

    $default  reduce using rule 17 (strcomp)


state 92

   18 strcomp: '(' . expr ')'
   19 expr: . T_NUMBER
   20     | . T_STRING_SCONST
   21     | . '"' strlist '"'
   22     | . T_VAR
   23     | . T_VAR '[' expr ']'
   24     | . '[' exprlist ']'
   25     | . assignstmt
   26     | . expr T_ADD expr
   27     | . expr T_SUB expr
   28     | . expr T_MUL expr
   29     | . expr T_DIV expr
   30     | . expr T_MOD expr
   31     | . expr T_POW expr
   32     | . T_SUB expr
   33     | . T_INC T_VAR
   34     | . T_DEC T_VAR
   35     | . T_VAR T_INC
   36     | . T_VAR T_DEC
   37     | . expr '<' expr
   38     | . expr '>' expr
   39     | . expr T_LEQ expr
   40     | . expr T_GEQ expr
   41     | . expr T_EQ expr
   42     | . expr T_NEQ expr
   43     | . '`' nestedsubcmd '`'
   44     | . '(' expr ')'
   45     | . expr '.' T_STRING
   50 assignstmt: . T_VAR T_ASSIGN expr
   51           | . T_VAR '[' ']' T_ASSIGN expr
   52           | . T_VAR '[' expr ']' T_ASSIGN expr

    T_NUMBER         shift, and go to state 27
    T_STRING_SCONST  shift, and go to state 28
    T_VAR            shift, and go to state 29
    T_SUB            shift, and go to state 30
    T_DEC            shift, and go to state 31
    T_INC            shift, and go to state 32
    '('              shift, and go to state 33
    '"'              shift, and go to state 34
    '['              shift, and go to state 35
    '`'              shift, and go to state 36

    expr        go to state 133
    assignstmt  go to state 38


state 93

   56 cmdexpr: '"' strlist '"' .

    $default  reduce using rule 56 (cmdexpr)


state 94

   14 strlist: strlist strcomp .

    $default  reduce using rule 14 (strlist)


state 95

   26 expr: expr . T_ADD expr
   27     | expr . T_SUB expr
   28     | expr . T_MUL expr
   29     | expr . T_DIV expr
   30     | expr . T_MOD expr
   31     | expr . T_POW expr
   37     | expr . '<' expr
   38     | expr . '>' expr
   39     | expr . T_LEQ expr
   40     | expr . T_GEQ expr
   41     | expr . T_EQ expr
   42     | expr . T_NEQ expr
   45     | expr . '.' T_STRING
   71 nestedcmdexpr: '(' expr . ')'

    '>'    shift, and go to state 76
    '<'    shift, and go to state 77
    T_NEQ  shift, and go to state 78
    T_EQ   shift, and go to state 79
    T_GEQ  shift, and go to state 80
    T_LEQ  shift, and go to state 81
    T_SUB  shift, and go to state 82
    T_ADD  shift, and go to state 83
    T_MOD  shift, and go to state 84
    T_DIV  shift, and go to state 85
    T_MUL  shift, and go to state 86
    T_POW  shift, and go to state 87
    '.'    shift, and go to state 88
    ')'    shift, and go to state 134


state 96

   14 strlist: strlist . strcomp
   16 strcomp: . T_STRING
   17        | . T_VAR
   18        | . '(' expr ')'
   69 nestedcmdexpr: '"' strlist . '"'

    T_STRING  shift, and go to state 90
    T_VAR     shift, and go to state 91
    '('       shift, and go to state 92
    '"'       shift, and go to state 135

    strcomp  go to state 94


state 97

   73 nestedcmdexprlist: nestedcmdexprlist nestedcmdexpr .

    $default  reduce using rule 73 (nestedcmdexprlist)


state 98

   74 nestedsubcmd: nestedcmdexprlist cmdredirin . cmdredirout cmdredirerr cmdredirfd
   83 cmdredirout: . '>' nestedcmdexpr
   84            | . T_OUT2FILE nestedcmdexpr
   85            | . T_APPEND nestedcmdexpr
   86            | .  [T_ERR2OUT, T_OUT2ERR, T_ERR2FILE, '`', '|']

    T_APPEND    shift, and go to state 103
    T_OUT2FILE  shift, and go to state 104
    '>'         shift, and go to state 105

    $default  reduce using rule 86 (cmdredirout)

    cmdredirout  go to state 136


state 99

   58 cmdexpr: '`' nestedsubcmd '`' .

    $default  reduce using rule 58 (cmdexpr)


state 100

   66 nestedcmdexpr: . T_NUMBER
   67              | . T_STRING
   68              | . T_STRING_SCONST
   69              | . '"' strlist '"'
   70              | . T_VAR
   71              | . '(' expr ')'
   72 nestedcmdexprlist: . nestedcmdexpr
   73                  | . nestedcmdexprlist nestedcmdexpr
   75 nestedsubcmd: nestedsubcmd '|' . nestedcmdexprlist cmdredirin cmdredirout cmdredirerr cmdredirfd

    T_NUMBER         shift, and go to state 40
    T_STRING         shift, and go to state 41
    T_STRING_SCONST  shift, and go to state 42
    T_VAR            shift, and go to state 43
    '('              shift, and go to state 44
    '"'              shift, and go to state 45

    nestedcmdexpr      go to state 46
    nestedcmdexprlist  go to state 137


state 101

    6 stmtlistr: stmtlistr ';' stmt .

    $default  reduce using rule 6 (stmtlistr)


state 102

   79 cmdredirin: '<' nestedcmdexpr .

    $default  reduce using rule 79 (cmdredirin)


state 103

   66 nestedcmdexpr: . T_NUMBER
   67              | . T_STRING
   68              | . T_STRING_SCONST
   69              | . '"' strlist '"'
   70              | . T_VAR
   71              | . '(' expr ')'
   85 cmdredirout: T_APPEND . nestedcmdexpr

    T_NUMBER         shift, and go to state 40
    T_STRING         shift, and go to state 41
    T_STRING_SCONST  shift, and go to state 42
    T_VAR            shift, and go to state 43
    '('              shift, and go to state 44
    '"'              shift, and go to state 45

    nestedcmdexpr  go to state 138


state 104

   66 nestedcmdexpr: . T_NUMBER
   67              | . T_STRING
   68              | . T_STRING_SCONST
   69              | . '"' strlist '"'
   70              | . T_VAR
   71              | . '(' expr ')'
   84 cmdredirout: T_OUT2FILE . nestedcmdexpr

    T_NUMBER         shift, and go to state 40
    T_STRING         shift, and go to state 41
    T_STRING_SCONST  shift, and go to state 42
    T_VAR            shift, and go to state 43
    '('              shift, and go to state 44
    '"'              shift, and go to state 45

    nestedcmdexpr  go to state 139


state 105

   66 nestedcmdexpr: . T_NUMBER
   67              | . T_STRING
   68              | . T_STRING_SCONST
   69              | . '"' strlist '"'
   70              | . T_VAR
   71              | . '(' expr ')'
   83 cmdredirout: '>' . nestedcmdexpr

    T_NUMBER         shift, and go to state 40
    T_STRING         shift, and go to state 41
    T_STRING_SCONST  shift, and go to state 42
    T_VAR            shift, and go to state 43
    '('              shift, and go to state 44
    '"'              shift, and go to state 45

    nestedcmdexpr  go to state 140


state 106

   64 subcmd: cmdexprlist cmdredirin cmdredirout . cmdredirerr cmdredirfd
   81 cmdredirerr: . T_ERR2FILE nestedcmdexpr
   82            | .  [$end, T_ELSE, T_FI, T_DONE, T_END, T_ERR2OUT, T_OUT2ERR, ';', '&', '|']

    T_ERR2FILE  shift, and go to state 141

    $default  reduce using rule 82 (cmdredirerr)

    cmdredirerr  go to state 142


state 107

   53 cmdexpr: . T_NUMBER
   54        | . T_STRING
   55        | . T_STRING_SCONST
   56        | . '"' strlist '"'
   57        | . T_VAR
   58        | . '`' nestedsubcmd '`'
   59        | . '(' expr ')'
   61 cmdexprlist: cmdexprlist . cmdexpr
   65 subcmd: subcmd '|' cmdexprlist . cmdredirin cmdredirout cmdredirerr cmdredirfd
   79 cmdredirin: . '<' nestedcmdexpr
   80           | .  [$end, T_ELSE, T_FI, T_DONE, T_END, T_ERR2OUT, T_OUT2ERR, T_APPEND, T_ERR2FILE, T_OUT2FILE, '>', ';', '&', '|']

    T_NUMBER         shift, and go to state 5
    T_STRING         shift, and go to state 6
    T_STRING_SCONST  shift, and go to state 7
    T_VAR            shift, and go to state 51
    '<'              shift, and go to state 52
    '('              shift, and go to state 9
    '"'              shift, and go to state 10
    '`'              shift, and go to state 11

    $default  reduce using rule 80 (cmdredirin)

    cmdexpr     go to state 53
    cmdredirin  go to state 143


state 108

    8 stmt: T_IF '(' expr ')' . T_THEN stmtlist T_FI
    9     | T_IF '(' expr ')' . T_THEN stmtlist T_ELSE stmtlist T_FI

    T_THEN  shift, and go to state 144


state 109

   10 stmt: T_FOR '(' expr ';' . expr ';' expr ')' T_DO stmtlist T_DONE
   19 expr: . T_NUMBER
   20     | . T_STRING_SCONST
   21     | . '"' strlist '"'
   22     | . T_VAR
   23     | . T_VAR '[' expr ']'
   24     | . '[' exprlist ']'
   25     | . assignstmt
   26     | . expr T_ADD expr
   27     | . expr T_SUB expr
   28     | . expr T_MUL expr
   29     | . expr T_DIV expr
   30     | . expr T_MOD expr
   31     | . expr T_POW expr
   32     | . T_SUB expr
   33     | . T_INC T_VAR
   34     | . T_DEC T_VAR
   35     | . T_VAR T_INC
   36     | . T_VAR T_DEC
   37     | . expr '<' expr
   38     | . expr '>' expr
   39     | . expr T_LEQ expr
   40     | . expr T_GEQ expr
   41     | . expr T_EQ expr
   42     | . expr T_NEQ expr
   43     | . '`' nestedsubcmd '`'
   44     | . '(' expr ')'
   45     | . expr '.' T_STRING
   50 assignstmt: . T_VAR T_ASSIGN expr
   51           | . T_VAR '[' ']' T_ASSIGN expr
   52           | . T_VAR '[' expr ']' T_ASSIGN expr

    T_NUMBER         shift, and go to state 27
    T_STRING_SCONST  shift, and go to state 28
    T_VAR            shift, and go to state 29
    T_SUB            shift, and go to state 30
    T_DEC            shift, and go to state 31
    T_INC            shift, and go to state 32
    '('              shift, and go to state 33
    '"'              shift, and go to state 34
    '['              shift, and go to state 35
    '`'              shift, and go to state 36

    expr        go to state 145
    assignstmt  go to state 38


state 110

   11 stmt: T_WHILE '(' expr ')' . T_DO stmtlist T_DONE

    T_DO  shift, and go to state 146


state 111

    7 stmt: T_FUNCTION T_STRING T_BEGIN stmtlist . T_END

    T_END  shift, and go to state 147


state 112

   19 expr: . T_NUMBER
   20     | . T_STRING_SCONST
   21     | . '"' strlist '"'
   22     | . T_VAR
   23     | . T_VAR '[' expr ']'
   24     | . '[' exprlist ']'
   25     | . assignstmt
   26     | . expr T_ADD expr
   27     | . expr T_SUB expr
   28     | . expr T_MUL expr
   29     | . expr T_DIV expr
   30     | . expr T_MOD expr
   31     | . expr T_POW expr
   32     | . T_SUB expr
   33     | . T_INC T_VAR
   34     | . T_DEC T_VAR
   35     | . T_VAR T_INC
   36     | . T_VAR T_DEC
   37     | . expr '<' expr
   38     | . expr '>' expr
   39     | . expr T_LEQ expr
   40     | . expr T_GEQ expr
   41     | . expr T_EQ expr
   42     | . expr T_NEQ expr
   43     | . '`' nestedsubcmd '`'
   44     | . '(' expr ')'
   45     | . expr '.' T_STRING
   50 assignstmt: . T_VAR T_ASSIGN expr
   51           | . T_VAR '[' ']' T_ASSIGN expr
   51           | T_VAR '[' ']' T_ASSIGN . expr
   52           | . T_VAR '[' expr ']' T_ASSIGN expr

    T_NUMBER         shift, and go to state 27
    T_STRING_SCONST  shift, and go to state 28
    T_VAR            shift, and go to state 29
    T_SUB            shift, and go to state 30
    T_DEC            shift, and go to state 31
    T_INC            shift, and go to state 32
    '('              shift, and go to state 33
    '"'              shift, and go to state 34
    '['              shift, and go to state 35
    '`'              shift, and go to state 36

    expr        go to state 148
    assignstmt  go to state 38


state 113

   52 assignstmt: T_VAR '[' expr ']' . T_ASSIGN expr

    T_ASSIGN  shift, and go to state 149


state 114

   23 expr: T_VAR '[' expr . ']'
   26     | expr . T_ADD expr
   27     | expr . T_SUB expr
   28     | expr . T_MUL expr
   29     | expr . T_DIV expr
   30     | expr . T_MOD expr
   31     | expr . T_POW expr
   37     | expr . '<' expr
   38     | expr . '>' expr
   39     | expr . T_LEQ expr
   40     | expr . T_GEQ expr
   41     | expr . T_EQ expr
   42     | expr . T_NEQ expr
   45     | expr . '.' T_STRING
   52 assignstmt: T_VAR '[' expr . ']' T_ASSIGN expr

    '>'    shift, and go to state 76
    '<'    shift, and go to state 77
    T_NEQ  shift, and go to state 78
    T_EQ   shift, and go to state 79
    T_GEQ  shift, and go to state 80
    T_LEQ  shift, and go to state 81
    T_SUB  shift, and go to state 82
    T_ADD  shift, and go to state 83
    T_MOD  shift, and go to state 84
    T_DIV  shift, and go to state 85
    T_MUL  shift, and go to state 86
    T_POW  shift, and go to state 87
    '.'    shift, and go to state 88
    ']'    shift, and go to state 150


state 115

   44 expr: '(' expr ')' .

    $default  reduce using rule 44 (expr)


state 116

   21 expr: '"' strlist '"' .

    $default  reduce using rule 21 (expr)


state 117

   24 expr: '[' exprlist ']' .

    $default  reduce using rule 24 (expr)


state 118

   19 expr: . T_NUMBER
   20     | . T_STRING_SCONST
   21     | . '"' strlist '"'
   22     | . T_VAR
   23     | . T_VAR '[' expr ']'
   24     | . '[' exprlist ']'
   25     | . assignstmt
   26     | . expr T_ADD expr
   27     | . expr T_SUB expr
   28     | . expr T_MUL expr
   29     | . expr T_DIV expr
   30     | . expr T_MOD expr
   31     | . expr T_POW expr
   32     | . T_SUB expr
   33     | . T_INC T_VAR
   34     | . T_DEC T_VAR
   35     | . T_VAR T_INC
   36     | . T_VAR T_DEC
   37     | . expr '<' expr
   38     | . expr '>' expr
   39     | . expr T_LEQ expr
   40     | . expr T_GEQ expr
   41     | . expr T_EQ expr
   42     | . expr T_NEQ expr
   43     | . '`' nestedsubcmd '`'
   44     | . '(' expr ')'
   45     | . expr '.' T_STRING
   48 neexprlist: neexprlist ',' . expr
   50 assignstmt: . T_VAR T_ASSIGN expr
   51           | . T_VAR '[' ']' T_ASSIGN expr
   52           | . T_VAR '[' expr ']' T_ASSIGN expr

    T_NUMBER         shift, and go to state 27
    T_STRING_SCONST  shift, and go to state 28
    T_VAR            shift, and go to state 29
    T_SUB            shift, and go to state 30
    T_DEC            shift, and go to state 31
    T_INC            shift, and go to state 32
    '('              shift, and go to state 33
    '"'              shift, and go to state 34
    '['              shift, and go to state 35
    '`'              shift, and go to state 36

    expr        go to state 151
    assignstmt  go to state 38


state 119

   43 expr: '`' nestedsubcmd '`' .

    $default  reduce using rule 43 (expr)


state 120

   26 expr: expr . T_ADD expr
   27     | expr . T_SUB expr
   28     | expr . T_MUL expr
   29     | expr . T_DIV expr
   30     | expr . T_MOD expr
   31     | expr . T_POW expr
   37     | expr . '<' expr
   38     | expr . '>' expr
   38     | expr '>' expr .  [$end, T_ELSE, T_FI, T_DONE, T_END, ';', ')', ']', ',']
   39     | expr . T_LEQ expr
   40     | expr . T_GEQ expr
   41     | expr . T_EQ expr
   42     | expr . T_NEQ expr
   45     | expr . '.' T_STRING

    T_SUB  shift, and go to state 82
    T_ADD  shift, and go to state 83
    T_MOD  shift, and go to state 84
    T_DIV  shift, and go to state 85
    T_MUL  shift, and go to state 86
    T_POW  shift, and go to state 87
    '.'    shift, and go to state 88

    '>'    error (nonassociative)
    '<'    error (nonassociative)
    T_NEQ  error (nonassociative)
    T_EQ   error (nonassociative)
    T_GEQ  error (nonassociative)
    T_LEQ  error (nonassociative)

    $default  reduce using rule 38 (expr)

    Conflict between rule 38 and token '>' resolved as an error (%nonassoc '>').
    Conflict between rule 38 and token '<' resolved as an error (%nonassoc '<').
    Conflict between rule 38 and token T_NEQ resolved as an error (%nonassoc T_NEQ).
    Conflict between rule 38 and token T_EQ resolved as an error (%nonassoc T_EQ).
    Conflict between rule 38 and token T_GEQ resolved as an error (%nonassoc T_GEQ).
    Conflict between rule 38 and token T_LEQ resolved as an error (%nonassoc T_LEQ).
    Conflict between rule 38 and token T_SUB resolved as shift ('>' < T_SUB).
    Conflict between rule 38 and token T_ADD resolved as shift ('>' < T_ADD).
    Conflict between rule 38 and token T_MOD resolved as shift ('>' < T_MOD).
    Conflict between rule 38 and token T_DIV resolved as shift ('>' < T_DIV).
    Conflict between rule 38 and token T_MUL resolved as shift ('>' < T_MUL).
    Conflict between rule 38 and token T_POW resolved as shift ('>' < T_POW).
    Conflict between rule 38 and token '.' resolved as shift ('>' < '.').


state 121

   26 expr: expr . T_ADD expr
   27     | expr . T_SUB expr
   28     | expr . T_MUL expr
   29     | expr . T_DIV expr
   30     | expr . T_MOD expr
   31     | expr . T_POW expr
   37     | expr . '<' expr
   37     | expr '<' expr .  [$end, T_ELSE, T_FI, T_DONE, T_END, ';', ')', ']', ',']
   38     | expr . '>' expr
   39     | expr . T_LEQ expr
   40     | expr . T_GEQ expr
   41     | expr . T_EQ expr
   42     | expr . T_NEQ expr
   45     | expr . '.' T_STRING

    T_SUB  shift, and go to state 82
    T_ADD  shift, and go to state 83
    T_MOD  shift, and go to state 84
    T_DIV  shift, and go to state 85
    T_MUL  shift, and go to state 86
    T_POW  shift, and go to state 87
    '.'    shift, and go to state 88

    '>'    error (nonassociative)
    '<'    error (nonassociative)
    T_NEQ  error (nonassociative)
    T_EQ   error (nonassociative)
    T_GEQ  error (nonassociative)
    T_LEQ  error (nonassociative)

    $default  reduce using rule 37 (expr)

    Conflict between rule 37 and token '>' resolved as an error (%nonassoc '>').
    Conflict between rule 37 and token '<' resolved as an error (%nonassoc '<').
    Conflict between rule 37 and token T_NEQ resolved as an error (%nonassoc T_NEQ).
    Conflict between rule 37 and token T_EQ resolved as an error (%nonassoc T_EQ).
    Conflict between rule 37 and token T_GEQ resolved as an error (%nonassoc T_GEQ).
    Conflict between rule 37 and token T_LEQ resolved as an error (%nonassoc T_LEQ).
    Conflict between rule 37 and token T_SUB resolved as shift ('<' < T_SUB).
    Conflict between rule 37 and token T_ADD resolved as shift ('<' < T_ADD).
    Conflict between rule 37 and token T_MOD resolved as shift ('<' < T_MOD).
    Conflict between rule 37 and token T_DIV resolved as shift ('<' < T_DIV).
    Conflict between rule 37 and token T_MUL resolved as shift ('<' < T_MUL).
    Conflict between rule 37 and token T_POW resolved as shift ('<' < T_POW).
    Conflict between rule 37 and token '.' resolved as shift ('<' < '.').


state 122

   26 expr: expr . T_ADD expr
   27     | expr . T_SUB expr
   28     | expr . T_MUL expr
   29     | expr . T_DIV expr
   30     | expr . T_MOD expr
   31     | expr . T_POW expr
   37     | expr . '<' expr
   38     | expr . '>' expr
   39     | expr . T_LEQ expr
   40     | expr . T_GEQ expr
   41     | expr . T_EQ expr
   42     | expr . T_NEQ expr
   42     | expr T_NEQ expr .  [$end, T_ELSE, T_FI, T_DONE, T_END, ';', ')', ']', ',']
   45     | expr . '.' T_STRING

    T_SUB  shift, and go to state 82
    T_ADD  shift, and go to state 83
    T_MOD  shift, and go to state 84
    T_DIV  shift, and go to state 85
    T_MUL  shift, and go to state 86
    T_POW  shift, and go to state 87
    '.'    shift, and go to state 88

    '>'    error (nonassociative)
    '<'    error (nonassociative)
    T_NEQ  error (nonassociative)
    T_EQ   error (nonassociative)
    T_GEQ  error (nonassociative)
    T_LEQ  error (nonassociative)

    $default  reduce using rule 42 (expr)

    Conflict between rule 42 and token '>' resolved as an error (%nonassoc '>').
    Conflict between rule 42 and token '<' resolved as an error (%nonassoc '<').
    Conflict between rule 42 and token T_NEQ resolved as an error (%nonassoc T_NEQ).
    Conflict between rule 42 and token T_EQ resolved as an error (%nonassoc T_EQ).
    Conflict between rule 42 and token T_GEQ resolved as an error (%nonassoc T_GEQ).
    Conflict between rule 42 and token T_LEQ resolved as an error (%nonassoc T_LEQ).
    Conflict between rule 42 and token T_SUB resolved as shift (T_NEQ < T_SUB).
    Conflict between rule 42 and token T_ADD resolved as shift (T_NEQ < T_ADD).
    Conflict between rule 42 and token T_MOD resolved as shift (T_NEQ < T_MOD).
    Conflict between rule 42 and token T_DIV resolved as shift (T_NEQ < T_DIV).
    Conflict between rule 42 and token T_MUL resolved as shift (T_NEQ < T_MUL).
    Conflict between rule 42 and token T_POW resolved as shift (T_NEQ < T_POW).
    Conflict between rule 42 and token '.' resolved as shift (T_NEQ < '.').


state 123

   26 expr: expr . T_ADD expr
   27     | expr . T_SUB expr
   28     | expr . T_MUL expr
   29     | expr . T_DIV expr
   30     | expr . T_MOD expr
   31     | expr . T_POW expr
   37     | expr . '<' expr
   38     | expr . '>' expr
   39     | expr . T_LEQ expr
   40     | expr . T_GEQ expr
   41     | expr . T_EQ expr
   41     | expr T_EQ expr .  [$end, T_ELSE, T_FI, T_DONE, T_END, ';', ')', ']', ',']
   42     | expr . T_NEQ expr
   45     | expr . '.' T_STRING

    T_SUB  shift, and go to state 82
    T_ADD  shift, and go to state 83
    T_MOD  shift, and go to state 84
    T_DIV  shift, and go to state 85
    T_MUL  shift, and go to state 86
    T_POW  shift, and go to state 87
    '.'    shift, and go to state 88

    '>'    error (nonassociative)
    '<'    error (nonassociative)
    T_NEQ  error (nonassociative)
    T_EQ   error (nonassociative)
    T_GEQ  error (nonassociative)
    T_LEQ  error (nonassociative)

    $default  reduce using rule 41 (expr)

    Conflict between rule 41 and token '>' resolved as an error (%nonassoc '>').
    Conflict between rule 41 and token '<' resolved as an error (%nonassoc '<').
    Conflict between rule 41 and token T_NEQ resolved as an error (%nonassoc T_NEQ).
    Conflict between rule 41 and token T_EQ resolved as an error (%nonassoc T_EQ).
    Conflict between rule 41 and token T_GEQ resolved as an error (%nonassoc T_GEQ).
    Conflict between rule 41 and token T_LEQ resolved as an error (%nonassoc T_LEQ).
    Conflict between rule 41 and token T_SUB resolved as shift (T_EQ < T_SUB).
    Conflict between rule 41 and token T_ADD resolved as shift (T_EQ < T_ADD).
    Conflict between rule 41 and token T_MOD resolved as shift (T_EQ < T_MOD).
    Conflict between rule 41 and token T_DIV resolved as shift (T_EQ < T_DIV).
    Conflict between rule 41 and token T_MUL resolved as shift (T_EQ < T_MUL).
    Conflict between rule 41 and token T_POW resolved as shift (T_EQ < T_POW).
    Conflict between rule 41 and token '.' resolved as shift (T_EQ < '.').


state 124

   26 expr: expr . T_ADD expr
   27     | expr . T_SUB expr
   28     | expr . T_MUL expr
   29     | expr . T_DIV expr
   30     | expr . T_MOD expr
   31     | expr . T_POW expr
   37     | expr . '<' expr
   38     | expr . '>' expr
   39     | expr . T_LEQ expr
   40     | expr . T_GEQ expr
   40     | expr T_GEQ expr .  [$end, T_ELSE, T_FI, T_DONE, T_END, ';', ')', ']', ',']
   41     | expr . T_EQ expr
   42     | expr . T_NEQ expr
   45     | expr . '.' T_STRING

    T_SUB  shift, and go to state 82
    T_ADD  shift, and go to state 83
    T_MOD  shift, and go to state 84
    T_DIV  shift, and go to state 85
    T_MUL  shift, and go to state 86
    T_POW  shift, and go to state 87
    '.'    shift, and go to state 88

    '>'    error (nonassociative)
    '<'    error (nonassociative)
    T_NEQ  error (nonassociative)
    T_EQ   error (nonassociative)
    T_GEQ  error (nonassociative)
    T_LEQ  error (nonassociative)

    $default  reduce using rule 40 (expr)

    Conflict between rule 40 and token '>' resolved as an error (%nonassoc '>').
    Conflict between rule 40 and token '<' resolved as an error (%nonassoc '<').
    Conflict between rule 40 and token T_NEQ resolved as an error (%nonassoc T_NEQ).
    Conflict between rule 40 and token T_EQ resolved as an error (%nonassoc T_EQ).
    Conflict between rule 40 and token T_GEQ resolved as an error (%nonassoc T_GEQ).
    Conflict between rule 40 and token T_LEQ resolved as an error (%nonassoc T_LEQ).
    Conflict between rule 40 and token T_SUB resolved as shift (T_GEQ < T_SUB).
    Conflict between rule 40 and token T_ADD resolved as shift (T_GEQ < T_ADD).
    Conflict between rule 40 and token T_MOD resolved as shift (T_GEQ < T_MOD).
    Conflict between rule 40 and token T_DIV resolved as shift (T_GEQ < T_DIV).
    Conflict between rule 40 and token T_MUL resolved as shift (T_GEQ < T_MUL).
    Conflict between rule 40 and token T_POW resolved as shift (T_GEQ < T_POW).
    Conflict between rule 40 and token '.' resolved as shift (T_GEQ < '.').


state 125

   26 expr: expr . T_ADD expr
   27     | expr . T_SUB expr
   28     | expr . T_MUL expr
   29     | expr . T_DIV expr
   30     | expr . T_MOD expr
   31     | expr . T_POW expr
   37     | expr . '<' expr
   38     | expr . '>' expr
   39     | expr . T_LEQ expr
   39     | expr T_LEQ expr .  [$end, T_ELSE, T_FI, T_DONE, T_END, ';', ')', ']', ',']
   40     | expr . T_GEQ expr
   41     | expr . T_EQ expr
   42     | expr . T_NEQ expr
   45     | expr . '.' T_STRING

    T_SUB  shift, and go to state 82
    T_ADD  shift, and go to state 83
    T_MOD  shift, and go to state 84
    T_DIV  shift, and go to state 85
    T_MUL  shift, and go to state 86
    T_POW  shift, and go to state 87
    '.'    shift, and go to state 88

    '>'    error (nonassociative)
    '<'    error (nonassociative)
    T_NEQ  error (nonassociative)
    T_EQ   error (nonassociative)
    T_GEQ  error (nonassociative)
    T_LEQ  error (nonassociative)

    $default  reduce using rule 39 (expr)

    Conflict between rule 39 and token '>' resolved as an error (%nonassoc '>').
    Conflict between rule 39 and token '<' resolved as an error (%nonassoc '<').
    Conflict between rule 39 and token T_NEQ resolved as an error (%nonassoc T_NEQ).
    Conflict between rule 39 and token T_EQ resolved as an error (%nonassoc T_EQ).
    Conflict between rule 39 and token T_GEQ resolved as an error (%nonassoc T_GEQ).
    Conflict between rule 39 and token T_LEQ resolved as an error (%nonassoc T_LEQ).
    Conflict between rule 39 and token T_SUB resolved as shift (T_LEQ < T_SUB).
    Conflict between rule 39 and token T_ADD resolved as shift (T_LEQ < T_ADD).
    Conflict between rule 39 and token T_MOD resolved as shift (T_LEQ < T_MOD).
    Conflict between rule 39 and token T_DIV resolved as shift (T_LEQ < T_DIV).
    Conflict between rule 39 and token T_MUL resolved as shift (T_LEQ < T_MUL).
    Conflict between rule 39 and token T_POW resolved as shift (T_LEQ < T_POW).
    Conflict between rule 39 and token '.' resolved as shift (T_LEQ < '.').


state 126

   26 expr: expr . T_ADD expr
   27     | expr . T_SUB expr
   27     | expr T_SUB expr .  [$end, T_ELSE, T_FI, T_DONE, T_END, '>', '<', T_NEQ, T_EQ, T_GEQ, T_LEQ, T_SUB, T_ADD, ';', ')', ']', ',']
   28     | expr . T_MUL expr
   29     | expr . T_DIV expr
   30     | expr . T_MOD expr
   31     | expr . T_POW expr
   37     | expr . '<' expr
   38     | expr . '>' expr
   39     | expr . T_LEQ expr
   40     | expr . T_GEQ expr
   41     | expr . T_EQ expr
   42     | expr . T_NEQ expr
   45     | expr . '.' T_STRING

    T_MOD  shift, and go to state 84
    T_DIV  shift, and go to state 85
    T_MUL  shift, and go to state 86
    T_POW  shift, and go to state 87
    '.'    shift, and go to state 88

    $default  reduce using rule 27 (expr)

    Conflict between rule 27 and token '>' resolved as reduce ('>' < T_SUB).
    Conflict between rule 27 and token '<' resolved as reduce ('<' < T_SUB).
    Conflict between rule 27 and token T_NEQ resolved as reduce (T_NEQ < T_SUB).
    Conflict between rule 27 and token T_EQ resolved as reduce (T_EQ < T_SUB).
    Conflict between rule 27 and token T_GEQ resolved as reduce (T_GEQ < T_SUB).
    Conflict between rule 27 and token T_LEQ resolved as reduce (T_LEQ < T_SUB).
    Conflict between rule 27 and token T_SUB resolved as reduce (%left T_SUB).
    Conflict between rule 27 and token T_ADD resolved as reduce (%left T_ADD).
    Conflict between rule 27 and token T_MOD resolved as shift (T_SUB < T_MOD).
    Conflict between rule 27 and token T_DIV resolved as shift (T_SUB < T_DIV).
    Conflict between rule 27 and token T_MUL resolved as shift (T_SUB < T_MUL).
    Conflict between rule 27 and token T_POW resolved as shift (T_SUB < T_POW).
    Conflict between rule 27 and token '.' resolved as shift (T_SUB < '.').


state 127

   26 expr: expr . T_ADD expr
   26     | expr T_ADD expr .  [$end, T_ELSE, T_FI, T_DONE, T_END, '>', '<', T_NEQ, T_EQ, T_GEQ, T_LEQ, T_SUB, T_ADD, ';', ')', ']', ',']
   27     | expr . T_SUB expr
   28     | expr . T_MUL expr
   29     | expr . T_DIV expr
   30     | expr . T_MOD expr
   31     | expr . T_POW expr
   37     | expr . '<' expr
   38     | expr . '>' expr
   39     | expr . T_LEQ expr
   40     | expr . T_GEQ expr
   41     | expr . T_EQ expr
   42     | expr . T_NEQ expr
   45     | expr . '.' T_STRING

    T_MOD  shift, and go to state 84
    T_DIV  shift, and go to state 85
    T_MUL  shift, and go to state 86
    T_POW  shift, and go to state 87
    '.'    shift, and go to state 88

    $default  reduce using rule 26 (expr)

    Conflict between rule 26 and token '>' resolved as reduce ('>' < T_ADD).
    Conflict between rule 26 and token '<' resolved as reduce ('<' < T_ADD).
    Conflict between rule 26 and token T_NEQ resolved as reduce (T_NEQ < T_ADD).
    Conflict between rule 26 and token T_EQ resolved as reduce (T_EQ < T_ADD).
    Conflict between rule 26 and token T_GEQ resolved as reduce (T_GEQ < T_ADD).
    Conflict between rule 26 and token T_LEQ resolved as reduce (T_LEQ < T_ADD).
    Conflict between rule 26 and token T_SUB resolved as reduce (%left T_SUB).
    Conflict between rule 26 and token T_ADD resolved as reduce (%left T_ADD).
    Conflict between rule 26 and token T_MOD resolved as shift (T_ADD < T_MOD).
    Conflict between rule 26 and token T_DIV resolved as shift (T_ADD < T_DIV).
    Conflict between rule 26 and token T_MUL resolved as shift (T_ADD < T_MUL).
    Conflict between rule 26 and token T_POW resolved as shift (T_ADD < T_POW).
    Conflict between rule 26 and token '.' resolved as shift (T_ADD < '.').


state 128

   26 expr: expr . T_ADD expr
   27     | expr . T_SUB expr
   28     | expr . T_MUL expr
   29     | expr . T_DIV expr
   30     | expr . T_MOD expr
   30     | expr T_MOD expr .  [$end, T_ELSE, T_FI, T_DONE, T_END, '>', '<', T_NEQ, T_EQ, T_GEQ, T_LEQ, T_SUB, T_ADD, T_MOD, T_DIV, T_MUL, ';', ')', ']', ',']
   31     | expr . T_POW expr
   37     | expr . '<' expr
   38     | expr . '>' expr
   39     | expr . T_LEQ expr
   40     | expr . T_GEQ expr
   41     | expr . T_EQ expr
   42     | expr . T_NEQ expr
   45     | expr . '.' T_STRING

    T_POW  shift, and go to state 87
    '.'    shift, and go to state 88

    $default  reduce using rule 30 (expr)

    Conflict between rule 30 and token '>' resolved as reduce ('>' < T_MOD).
    Conflict between rule 30 and token '<' resolved as reduce ('<' < T_MOD).
    Conflict between rule 30 and token T_NEQ resolved as reduce (T_NEQ < T_MOD).
    Conflict between rule 30 and token T_EQ resolved as reduce (T_EQ < T_MOD).
    Conflict between rule 30 and token T_GEQ resolved as reduce (T_GEQ < T_MOD).
    Conflict between rule 30 and token T_LEQ resolved as reduce (T_LEQ < T_MOD).
    Conflict between rule 30 and token T_SUB resolved as reduce (T_SUB < T_MOD).
    Conflict between rule 30 and token T_ADD resolved as reduce (T_ADD < T_MOD).
    Conflict between rule 30 and token T_MOD resolved as reduce (%left T_MOD).
    Conflict between rule 30 and token T_DIV resolved as reduce (%left T_DIV).
    Conflict between rule 30 and token T_MUL resolved as reduce (%left T_MUL).
    Conflict between rule 30 and token T_POW resolved as shift (T_MOD < T_POW).
    Conflict between rule 30 and token '.' resolved as shift (T_MOD < '.').


state 129

   26 expr: expr . T_ADD expr
   27     | expr . T_SUB expr
   28     | expr . T_MUL expr
   29     | expr . T_DIV expr
   29     | expr T_DIV expr .  [$end, T_ELSE, T_FI, T_DONE, T_END, '>', '<', T_NEQ, T_EQ, T_GEQ, T_LEQ, T_SUB, T_ADD, T_MOD, T_DIV, T_MUL, ';', ')', ']', ',']
   30     | expr . T_MOD expr
   31     | expr . T_POW expr
   37     | expr . '<' expr
   38     | expr . '>' expr
   39     | expr . T_LEQ expr
   40     | expr . T_GEQ expr
   41     | expr . T_EQ expr
   42     | expr . T_NEQ expr
   45     | expr . '.' T_STRING

    T_POW  shift, and go to state 87
    '.'    shift, and go to state 88

    $default  reduce using rule 29 (expr)

    Conflict between rule 29 and token '>' resolved as reduce ('>' < T_DIV).
    Conflict between rule 29 and token '<' resolved as reduce ('<' < T_DIV).
    Conflict between rule 29 and token T_NEQ resolved as reduce (T_NEQ < T_DIV).
    Conflict between rule 29 and token T_EQ resolved as reduce (T_EQ < T_DIV).
    Conflict between rule 29 and token T_GEQ resolved as reduce (T_GEQ < T_DIV).
    Conflict between rule 29 and token T_LEQ resolved as reduce (T_LEQ < T_DIV).
    Conflict between rule 29 and token T_SUB resolved as reduce (T_SUB < T_DIV).
    Conflict between rule 29 and token T_ADD resolved as reduce (T_ADD < T_DIV).
    Conflict between rule 29 and token T_MOD resolved as reduce (%left T_MOD).
    Conflict between rule 29 and token T_DIV resolved as reduce (%left T_DIV).
    Conflict between rule 29 and token T_MUL resolved as reduce (%left T_MUL).
    Conflict between rule 29 and token T_POW resolved as shift (T_DIV < T_POW).
    Conflict between rule 29 and token '.' resolved as shift (T_DIV < '.').


state 130

   26 expr: expr . T_ADD expr
   27     | expr . T_SUB expr
   28     | expr . T_MUL expr
   28     | expr T_MUL expr .  [$end, T_ELSE, T_FI, T_DONE, T_END, '>', '<', T_NEQ, T_EQ, T_GEQ, T_LEQ, T_SUB, T_ADD, T_MOD, T_DIV, T_MUL, ';', ')', ']', ',']
   29     | expr . T_DIV expr
   30     | expr . T_MOD expr
   31     | expr . T_POW expr
   37     | expr . '<' expr
   38     | expr . '>' expr
   39     | expr . T_LEQ expr
   40     | expr . T_GEQ expr
   41     | expr . T_EQ expr
   42     | expr . T_NEQ expr
   45     | expr . '.' T_STRING

    T_POW  shift, and go to state 87
    '.'    shift, and go to state 88

    $default  reduce using rule 28 (expr)

    Conflict between rule 28 and token '>' resolved as reduce ('>' < T_MUL).
    Conflict between rule 28 and token '<' resolved as reduce ('<' < T_MUL).
    Conflict between rule 28 and token T_NEQ resolved as reduce (T_NEQ < T_MUL).
    Conflict between rule 28 and token T_EQ resolved as reduce (T_EQ < T_MUL).
    Conflict between rule 28 and token T_GEQ resolved as reduce (T_GEQ < T_MUL).
    Conflict between rule 28 and token T_LEQ resolved as reduce (T_LEQ < T_MUL).
    Conflict between rule 28 and token T_SUB resolved as reduce (T_SUB < T_MUL).
    Conflict between rule 28 and token T_ADD resolved as reduce (T_ADD < T_MUL).
    Conflict between rule 28 and token T_MOD resolved as reduce (%left T_MOD).
    Conflict between rule 28 and token T_DIV resolved as reduce (%left T_DIV).
    Conflict between rule 28 and token T_MUL resolved as reduce (%left T_MUL).
    Conflict between rule 28 and token T_POW resolved as shift (T_MUL < T_POW).
    Conflict between rule 28 and token '.' resolved as shift (T_MUL < '.').


state 131

   26 expr: expr . T_ADD expr
   27     | expr . T_SUB expr
   28     | expr . T_MUL expr
   29     | expr . T_DIV expr
   30     | expr . T_MOD expr
   31     | expr . T_POW expr
   31     | expr T_POW expr .  [$end, T_ELSE, T_FI, T_DONE, T_END, '>', '<', T_NEQ, T_EQ, T_GEQ, T_LEQ, T_SUB, T_ADD, T_MOD, T_DIV, T_MUL, ';', ')', ']', ',']
   37     | expr . '<' expr
   38     | expr . '>' expr
   39     | expr . T_LEQ expr
   40     | expr . T_GEQ expr
   41     | expr . T_EQ expr
   42     | expr . T_NEQ expr
   45     | expr . '.' T_STRING

    T_POW  shift, and go to state 87
    '.'    shift, and go to state 88

    $default  reduce using rule 31 (expr)

    Conflict between rule 31 and token '>' resolved as reduce ('>' < T_POW).
    Conflict between rule 31 and token '<' resolved as reduce ('<' < T_POW).
    Conflict between rule 31 and token T_NEQ resolved as reduce (T_NEQ < T_POW).
    Conflict between rule 31 and token T_EQ resolved as reduce (T_EQ < T_POW).
    Conflict between rule 31 and token T_GEQ resolved as reduce (T_GEQ < T_POW).
    Conflict between rule 31 and token T_LEQ resolved as reduce (T_LEQ < T_POW).
    Conflict between rule 31 and token T_SUB resolved as reduce (T_SUB < T_POW).
    Conflict between rule 31 and token T_ADD resolved as reduce (T_ADD < T_POW).
    Conflict between rule 31 and token T_MOD resolved as reduce (T_MOD < T_POW).
    Conflict between rule 31 and token T_DIV resolved as reduce (T_DIV < T_POW).
    Conflict between rule 31 and token T_MUL resolved as reduce (T_MUL < T_POW).
    Conflict between rule 31 and token T_POW resolved as shift (%right T_POW).
    Conflict between rule 31 and token '.' resolved as shift (T_POW < '.').


state 132

   45 expr: expr '.' T_STRING .

    $default  reduce using rule 45 (expr)


state 133

   18 strcomp: '(' expr . ')'
   26 expr: expr . T_ADD expr
   27     | expr . T_SUB expr
   28     | expr . T_MUL expr
   29     | expr . T_DIV expr
   30     | expr . T_MOD expr
   31     | expr . T_POW expr
   37     | expr . '<' expr
   38     | expr . '>' expr
   39     | expr . T_LEQ expr
   40     | expr . T_GEQ expr
   41     | expr . T_EQ expr
   42     | expr . T_NEQ expr
   45     | expr . '.' T_STRING

    '>'    shift, and go to state 76
    '<'    shift, and go to state 77
    T_NEQ  shift, and go to state 78
    T_EQ   shift, and go to state 79
    T_GEQ  shift, and go to state 80
    T_LEQ  shift, and go to state 81
    T_SUB  shift, and go to state 82
    T_ADD  shift, and go to state 83
    T_MOD  shift, and go to state 84
    T_DIV  shift, and go to state 85
    T_MUL  shift, and go to state 86
    T_POW  shift, and go to state 87
    '.'    shift, and go to state 88
    ')'    shift, and go to state 152


state 134

   71 nestedcmdexpr: '(' expr ')' .

    $default  reduce using rule 71 (nestedcmdexpr)


state 135

   69 nestedcmdexpr: '"' strlist '"' .

    $default  reduce using rule 69 (nestedcmdexpr)


state 136

   74 nestedsubcmd: nestedcmdexprlist cmdredirin cmdredirout . cmdredirerr cmdredirfd
   81 cmdredirerr: . T_ERR2FILE nestedcmdexpr
   82            | .  [T_ERR2OUT, T_OUT2ERR, '`', '|']

    T_ERR2FILE  shift, and go to state 141

    $default  reduce using rule 82 (cmdredirerr)

    cmdredirerr  go to state 153


state 137

   66 nestedcmdexpr: . T_NUMBER
   67              | . T_STRING
   68              | . T_STRING_SCONST
   69              | . '"' strlist '"'
   70              | . T_VAR
   71              | . '(' expr ')'
   73 nestedcmdexprlist: nestedcmdexprlist . nestedcmdexpr
   75 nestedsubcmd: nestedsubcmd '|' nestedcmdexprlist . cmdredirin cmdredirout cmdredirerr cmdredirfd
   79 cmdredirin: . '<' nestedcmdexpr
   80           | .  [T_ERR2OUT, T_OUT2ERR, T_APPEND, T_ERR2FILE, T_OUT2FILE, '>', '`', '|']

    T_NUMBER         shift, and go to state 40
    T_STRING         shift, and go to state 41
    T_STRING_SCONST  shift, and go to state 42
    T_VAR            shift, and go to state 43
    '<'              shift, and go to state 52
    '('              shift, and go to state 44
    '"'              shift, and go to state 45

    $default  reduce using rule 80 (cmdredirin)

    nestedcmdexpr  go to state 97
    cmdredirin     go to state 154


state 138

   85 cmdredirout: T_APPEND nestedcmdexpr .

    $default  reduce using rule 85 (cmdredirout)


state 139

   84 cmdredirout: T_OUT2FILE nestedcmdexpr .

    $default  reduce using rule 84 (cmdredirout)


state 140

   83 cmdredirout: '>' nestedcmdexpr .

    $default  reduce using rule 83 (cmdredirout)


state 141

   66 nestedcmdexpr: . T_NUMBER
   67              | . T_STRING
   68              | . T_STRING_SCONST
   69              | . '"' strlist '"'
   70              | . T_VAR
   71              | . '(' expr ')'
   81 cmdredirerr: T_ERR2FILE . nestedcmdexpr

    T_NUMBER         shift, and go to state 40
    T_STRING         shift, and go to state 41
    T_STRING_SCONST  shift, and go to state 42
    T_VAR            shift, and go to state 43
    '('              shift, and go to state 44
    '"'              shift, and go to state 45

    nestedcmdexpr  go to state 155


state 142

   64 subcmd: cmdexprlist cmdredirin cmdredirout cmdredirerr . cmdredirfd
   76 cmdredirfd: . T_ERR2OUT
   77           | . T_OUT2ERR
   78           | .  [$end, T_ELSE, T_FI, T_DONE, T_END, ';', '&', '|']

    T_ERR2OUT  shift, and go to state 156
    T_OUT2ERR  shift, and go to state 157

    $default  reduce using rule 78 (cmdredirfd)

    cmdredirfd  go to state 158


state 143

   65 subcmd: subcmd '|' cmdexprlist cmdredirin . cmdredirout cmdredirerr cmdredirfd
   83 cmdredirout: . '>' nestedcmdexpr
   84            | . T_OUT2FILE nestedcmdexpr
   85            | . T_APPEND nestedcmdexpr
   86            | .  [$end, T_ELSE, T_FI, T_DONE, T_END, T_ERR2OUT, T_OUT2ERR, T_ERR2FILE, ';', '&', '|']

    T_APPEND    shift, and go to state 103
    T_OUT2FILE  shift, and go to state 104
    '>'         shift, and go to state 105

    $default  reduce using rule 86 (cmdredirout)

    cmdredirout  go to state 159


state 144

    2 stmtlist: .  [T_ELSE, T_FI]
    3         | . stmtlistr
    4         | . stmtlistr ';'
    5 stmtlistr: . stmt
    6          | . stmtlistr ';' stmt
    7 stmt: . T_FUNCTION T_STRING T_BEGIN stmtlist T_END
    8     | . T_IF '(' expr ')' T_THEN stmtlist T_FI
    8     | T_IF '(' expr ')' T_THEN . stmtlist T_FI
    9     | . T_IF '(' expr ')' T_THEN stmtlist T_ELSE stmtlist T_FI
    9     | T_IF '(' expr ')' T_THEN . stmtlist T_ELSE stmtlist T_FI
   10     | . T_FOR '(' expr ';' expr ';' expr ')' T_DO stmtlist T_DONE
   11     | . T_WHILE '(' expr ')' T_DO stmtlist T_DONE
   12     | . assignstmt
   13     | . cmd
   50 assignstmt: . T_VAR T_ASSIGN expr
   51           | . T_VAR '[' ']' T_ASSIGN expr
   52           | . T_VAR '[' expr ']' T_ASSIGN expr
   53 cmdexpr: . T_NUMBER
   54        | . T_STRING
   55        | . T_STRING_SCONST
   56        | . '"' strlist '"'
   57        | . T_VAR
   58        | . '`' nestedsubcmd '`'
   59        | . '(' expr ')'
   60 cmdexprlist: . cmdexpr
   61            | . cmdexprlist cmdexpr
   62 cmd: . subcmd
   63    | . subcmd '&'
   64 subcmd: . cmdexprlist cmdredirin cmdredirout cmdredirerr cmdredirfd
   65       | . subcmd '|' cmdexprlist cmdredirin cmdredirout cmdredirerr cmdredirfd

    T_IF             shift, and go to state 1
    T_FOR            shift, and go to state 2
    T_WHILE          shift, and go to state 3
    T_FUNCTION       shift, and go to state 4
    T_NUMBER         shift, and go to state 5
    T_STRING         shift, and go to state 6
    T_STRING_SCONST  shift, and go to state 7
    T_VAR            shift, and go to state 8
    '('              shift, and go to state 9
    '"'              shift, and go to state 10
    '`'              shift, and go to state 11

    $default  reduce using rule 2 (stmtlist)

    stmtlist     go to state 160
    stmtlistr    go to state 14
    stmt         go to state 15
    assignstmt   go to state 16
    cmdexpr      go to state 17
    cmdexprlist  go to state 18
    cmd          go to state 19
    subcmd       go to state 20


state 145

   10 stmt: T_FOR '(' expr ';' expr . ';' expr ')' T_DO stmtlist T_DONE
   26 expr: expr . T_ADD expr
   27     | expr . T_SUB expr
   28     | expr . T_MUL expr
   29     | expr . T_DIV expr
   30     | expr . T_MOD expr
   31     | expr . T_POW expr
   37     | expr . '<' expr
   38     | expr . '>' expr
   39     | expr . T_LEQ expr
   40     | expr . T_GEQ expr
   41     | expr . T_EQ expr
   42     | expr . T_NEQ expr
   45     | expr . '.' T_STRING

    '>'    shift, and go to state 76
    '<'    shift, and go to state 77
    T_NEQ  shift, and go to state 78
    T_EQ   shift, and go to state 79
    T_GEQ  shift, and go to state 80
    T_LEQ  shift, and go to state 81
    T_SUB  shift, and go to state 82
    T_ADD  shift, and go to state 83
    T_MOD  shift, and go to state 84
    T_DIV  shift, and go to state 85
    T_MUL  shift, and go to state 86
    T_POW  shift, and go to state 87
    '.'    shift, and go to state 88
    ';'    shift, and go to state 161


state 146

    2 stmtlist: .  [T_DONE]
    3         | . stmtlistr
    4         | . stmtlistr ';'
    5 stmtlistr: . stmt
    6          | . stmtlistr ';' stmt
    7 stmt: . T_FUNCTION T_STRING T_BEGIN stmtlist T_END
    8     | . T_IF '(' expr ')' T_THEN stmtlist T_FI
    9     | . T_IF '(' expr ')' T_THEN stmtlist T_ELSE stmtlist T_FI
   10     | . T_FOR '(' expr ';' expr ';' expr ')' T_DO stmtlist T_DONE
   11     | . T_WHILE '(' expr ')' T_DO stmtlist T_DONE
   11     | T_WHILE '(' expr ')' T_DO . stmtlist T_DONE
   12     | . assignstmt
   13     | . cmd
   50 assignstmt: . T_VAR T_ASSIGN expr
   51           | . T_VAR '[' ']' T_ASSIGN expr
   52           | . T_VAR '[' expr ']' T_ASSIGN expr
   53 cmdexpr: . T_NUMBER
   54        | . T_STRING
   55        | . T_STRING_SCONST
   56        | . '"' strlist '"'
   57        | . T_VAR
   58        | . '`' nestedsubcmd '`'
   59        | . '(' expr ')'
   60 cmdexprlist: . cmdexpr
   61            | . cmdexprlist cmdexpr
   62 cmd: . subcmd
   63    | . subcmd '&'
   64 subcmd: . cmdexprlist cmdredirin cmdredirout cmdredirerr cmdredirfd
   65       | . subcmd '|' cmdexprlist cmdredirin cmdredirout cmdredirerr cmdredirfd

    T_IF             shift, and go to state 1
    T_FOR            shift, and go to state 2
    T_WHILE          shift, and go to state 3
    T_FUNCTION       shift, and go to state 4
    T_NUMBER         shift, and go to state 5
    T_STRING         shift, and go to state 6
    T_STRING_SCONST  shift, and go to state 7
    T_VAR            shift, and go to state 8
    '('              shift, and go to state 9
    '"'              shift, and go to state 10
    '`'              shift, and go to state 11

    $default  reduce using rule 2 (stmtlist)

    stmtlist     go to state 162
    stmtlistr    go to state 14
    stmt         go to state 15
    assignstmt   go to state 16
    cmdexpr      go to state 17
    cmdexprlist  go to state 18
    cmd          go to state 19
    subcmd       go to state 20


state 147

    7 stmt: T_FUNCTION T_STRING T_BEGIN stmtlist T_END .

    $default  reduce using rule 7 (stmt)


state 148

   26 expr: expr . T_ADD expr
   27     | expr . T_SUB expr
   28     | expr . T_MUL expr
   29     | expr . T_DIV expr
   30     | expr . T_MOD expr
   31     | expr . T_POW expr
   37     | expr . '<' expr
   38     | expr . '>' expr
   39     | expr . T_LEQ expr
   40     | expr . T_GEQ expr
   41     | expr . T_EQ expr
   42     | expr . T_NEQ expr
   45     | expr . '.' T_STRING
   51 assignstmt: T_VAR '[' ']' T_ASSIGN expr .  [$end, T_ELSE, T_FI, T_DONE, T_END, ';', ')', ']', ',']

    T_SUB  shift, and go to state 82
    T_ADD  shift, and go to state 83
    T_MOD  shift, and go to state 84
    T_DIV  shift, and go to state 85
    T_MUL  shift, and go to state 86
    T_POW  shift, and go to state 87
    '.'    shift, and go to state 88

    '>'    error (nonassociative)
    '<'    error (nonassociative)
    T_NEQ  error (nonassociative)
    T_EQ   error (nonassociative)
    T_GEQ  error (nonassociative)
    T_LEQ  error (nonassociative)

    $default  reduce using rule 51 (assignstmt)

    Conflict between rule 51 and token '>' resolved as an error (%nonassoc '>').
    Conflict between rule 51 and token '<' resolved as an error (%nonassoc '<').
    Conflict between rule 51 and token T_NEQ resolved as an error (%nonassoc T_NEQ).
    Conflict between rule 51 and token T_EQ resolved as an error (%nonassoc T_EQ).
    Conflict between rule 51 and token T_GEQ resolved as an error (%nonassoc T_GEQ).
    Conflict between rule 51 and token T_LEQ resolved as an error (%nonassoc T_LEQ).
    Conflict between rule 51 and token T_SUB resolved as shift (T_ASSIGN < T_SUB).
    Conflict between rule 51 and token T_ADD resolved as shift (T_ASSIGN < T_ADD).
    Conflict between rule 51 and token T_MOD resolved as shift (T_ASSIGN < T_MOD).
    Conflict between rule 51 and token T_DIV resolved as shift (T_ASSIGN < T_DIV).
    Conflict between rule 51 and token T_MUL resolved as shift (T_ASSIGN < T_MUL).
    Conflict between rule 51 and token T_POW resolved as shift (T_ASSIGN < T_POW).
    Conflict between rule 51 and token '.' resolved as shift (T_ASSIGN < '.').


state 149

   19 expr: . T_NUMBER
   20     | . T_STRING_SCONST
   21     | . '"' strlist '"'
   22     | . T_VAR
   23     | . T_VAR '[' expr ']'
   24     | . '[' exprlist ']'
   25     | . assignstmt
   26     | . expr T_ADD expr
   27     | . expr T_SUB expr
   28     | . expr T_MUL expr
   29     | . expr T_DIV expr
   30     | . expr T_MOD expr
   31     | . expr T_POW expr
   32     | . T_SUB expr
   33     | . T_INC T_VAR
   34     | . T_DEC T_VAR
   35     | . T_VAR T_INC
   36     | . T_VAR T_DEC
   37     | . expr '<' expr
   38     | . expr '>' expr
   39     | . expr T_LEQ expr
   40     | . expr T_GEQ expr
   41     | . expr T_EQ expr
   42     | . expr T_NEQ expr
   43     | . '`' nestedsubcmd '`'
   44     | . '(' expr ')'
   45     | . expr '.' T_STRING
   50 assignstmt: . T_VAR T_ASSIGN expr
   51           | . T_VAR '[' ']' T_ASSIGN expr
   52           | . T_VAR '[' expr ']' T_ASSIGN expr
   52           | T_VAR '[' expr ']' T_ASSIGN . expr

    T_NUMBER         shift, and go to state 27
    T_STRING_SCONST  shift, and go to state 28
    T_VAR            shift, and go to state 29
    T_SUB            shift, and go to state 30
    T_DEC            shift, and go to state 31
    T_INC            shift, and go to state 32
    '('              shift, and go to state 33
    '"'              shift, and go to state 34
    '['              shift, and go to state 35
    '`'              shift, and go to state 36

    expr        go to state 163
    assignstmt  go to state 38


state 150

   23 expr: T_VAR '[' expr ']' .  [$end, T_ELSE, T_FI, T_DONE, T_END, '>', '<', T_NEQ, T_EQ, T_GEQ, T_LEQ, T_SUB, T_ADD, T_MOD, T_DIV, T_MUL, T_POW, '.', ';', ')', ']', ',']
   52 assignstmt: T_VAR '[' expr ']' . T_ASSIGN expr

    T_ASSIGN  shift, and go to state 149

    $default  reduce using rule 23 (expr)


state 151

   26 expr: expr . T_ADD expr
   27     | expr . T_SUB expr
   28     | expr . T_MUL expr
   29     | expr . T_DIV expr
   30     | expr . T_MOD expr
   31     | expr . T_POW expr
   37     | expr . '<' expr
   38     | expr . '>' expr
   39     | expr . T_LEQ expr
   40     | expr . T_GEQ expr
   41     | expr . T_EQ expr
   42     | expr . T_NEQ expr
   45     | expr . '.' T_STRING
   48 neexprlist: neexprlist ',' expr .  [']', ',']

    '>'    shift, and go to state 76
    '<'    shift, and go to state 77
    T_NEQ  shift, and go to state 78
    T_EQ   shift, and go to state 79
    T_GEQ  shift, and go to state 80
    T_LEQ  shift, and go to state 81
    T_SUB  shift, and go to state 82
    T_ADD  shift, and go to state 83
    T_MOD  shift, and go to state 84
    T_DIV  shift, and go to state 85
    T_MUL  shift, and go to state 86
    T_POW  shift, and go to state 87
    '.'    shift, and go to state 88

    $default  reduce using rule 48 (neexprlist)


state 152

   18 strcomp: '(' expr ')' .

    $default  reduce using rule 18 (strcomp)


state 153

   74 nestedsubcmd: nestedcmdexprlist cmdredirin cmdredirout cmdredirerr . cmdredirfd
   76 cmdredirfd: . T_ERR2OUT
   77           | . T_OUT2ERR
   78           | .  ['`', '|']

    T_ERR2OUT  shift, and go to state 156
    T_OUT2ERR  shift, and go to state 157

    $default  reduce using rule 78 (cmdredirfd)

    cmdredirfd  go to state 164


state 154

   75 nestedsubcmd: nestedsubcmd '|' nestedcmdexprlist cmdredirin . cmdredirout cmdredirerr cmdredirfd
   83 cmdredirout: . '>' nestedcmdexpr
   84            | . T_OUT2FILE nestedcmdexpr
   85            | . T_APPEND nestedcmdexpr
   86            | .  [T_ERR2OUT, T_OUT2ERR, T_ERR2FILE, '`', '|']

    T_APPEND    shift, and go to state 103
    T_OUT2FILE  shift, and go to state 104
    '>'         shift, and go to state 105

    $default  reduce using rule 86 (cmdredirout)

    cmdredirout  go to state 165


state 155

   81 cmdredirerr: T_ERR2FILE nestedcmdexpr .

    $default  reduce using rule 81 (cmdredirerr)


state 156

   76 cmdredirfd: T_ERR2OUT .

    $default  reduce using rule 76 (cmdredirfd)


state 157

   77 cmdredirfd: T_OUT2ERR .

    $default  reduce using rule 77 (cmdredirfd)


state 158

   64 subcmd: cmdexprlist cmdredirin cmdredirout cmdredirerr cmdredirfd .

    $default  reduce using rule 64 (subcmd)


state 159

   65 subcmd: subcmd '|' cmdexprlist cmdredirin cmdredirout . cmdredirerr cmdredirfd
   81 cmdredirerr: . T_ERR2FILE nestedcmdexpr
   82            | .  [$end, T_ELSE, T_FI, T_DONE, T_END, T_ERR2OUT, T_OUT2ERR, ';', '&', '|']

    T_ERR2FILE  shift, and go to state 141

    $default  reduce using rule 82 (cmdredirerr)

    cmdredirerr  go to state 166


state 160

    8 stmt: T_IF '(' expr ')' T_THEN stmtlist . T_FI
    9     | T_IF '(' expr ')' T_THEN stmtlist . T_ELSE stmtlist T_FI

    T_ELSE  shift, and go to state 167
    T_FI    shift, and go to state 168


state 161

   10 stmt: T_FOR '(' expr ';' expr ';' . expr ')' T_DO stmtlist T_DONE
   19 expr: . T_NUMBER
   20     | . T_STRING_SCONST
   21     | . '"' strlist '"'
   22     | . T_VAR
   23     | . T_VAR '[' expr ']'
   24     | . '[' exprlist ']'
   25     | . assignstmt
   26     | . expr T_ADD expr
   27     | . expr T_SUB expr
   28     | . expr T_MUL expr
   29     | . expr T_DIV expr
   30     | . expr T_MOD expr
   31     | . expr T_POW expr
   32     | . T_SUB expr
   33     | . T_INC T_VAR
   34     | . T_DEC T_VAR
   35     | . T_VAR T_INC
   36     | . T_VAR T_DEC
   37     | . expr '<' expr
   38     | . expr '>' expr
   39     | . expr T_LEQ expr
   40     | . expr T_GEQ expr
   41     | . expr T_EQ expr
   42     | . expr T_NEQ expr
   43     | . '`' nestedsubcmd '`'
   44     | . '(' expr ')'
   45     | . expr '.' T_STRING
   50 assignstmt: . T_VAR T_ASSIGN expr
   51           | . T_VAR '[' ']' T_ASSIGN expr
   52           | . T_VAR '[' expr ']' T_ASSIGN expr

    T_NUMBER         shift, and go to state 27
    T_STRING_SCONST  shift, and go to state 28
    T_VAR            shift, and go to state 29
    T_SUB            shift, and go to state 30
    T_DEC            shift, and go to state 31
    T_INC            shift, and go to state 32
    '('              shift, and go to state 33
    '"'              shift, and go to state 34
    '['              shift, and go to state 35
    '`'              shift, and go to state 36

    expr        go to state 169
    assignstmt  go to state 38


state 162

   11 stmt: T_WHILE '(' expr ')' T_DO stmtlist . T_DONE

    T_DONE  shift, and go to state 170


state 163

   26 expr: expr . T_ADD expr
   27     | expr . T_SUB expr
   28     | expr . T_MUL expr
   29     | expr . T_DIV expr
   30     | expr . T_MOD expr
   31     | expr . T_POW expr
   37     | expr . '<' expr
   38     | expr . '>' expr
   39     | expr . T_LEQ expr
   40     | expr . T_GEQ expr
   41     | expr . T_EQ expr
   42     | expr . T_NEQ expr
   45     | expr . '.' T_STRING
   52 assignstmt: T_VAR '[' expr ']' T_ASSIGN expr .  [$end, T_ELSE, T_FI, T_DONE, T_END, ';', ')', ']', ',']

    T_SUB  shift, and go to state 82
    T_ADD  shift, and go to state 83
    T_MOD  shift, and go to state 84
    T_DIV  shift, and go to state 85
    T_MUL  shift, and go to state 86
    T_POW  shift, and go to state 87
    '.'    shift, and go to state 88

    '>'    error (nonassociative)
    '<'    error (nonassociative)
    T_NEQ  error (nonassociative)
    T_EQ   error (nonassociative)
    T_GEQ  error (nonassociative)
    T_LEQ  error (nonassociative)

    $default  reduce using rule 52 (assignstmt)

    Conflict between rule 52 and token '>' resolved as an error (%nonassoc '>').
    Conflict between rule 52 and token '<' resolved as an error (%nonassoc '<').
    Conflict between rule 52 and token T_NEQ resolved as an error (%nonassoc T_NEQ).
    Conflict between rule 52 and token T_EQ resolved as an error (%nonassoc T_EQ).
    Conflict between rule 52 and token T_GEQ resolved as an error (%nonassoc T_GEQ).
    Conflict between rule 52 and token T_LEQ resolved as an error (%nonassoc T_LEQ).
    Conflict between rule 52 and token T_SUB resolved as shift (T_ASSIGN < T_SUB).
    Conflict between rule 52 and token T_ADD resolved as shift (T_ASSIGN < T_ADD).
    Conflict between rule 52 and token T_MOD resolved as shift (T_ASSIGN < T_MOD).
    Conflict between rule 52 and token T_DIV resolved as shift (T_ASSIGN < T_DIV).
    Conflict between rule 52 and token T_MUL resolved as shift (T_ASSIGN < T_MUL).
    Conflict between rule 52 and token T_POW resolved as shift (T_ASSIGN < T_POW).
    Conflict between rule 52 and token '.' resolved as shift (T_ASSIGN < '.').


state 164

   74 nestedsubcmd: nestedcmdexprlist cmdredirin cmdredirout cmdredirerr cmdredirfd .

    $default  reduce using rule 74 (nestedsubcmd)


state 165

   75 nestedsubcmd: nestedsubcmd '|' nestedcmdexprlist cmdredirin cmdredirout . cmdredirerr cmdredirfd
   81 cmdredirerr: . T_ERR2FILE nestedcmdexpr
   82            | .  [T_ERR2OUT, T_OUT2ERR, '`', '|']

    T_ERR2FILE  shift, and go to state 141

    $default  reduce using rule 82 (cmdredirerr)

    cmdredirerr  go to state 171


state 166

   65 subcmd: subcmd '|' cmdexprlist cmdredirin cmdredirout cmdredirerr . cmdredirfd
   76 cmdredirfd: . T_ERR2OUT
   77           | . T_OUT2ERR
   78           | .  [$end, T_ELSE, T_FI, T_DONE, T_END, ';', '&', '|']

    T_ERR2OUT  shift, and go to state 156
    T_OUT2ERR  shift, and go to state 157

    $default  reduce using rule 78 (cmdredirfd)

    cmdredirfd  go to state 172


state 167

    2 stmtlist: .  [T_FI]
    3         | . stmtlistr
    4         | . stmtlistr ';'
    5 stmtlistr: . stmt
    6          | . stmtlistr ';' stmt
    7 stmt: . T_FUNCTION T_STRING T_BEGIN stmtlist T_END
    8     | . T_IF '(' expr ')' T_THEN stmtlist T_FI
    9     | . T_IF '(' expr ')' T_THEN stmtlist T_ELSE stmtlist T_FI
    9     | T_IF '(' expr ')' T_THEN stmtlist T_ELSE . stmtlist T_FI
   10     | . T_FOR '(' expr ';' expr ';' expr ')' T_DO stmtlist T_DONE
   11     | . T_WHILE '(' expr ')' T_DO stmtlist T_DONE
   12     | . assignstmt
   13     | . cmd
   50 assignstmt: . T_VAR T_ASSIGN expr
   51           | . T_VAR '[' ']' T_ASSIGN expr
   52           | . T_VAR '[' expr ']' T_ASSIGN expr
   53 cmdexpr: . T_NUMBER
   54        | . T_STRING
   55        | . T_STRING_SCONST
   56        | . '"' strlist '"'
   57        | . T_VAR
   58        | . '`' nestedsubcmd '`'
   59        | . '(' expr ')'
   60 cmdexprlist: . cmdexpr
   61            | . cmdexprlist cmdexpr
   62 cmd: . subcmd
   63    | . subcmd '&'
   64 subcmd: . cmdexprlist cmdredirin cmdredirout cmdredirerr cmdredirfd
   65       | . subcmd '|' cmdexprlist cmdredirin cmdredirout cmdredirerr cmdredirfd

    T_IF             shift, and go to state 1
    T_FOR            shift, and go to state 2
    T_WHILE          shift, and go to state 3
    T_FUNCTION       shift, and go to state 4
    T_NUMBER         shift, and go to state 5
    T_STRING         shift, and go to state 6
    T_STRING_SCONST  shift, and go to state 7
    T_VAR            shift, and go to state 8
    '('              shift, and go to state 9
    '"'              shift, and go to state 10
    '`'              shift, and go to state 11

    $default  reduce using rule 2 (stmtlist)

    stmtlist     go to state 173
    stmtlistr    go to state 14
    stmt         go to state 15
    assignstmt   go to state 16
    cmdexpr      go to state 17
    cmdexprlist  go to state 18
    cmd          go to state 19
    subcmd       go to state 20


state 168

    8 stmt: T_IF '(' expr ')' T_THEN stmtlist T_FI .

    $default  reduce using rule 8 (stmt)


state 169

   10 stmt: T_FOR '(' expr ';' expr ';' expr . ')' T_DO stmtlist T_DONE
   26 expr: expr . T_ADD expr
   27     | expr . T_SUB expr
   28     | expr . T_MUL expr
   29     | expr . T_DIV expr
   30     | expr . T_MOD expr
   31     | expr . T_POW expr
   37     | expr . '<' expr
   38     | expr . '>' expr
   39     | expr . T_LEQ expr
   40     | expr . T_GEQ expr
   41     | expr . T_EQ expr
   42     | expr . T_NEQ expr
   45     | expr . '.' T_STRING

    '>'    shift, and go to state 76
    '<'    shift, and go to state 77
    T_NEQ  shift, and go to state 78
    T_EQ   shift, and go to state 79
    T_GEQ  shift, and go to state 80
    T_LEQ  shift, and go to state 81
    T_SUB  shift, and go to state 82
    T_ADD  shift, and go to state 83
    T_MOD  shift, and go to state 84
    T_DIV  shift, and go to state 85
    T_MUL  shift, and go to state 86
    T_POW  shift, and go to state 87
    '.'    shift, and go to state 88
    ')'    shift, and go to state 174


state 170

   11 stmt: T_WHILE '(' expr ')' T_DO stmtlist T_DONE .

    $default  reduce using rule 11 (stmt)


state 171

   75 nestedsubcmd: nestedsubcmd '|' nestedcmdexprlist cmdredirin cmdredirout cmdredirerr . cmdredirfd
   76 cmdredirfd: . T_ERR2OUT
   77           | . T_OUT2ERR
   78           | .  ['`', '|']

    T_ERR2OUT  shift, and go to state 156
    T_OUT2ERR  shift, and go to state 157

    $default  reduce using rule 78 (cmdredirfd)

    cmdredirfd  go to state 175


state 172

   65 subcmd: subcmd '|' cmdexprlist cmdredirin cmdredirout cmdredirerr cmdredirfd .

    $default  reduce using rule 65 (subcmd)


state 173

    9 stmt: T_IF '(' expr ')' T_THEN stmtlist T_ELSE stmtlist . T_FI

    T_FI  shift, and go to state 176


state 174

   10 stmt: T_FOR '(' expr ';' expr ';' expr ')' . T_DO stmtlist T_DONE

    T_DO  shift, and go to state 177


state 175

   75 nestedsubcmd: nestedsubcmd '|' nestedcmdexprlist cmdredirin cmdredirout cmdredirerr cmdredirfd .

    $default  reduce using rule 75 (nestedsubcmd)


state 176

    9 stmt: T_IF '(' expr ')' T_THEN stmtlist T_ELSE stmtlist T_FI .

    $default  reduce using rule 9 (stmt)


state 177

    2 stmtlist: .  [T_DONE]
    3         | . stmtlistr
    4         | . stmtlistr ';'
    5 stmtlistr: . stmt
    6          | . stmtlistr ';' stmt
    7 stmt: . T_FUNCTION T_STRING T_BEGIN stmtlist T_END
    8     | . T_IF '(' expr ')' T_THEN stmtlist T_FI
    9     | . T_IF '(' expr ')' T_THEN stmtlist T_ELSE stmtlist T_FI
   10     | . T_FOR '(' expr ';' expr ';' expr ')' T_DO stmtlist T_DONE
   10     | T_FOR '(' expr ';' expr ';' expr ')' T_DO . stmtlist T_DONE
   11     | . T_WHILE '(' expr ')' T_DO stmtlist T_DONE
   12     | . assignstmt
   13     | . cmd
   50 assignstmt: . T_VAR T_ASSIGN expr
   51           | . T_VAR '[' ']' T_ASSIGN expr
   52           | . T_VAR '[' expr ']' T_ASSIGN expr
   53 cmdexpr: . T_NUMBER
   54        | . T_STRING
   55        | . T_STRING_SCONST
   56        | . '"' strlist '"'
   57        | . T_VAR
   58        | . '`' nestedsubcmd '`'
   59        | . '(' expr ')'
   60 cmdexprlist: . cmdexpr
   61            | . cmdexprlist cmdexpr
   62 cmd: . subcmd
   63    | . subcmd '&'
   64 subcmd: . cmdexprlist cmdredirin cmdredirout cmdredirerr cmdredirfd
   65       | . subcmd '|' cmdexprlist cmdredirin cmdredirout cmdredirerr cmdredirfd

    T_IF             shift, and go to state 1
    T_FOR            shift, and go to state 2
    T_WHILE          shift, and go to state 3
    T_FUNCTION       shift, and go to state 4
    T_NUMBER         shift, and go to state 5
    T_STRING         shift, and go to state 6
    T_STRING_SCONST  shift, and go to state 7
    T_VAR            shift, and go to state 8
    '('              shift, and go to state 9
    '"'              shift, and go to state 10
    '`'              shift, and go to state 11

    $default  reduce using rule 2 (stmtlist)

    stmtlist     go to state 178
    stmtlistr    go to state 14
    stmt         go to state 15
    assignstmt   go to state 16
    cmdexpr      go to state 17
    cmdexprlist  go to state 18
    cmd          go to state 19
    subcmd       go to state 20


state 178

   10 stmt: T_FOR '(' expr ';' expr ';' expr ')' T_DO stmtlist . T_DONE

    T_DONE  shift, and go to state 179


state 179

   10 stmt: T_FOR '(' expr ';' expr ';' expr ')' T_DO stmtlist T_DONE .

    $default  reduce using rule 10 (stmt)
