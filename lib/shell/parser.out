Grammar

    0 $accept: start $end

    1 start: stmtlist

    2 stmtlist: /* empty */
    3         | stmtlistr
    4         | stmtlistr ';'

    5 stmtlistr: stmt
    6          | stmtlistr ';' stmt

    7 stmt: T_FUNCTION T_STRING T_BEGIN stmtlist T_END
    8     | T_IF '(' expr ')' T_THEN stmtlist T_FI
    9     | T_IF '(' expr ')' T_THEN stmtlist T_ELSE stmtlist T_FI
   10     | T_FOR '(' expr ';' expr ';' expr ')' T_DO stmtlist T_DONE
   11     | T_WHILE '(' expr ')' T_DO stmtlist T_DONE
   12     | assignstmt
   13     | cmd

   14 strlist: strlist strcomp
   15        | /* empty */

   16 strcomp: T_STRING
   17        | T_VAR
   18        | '(' expr ')'

   19 expr: T_NUMBER
   20     | T_STRING_SCONST
   21     | '"' strlist '"'
   22     | T_VAR
   23     | assignstmt
   24     | expr T_ADD expr
   25     | expr T_SUB expr
   26     | expr T_MUL expr
   27     | expr T_DIV expr
   28     | expr T_MOD expr
   29     | expr T_POW expr
   30     | T_SUB expr
   31     | T_INC T_VAR
   32     | T_DEC T_VAR
   33     | T_VAR T_INC
   34     | T_VAR T_DEC
   35     | expr '<' expr
   36     | expr '>' expr
   37     | expr T_LEQ expr
   38     | expr T_GEQ expr
   39     | expr T_EQ expr
   40     | expr T_NEQ expr
   41     | '`' nestedsubcmd '`'
   42     | '(' expr ')'

   43 assignstmt: T_VAR T_ASSIGN expr

   44 cmdexpr: T_NUMBER
   45        | T_STRING
   46        | T_STRING_SCONST
   47        | '"' strlist '"'
   48        | T_VAR
   49        | '`' nestedsubcmd '`'
   50        | '(' expr ')'

   51 cmdexprlist: cmdexpr
   52            | cmdexprlist cmdexpr

   53 cmd: subcmd
   54    | subcmd '&'

   55 subcmd: cmdexprlist cmdredirin cmdredirout cmdredirerr cmdredirfd
   56       | subcmd '|' cmdexprlist cmdredirin cmdredirout cmdredirerr cmdredirfd

   57 nestedcmdexpr: T_NUMBER
   58              | T_STRING
   59              | T_STRING_SCONST
   60              | '"' strlist '"'
   61              | T_VAR
   62              | '(' expr ')'

   63 nestedcmdexprlist: nestedcmdexpr
   64                  | nestedcmdexprlist nestedcmdexpr

   65 nestedsubcmd: nestedcmdexprlist cmdredirin cmdredirout cmdredirerr cmdredirfd
   66             | nestedsubcmd '|' nestedcmdexprlist cmdredirin cmdredirout cmdredirerr cmdredirfd

   67 cmdredirfd: T_ERR2OUT
   68           | T_OUT2ERR
   69           | /* empty */

   70 cmdredirin: '<' nestedcmdexpr
   71           | /* empty */

   72 cmdredirerr: T_ERR2FILE nestedcmdexpr
   73            | /* empty */

   74 cmdredirout: '>' nestedcmdexpr
   75            | T_OUT2FILE nestedcmdexpr
   76            | T_APPEND nestedcmdexpr
   77            | /* empty */


Terminals, with rules where they appear

$end (0) 0
'"' (34) 21 47 60
'&' (38) 54
'(' (40) 8 9 10 11 18 42 50 62
')' (41) 8 9 10 11 18 42 50 62
';' (59) 4 6 10
'<' (60) 35 70
'>' (62) 36 74
'`' (96) 41 49
'|' (124) 56 66
error (256)
T_IF (258) 8 9
T_THEN (259) 8 9
T_ELSE (260) 9
T_FI (261) 8 9
T_FOR (262) 10
T_DO (263) 10 11
T_DONE (264) 10 11
T_WHILE (265) 11
T_FUNCTION (266) 7
T_BEGIN (267) 7
T_END (268) 7
T_NUMBER (269) 19 44 57
T_STRING (270) 7 16 45 58
T_STRING_SCONST (271) 20 46 59
T_VAR (272) 17 22 31 32 33 34 43 48 61
T_ERR2OUT (273) 67
T_OUT2ERR (274) 68
T_APPEND (275) 76
T_ERR2FILE (276) 72
T_OUT2FILE (277) 75
T_ASSIGN (278) 43
T_NEQ (279) 40
T_EQ (280) 39
T_GEQ (281) 38
T_LEQ (282) 37
T_SUB (283) 25 30
T_ADD (284) 24
T_MOD (285) 28
T_DIV (286) 27
T_MUL (287) 26
T_NEG (288)
T_DEC (289) 32 34
T_INC (290) 31 33
T_POW (291) 29


Nonterminals, with rules where they appear

$accept (46)
    on left: 0
start (47)
    on left: 1, on right: 0
stmtlist (48)
    on left: 2 3 4, on right: 1 7 8 9 10 11
stmtlistr (49)
    on left: 5 6, on right: 3 4 6
stmt (50)
    on left: 7 8 9 10 11 12 13, on right: 5 6
strlist (51)
    on left: 14 15, on right: 14 21 47 60
strcomp (52)
    on left: 16 17 18, on right: 14
expr (53)
    on left: 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36
    37 38 39 40 41 42, on right: 8 9 10 11 18 24 25 26 27 28 29 30
    35 36 37 38 39 40 42 43 50 62
assignstmt (54)
    on left: 43, on right: 12 23
cmdexpr (55)
    on left: 44 45 46 47 48 49 50, on right: 51 52
cmdexprlist (56)
    on left: 51 52, on right: 52 55 56
cmd (57)
    on left: 53 54, on right: 13
subcmd (58)
    on left: 55 56, on right: 53 54 56
nestedcmdexpr (59)
    on left: 57 58 59 60 61 62, on right: 63 64 70 72 74 75 76
nestedcmdexprlist (60)
    on left: 63 64, on right: 64 65 66
nestedsubcmd (61)
    on left: 65 66, on right: 41 49 66
cmdredirfd (62)
    on left: 67 68 69, on right: 55 56 65 66
cmdredirin (63)
    on left: 70 71, on right: 55 56 65 66
cmdredirerr (64)
    on left: 72 73, on right: 55 56 65 66
cmdredirout (65)
    on left: 74 75 76 77, on right: 55 56 65 66


state 0

    0 $accept: . start $end
    1 start: . stmtlist
    2 stmtlist: .  [$end]
    3         | . stmtlistr
    4         | . stmtlistr ';'
    5 stmtlistr: . stmt
    6          | . stmtlistr ';' stmt
    7 stmt: . T_FUNCTION T_STRING T_BEGIN stmtlist T_END
    8     | . T_IF '(' expr ')' T_THEN stmtlist T_FI
    9     | . T_IF '(' expr ')' T_THEN stmtlist T_ELSE stmtlist T_FI
   10     | . T_FOR '(' expr ';' expr ';' expr ')' T_DO stmtlist T_DONE
   11     | . T_WHILE '(' expr ')' T_DO stmtlist T_DONE
   12     | . assignstmt
   13     | . cmd
   43 assignstmt: . T_VAR T_ASSIGN expr
   44 cmdexpr: . T_NUMBER
   45        | . T_STRING
   46        | . T_STRING_SCONST
   47        | . '"' strlist '"'
   48        | . T_VAR
   49        | . '`' nestedsubcmd '`'
   50        | . '(' expr ')'
   51 cmdexprlist: . cmdexpr
   52            | . cmdexprlist cmdexpr
   53 cmd: . subcmd
   54    | . subcmd '&'
   55 subcmd: . cmdexprlist cmdredirin cmdredirout cmdredirerr cmdredirfd
   56       | . subcmd '|' cmdexprlist cmdredirin cmdredirout cmdredirerr cmdredirfd

    T_IF             shift, and go to state 1
    T_FOR            shift, and go to state 2
    T_WHILE          shift, and go to state 3
    T_FUNCTION       shift, and go to state 4
    T_NUMBER         shift, and go to state 5
    T_STRING         shift, and go to state 6
    T_STRING_SCONST  shift, and go to state 7
    T_VAR            shift, and go to state 8
    '('              shift, and go to state 9
    '"'              shift, and go to state 10
    '`'              shift, and go to state 11

    $default  reduce using rule 2 (stmtlist)

    start        go to state 12
    stmtlist     go to state 13
    stmtlistr    go to state 14
    stmt         go to state 15
    assignstmt   go to state 16
    cmdexpr      go to state 17
    cmdexprlist  go to state 18
    cmd          go to state 19
    subcmd       go to state 20


state 1

    8 stmt: T_IF . '(' expr ')' T_THEN stmtlist T_FI
    9     | T_IF . '(' expr ')' T_THEN stmtlist T_ELSE stmtlist T_FI

    '('  shift, and go to state 21


state 2

   10 stmt: T_FOR . '(' expr ';' expr ';' expr ')' T_DO stmtlist T_DONE

    '('  shift, and go to state 22


state 3

   11 stmt: T_WHILE . '(' expr ')' T_DO stmtlist T_DONE

    '('  shift, and go to state 23


state 4

    7 stmt: T_FUNCTION . T_STRING T_BEGIN stmtlist T_END

    T_STRING  shift, and go to state 24


state 5

   44 cmdexpr: T_NUMBER .

    $default  reduce using rule 44 (cmdexpr)


state 6

   45 cmdexpr: T_STRING .

    $default  reduce using rule 45 (cmdexpr)


state 7

   46 cmdexpr: T_STRING_SCONST .

    $default  reduce using rule 46 (cmdexpr)


state 8

   43 assignstmt: T_VAR . T_ASSIGN expr
   48 cmdexpr: T_VAR .  [$end, T_ELSE, T_FI, T_DONE, T_END, T_NUMBER, T_STRING, T_STRING_SCONST, T_VAR, T_ERR2OUT, T_OUT2ERR, T_APPEND, T_ERR2FILE, T_OUT2FILE, '>', '<', ';', '(', '"', '`', '&', '|']

    T_ASSIGN  shift, and go to state 25

    $default  reduce using rule 48 (cmdexpr)


state 9

   19 expr: . T_NUMBER
   20     | . T_STRING_SCONST
   21     | . '"' strlist '"'
   22     | . T_VAR
   23     | . assignstmt
   24     | . expr T_ADD expr
   25     | . expr T_SUB expr
   26     | . expr T_MUL expr
   27     | . expr T_DIV expr
   28     | . expr T_MOD expr
   29     | . expr T_POW expr
   30     | . T_SUB expr
   31     | . T_INC T_VAR
   32     | . T_DEC T_VAR
   33     | . T_VAR T_INC
   34     | . T_VAR T_DEC
   35     | . expr '<' expr
   36     | . expr '>' expr
   37     | . expr T_LEQ expr
   38     | . expr T_GEQ expr
   39     | . expr T_EQ expr
   40     | . expr T_NEQ expr
   41     | . '`' nestedsubcmd '`'
   42     | . '(' expr ')'
   43 assignstmt: . T_VAR T_ASSIGN expr
   50 cmdexpr: '(' . expr ')'

    T_NUMBER         shift, and go to state 26
    T_STRING_SCONST  shift, and go to state 27
    T_VAR            shift, and go to state 28
    T_SUB            shift, and go to state 29
    T_DEC            shift, and go to state 30
    T_INC            shift, and go to state 31
    '('              shift, and go to state 32
    '"'              shift, and go to state 33
    '`'              shift, and go to state 34

    expr        go to state 35
    assignstmt  go to state 36


state 10

   14 strlist: . strlist strcomp
   15        | .
   47 cmdexpr: '"' . strlist '"'

    $default  reduce using rule 15 (strlist)

    strlist  go to state 37


state 11

   49 cmdexpr: '`' . nestedsubcmd '`'
   57 nestedcmdexpr: . T_NUMBER
   58              | . T_STRING
   59              | . T_STRING_SCONST
   60              | . '"' strlist '"'
   61              | . T_VAR
   62              | . '(' expr ')'
   63 nestedcmdexprlist: . nestedcmdexpr
   64                  | . nestedcmdexprlist nestedcmdexpr
   65 nestedsubcmd: . nestedcmdexprlist cmdredirin cmdredirout cmdredirerr cmdredirfd
   66             | . nestedsubcmd '|' nestedcmdexprlist cmdredirin cmdredirout cmdredirerr cmdredirfd

    T_NUMBER         shift, and go to state 38
    T_STRING         shift, and go to state 39
    T_STRING_SCONST  shift, and go to state 40
    T_VAR            shift, and go to state 41
    '('              shift, and go to state 42
    '"'              shift, and go to state 43

    nestedcmdexpr      go to state 44
    nestedcmdexprlist  go to state 45
    nestedsubcmd       go to state 46


state 12

    0 $accept: start . $end

    $end  shift, and go to state 47


state 13

    1 start: stmtlist .

    $default  reduce using rule 1 (start)


state 14

    3 stmtlist: stmtlistr .  [$end, T_ELSE, T_FI, T_DONE, T_END]
    4         | stmtlistr . ';'
    6 stmtlistr: stmtlistr . ';' stmt

    ';'  shift, and go to state 48

    $default  reduce using rule 3 (stmtlist)


state 15

    5 stmtlistr: stmt .

    $default  reduce using rule 5 (stmtlistr)


state 16

   12 stmt: assignstmt .

    $default  reduce using rule 12 (stmt)


state 17

   51 cmdexprlist: cmdexpr .

    $default  reduce using rule 51 (cmdexprlist)


state 18

   44 cmdexpr: . T_NUMBER
   45        | . T_STRING
   46        | . T_STRING_SCONST
   47        | . '"' strlist '"'
   48        | . T_VAR
   49        | . '`' nestedsubcmd '`'
   50        | . '(' expr ')'
   52 cmdexprlist: cmdexprlist . cmdexpr
   55 subcmd: cmdexprlist . cmdredirin cmdredirout cmdredirerr cmdredirfd
   70 cmdredirin: . '<' nestedcmdexpr
   71           | .  [$end, T_ELSE, T_FI, T_DONE, T_END, T_ERR2OUT, T_OUT2ERR, T_APPEND, T_ERR2FILE, T_OUT2FILE, '>', ';', '&', '|']

    T_NUMBER         shift, and go to state 5
    T_STRING         shift, and go to state 6
    T_STRING_SCONST  shift, and go to state 7
    T_VAR            shift, and go to state 49
    '<'              shift, and go to state 50
    '('              shift, and go to state 9
    '"'              shift, and go to state 10
    '`'              shift, and go to state 11

    $default  reduce using rule 71 (cmdredirin)

    cmdexpr     go to state 51
    cmdredirin  go to state 52


state 19

   13 stmt: cmd .

    $default  reduce using rule 13 (stmt)


state 20

   53 cmd: subcmd .  [$end, T_ELSE, T_FI, T_DONE, T_END, ';']
   54    | subcmd . '&'
   56 subcmd: subcmd . '|' cmdexprlist cmdredirin cmdredirout cmdredirerr cmdredirfd

    '&'  shift, and go to state 53
    '|'  shift, and go to state 54

    $default  reduce using rule 53 (cmd)


state 21

    8 stmt: T_IF '(' . expr ')' T_THEN stmtlist T_FI
    9     | T_IF '(' . expr ')' T_THEN stmtlist T_ELSE stmtlist T_FI
   19 expr: . T_NUMBER
   20     | . T_STRING_SCONST
   21     | . '"' strlist '"'
   22     | . T_VAR
   23     | . assignstmt
   24     | . expr T_ADD expr
   25     | . expr T_SUB expr
   26     | . expr T_MUL expr
   27     | . expr T_DIV expr
   28     | . expr T_MOD expr
   29     | . expr T_POW expr
   30     | . T_SUB expr
   31     | . T_INC T_VAR
   32     | . T_DEC T_VAR
   33     | . T_VAR T_INC
   34     | . T_VAR T_DEC
   35     | . expr '<' expr
   36     | . expr '>' expr
   37     | . expr T_LEQ expr
   38     | . expr T_GEQ expr
   39     | . expr T_EQ expr
   40     | . expr T_NEQ expr
   41     | . '`' nestedsubcmd '`'
   42     | . '(' expr ')'
   43 assignstmt: . T_VAR T_ASSIGN expr

    T_NUMBER         shift, and go to state 26
    T_STRING_SCONST  shift, and go to state 27
    T_VAR            shift, and go to state 28
    T_SUB            shift, and go to state 29
    T_DEC            shift, and go to state 30
    T_INC            shift, and go to state 31
    '('              shift, and go to state 32
    '"'              shift, and go to state 33
    '`'              shift, and go to state 34

    expr        go to state 55
    assignstmt  go to state 36


state 22

   10 stmt: T_FOR '(' . expr ';' expr ';' expr ')' T_DO stmtlist T_DONE
   19 expr: . T_NUMBER
   20     | . T_STRING_SCONST
   21     | . '"' strlist '"'
   22     | . T_VAR
   23     | . assignstmt
   24     | . expr T_ADD expr
   25     | . expr T_SUB expr
   26     | . expr T_MUL expr
   27     | . expr T_DIV expr
   28     | . expr T_MOD expr
   29     | . expr T_POW expr
   30     | . T_SUB expr
   31     | . T_INC T_VAR
   32     | . T_DEC T_VAR
   33     | . T_VAR T_INC
   34     | . T_VAR T_DEC
   35     | . expr '<' expr
   36     | . expr '>' expr
   37     | . expr T_LEQ expr
   38     | . expr T_GEQ expr
   39     | . expr T_EQ expr
   40     | . expr T_NEQ expr
   41     | . '`' nestedsubcmd '`'
   42     | . '(' expr ')'
   43 assignstmt: . T_VAR T_ASSIGN expr

    T_NUMBER         shift, and go to state 26
    T_STRING_SCONST  shift, and go to state 27
    T_VAR            shift, and go to state 28
    T_SUB            shift, and go to state 29
    T_DEC            shift, and go to state 30
    T_INC            shift, and go to state 31
    '('              shift, and go to state 32
    '"'              shift, and go to state 33
    '`'              shift, and go to state 34

    expr        go to state 56
    assignstmt  go to state 36


state 23

   11 stmt: T_WHILE '(' . expr ')' T_DO stmtlist T_DONE
   19 expr: . T_NUMBER
   20     | . T_STRING_SCONST
   21     | . '"' strlist '"'
   22     | . T_VAR
   23     | . assignstmt
   24     | . expr T_ADD expr
   25     | . expr T_SUB expr
   26     | . expr T_MUL expr
   27     | . expr T_DIV expr
   28     | . expr T_MOD expr
   29     | . expr T_POW expr
   30     | . T_SUB expr
   31     | . T_INC T_VAR
   32     | . T_DEC T_VAR
   33     | . T_VAR T_INC
   34     | . T_VAR T_DEC
   35     | . expr '<' expr
   36     | . expr '>' expr
   37     | . expr T_LEQ expr
   38     | . expr T_GEQ expr
   39     | . expr T_EQ expr
   40     | . expr T_NEQ expr
   41     | . '`' nestedsubcmd '`'
   42     | . '(' expr ')'
   43 assignstmt: . T_VAR T_ASSIGN expr

    T_NUMBER         shift, and go to state 26
    T_STRING_SCONST  shift, and go to state 27
    T_VAR            shift, and go to state 28
    T_SUB            shift, and go to state 29
    T_DEC            shift, and go to state 30
    T_INC            shift, and go to state 31
    '('              shift, and go to state 32
    '"'              shift, and go to state 33
    '`'              shift, and go to state 34

    expr        go to state 57
    assignstmt  go to state 36


state 24

    7 stmt: T_FUNCTION T_STRING . T_BEGIN stmtlist T_END

    T_BEGIN  shift, and go to state 58


state 25

   19 expr: . T_NUMBER
   20     | . T_STRING_SCONST
   21     | . '"' strlist '"'
   22     | . T_VAR
   23     | . assignstmt
   24     | . expr T_ADD expr
   25     | . expr T_SUB expr
   26     | . expr T_MUL expr
   27     | . expr T_DIV expr
   28     | . expr T_MOD expr
   29     | . expr T_POW expr
   30     | . T_SUB expr
   31     | . T_INC T_VAR
   32     | . T_DEC T_VAR
   33     | . T_VAR T_INC
   34     | . T_VAR T_DEC
   35     | . expr '<' expr
   36     | . expr '>' expr
   37     | . expr T_LEQ expr
   38     | . expr T_GEQ expr
   39     | . expr T_EQ expr
   40     | . expr T_NEQ expr
   41     | . '`' nestedsubcmd '`'
   42     | . '(' expr ')'
   43 assignstmt: . T_VAR T_ASSIGN expr
   43           | T_VAR T_ASSIGN . expr

    T_NUMBER         shift, and go to state 26
    T_STRING_SCONST  shift, and go to state 27
    T_VAR            shift, and go to state 28
    T_SUB            shift, and go to state 29
    T_DEC            shift, and go to state 30
    T_INC            shift, and go to state 31
    '('              shift, and go to state 32
    '"'              shift, and go to state 33
    '`'              shift, and go to state 34

    expr        go to state 59
    assignstmt  go to state 36


state 26

   19 expr: T_NUMBER .

    $default  reduce using rule 19 (expr)


state 27

   20 expr: T_STRING_SCONST .

    $default  reduce using rule 20 (expr)


state 28

   22 expr: T_VAR .  [$end, T_ELSE, T_FI, T_DONE, T_END, '>', '<', T_NEQ, T_EQ, T_GEQ, T_LEQ, T_SUB, T_ADD, T_MOD, T_DIV, T_MUL, T_POW, ';', ')']
   33     | T_VAR . T_INC
   34     | T_VAR . T_DEC
   43 assignstmt: T_VAR . T_ASSIGN expr

    T_ASSIGN  shift, and go to state 25
    T_DEC     shift, and go to state 60
    T_INC     shift, and go to state 61

    $default  reduce using rule 22 (expr)


state 29

   19 expr: . T_NUMBER
   20     | . T_STRING_SCONST
   21     | . '"' strlist '"'
   22     | . T_VAR
   23     | . assignstmt
   24     | . expr T_ADD expr
   25     | . expr T_SUB expr
   26     | . expr T_MUL expr
   27     | . expr T_DIV expr
   28     | . expr T_MOD expr
   29     | . expr T_POW expr
   30     | . T_SUB expr
   30     | T_SUB . expr
   31     | . T_INC T_VAR
   32     | . T_DEC T_VAR
   33     | . T_VAR T_INC
   34     | . T_VAR T_DEC
   35     | . expr '<' expr
   36     | . expr '>' expr
   37     | . expr T_LEQ expr
   38     | . expr T_GEQ expr
   39     | . expr T_EQ expr
   40     | . expr T_NEQ expr
   41     | . '`' nestedsubcmd '`'
   42     | . '(' expr ')'
   43 assignstmt: . T_VAR T_ASSIGN expr

    T_NUMBER         shift, and go to state 26
    T_STRING_SCONST  shift, and go to state 27
    T_VAR            shift, and go to state 28
    T_SUB            shift, and go to state 29
    T_DEC            shift, and go to state 30
    T_INC            shift, and go to state 31
    '('              shift, and go to state 32
    '"'              shift, and go to state 33
    '`'              shift, and go to state 34

    expr        go to state 62
    assignstmt  go to state 36


state 30

   32 expr: T_DEC . T_VAR

    T_VAR  shift, and go to state 63


state 31

   31 expr: T_INC . T_VAR

    T_VAR  shift, and go to state 64


state 32

   19 expr: . T_NUMBER
   20     | . T_STRING_SCONST
   21     | . '"' strlist '"'
   22     | . T_VAR
   23     | . assignstmt
   24     | . expr T_ADD expr
   25     | . expr T_SUB expr
   26     | . expr T_MUL expr
   27     | . expr T_DIV expr
   28     | . expr T_MOD expr
   29     | . expr T_POW expr
   30     | . T_SUB expr
   31     | . T_INC T_VAR
   32     | . T_DEC T_VAR
   33     | . T_VAR T_INC
   34     | . T_VAR T_DEC
   35     | . expr '<' expr
   36     | . expr '>' expr
   37     | . expr T_LEQ expr
   38     | . expr T_GEQ expr
   39     | . expr T_EQ expr
   40     | . expr T_NEQ expr
   41     | . '`' nestedsubcmd '`'
   42     | . '(' expr ')'
   42     | '(' . expr ')'
   43 assignstmt: . T_VAR T_ASSIGN expr

    T_NUMBER         shift, and go to state 26
    T_STRING_SCONST  shift, and go to state 27
    T_VAR            shift, and go to state 28
    T_SUB            shift, and go to state 29
    T_DEC            shift, and go to state 30
    T_INC            shift, and go to state 31
    '('              shift, and go to state 32
    '"'              shift, and go to state 33
    '`'              shift, and go to state 34

    expr        go to state 65
    assignstmt  go to state 36


state 33

   14 strlist: . strlist strcomp
   15        | .
   21 expr: '"' . strlist '"'

    $default  reduce using rule 15 (strlist)

    strlist  go to state 66


state 34

   41 expr: '`' . nestedsubcmd '`'
   57 nestedcmdexpr: . T_NUMBER
   58              | . T_STRING
   59              | . T_STRING_SCONST
   60              | . '"' strlist '"'
   61              | . T_VAR
   62              | . '(' expr ')'
   63 nestedcmdexprlist: . nestedcmdexpr
   64                  | . nestedcmdexprlist nestedcmdexpr
   65 nestedsubcmd: . nestedcmdexprlist cmdredirin cmdredirout cmdredirerr cmdredirfd
   66             | . nestedsubcmd '|' nestedcmdexprlist cmdredirin cmdredirout cmdredirerr cmdredirfd

    T_NUMBER         shift, and go to state 38
    T_STRING         shift, and go to state 39
    T_STRING_SCONST  shift, and go to state 40
    T_VAR            shift, and go to state 41
    '('              shift, and go to state 42
    '"'              shift, and go to state 43

    nestedcmdexpr      go to state 44
    nestedcmdexprlist  go to state 45
    nestedsubcmd       go to state 67


state 35

   24 expr: expr . T_ADD expr
   25     | expr . T_SUB expr
   26     | expr . T_MUL expr
   27     | expr . T_DIV expr
   28     | expr . T_MOD expr
   29     | expr . T_POW expr
   35     | expr . '<' expr
   36     | expr . '>' expr
   37     | expr . T_LEQ expr
   38     | expr . T_GEQ expr
   39     | expr . T_EQ expr
   40     | expr . T_NEQ expr
   50 cmdexpr: '(' expr . ')'

    '>'    shift, and go to state 68
    '<'    shift, and go to state 69
    T_NEQ  shift, and go to state 70
    T_EQ   shift, and go to state 71
    T_GEQ  shift, and go to state 72
    T_LEQ  shift, and go to state 73
    T_SUB  shift, and go to state 74
    T_ADD  shift, and go to state 75
    T_MOD  shift, and go to state 76
    T_DIV  shift, and go to state 77
    T_MUL  shift, and go to state 78
    T_POW  shift, and go to state 79
    ')'    shift, and go to state 80


state 36

   23 expr: assignstmt .

    $default  reduce using rule 23 (expr)


state 37

   14 strlist: strlist . strcomp
   16 strcomp: . T_STRING
   17        | . T_VAR
   18        | . '(' expr ')'
   47 cmdexpr: '"' strlist . '"'

    T_STRING  shift, and go to state 81
    T_VAR     shift, and go to state 82
    '('       shift, and go to state 83
    '"'       shift, and go to state 84

    strcomp  go to state 85


state 38

   57 nestedcmdexpr: T_NUMBER .

    $default  reduce using rule 57 (nestedcmdexpr)


state 39

   58 nestedcmdexpr: T_STRING .

    $default  reduce using rule 58 (nestedcmdexpr)


state 40

   59 nestedcmdexpr: T_STRING_SCONST .

    $default  reduce using rule 59 (nestedcmdexpr)


state 41

   61 nestedcmdexpr: T_VAR .

    $default  reduce using rule 61 (nestedcmdexpr)


state 42

   19 expr: . T_NUMBER
   20     | . T_STRING_SCONST
   21     | . '"' strlist '"'
   22     | . T_VAR
   23     | . assignstmt
   24     | . expr T_ADD expr
   25     | . expr T_SUB expr
   26     | . expr T_MUL expr
   27     | . expr T_DIV expr
   28     | . expr T_MOD expr
   29     | . expr T_POW expr
   30     | . T_SUB expr
   31     | . T_INC T_VAR
   32     | . T_DEC T_VAR
   33     | . T_VAR T_INC
   34     | . T_VAR T_DEC
   35     | . expr '<' expr
   36     | . expr '>' expr
   37     | . expr T_LEQ expr
   38     | . expr T_GEQ expr
   39     | . expr T_EQ expr
   40     | . expr T_NEQ expr
   41     | . '`' nestedsubcmd '`'
   42     | . '(' expr ')'
   43 assignstmt: . T_VAR T_ASSIGN expr
   62 nestedcmdexpr: '(' . expr ')'

    T_NUMBER         shift, and go to state 26
    T_STRING_SCONST  shift, and go to state 27
    T_VAR            shift, and go to state 28
    T_SUB            shift, and go to state 29
    T_DEC            shift, and go to state 30
    T_INC            shift, and go to state 31
    '('              shift, and go to state 32
    '"'              shift, and go to state 33
    '`'              shift, and go to state 34

    expr        go to state 86
    assignstmt  go to state 36


state 43

   14 strlist: . strlist strcomp
   15        | .
   60 nestedcmdexpr: '"' . strlist '"'

    $default  reduce using rule 15 (strlist)

    strlist  go to state 87


state 44

   63 nestedcmdexprlist: nestedcmdexpr .

    $default  reduce using rule 63 (nestedcmdexprlist)


state 45

   57 nestedcmdexpr: . T_NUMBER
   58              | . T_STRING
   59              | . T_STRING_SCONST
   60              | . '"' strlist '"'
   61              | . T_VAR
   62              | . '(' expr ')'
   64 nestedcmdexprlist: nestedcmdexprlist . nestedcmdexpr
   65 nestedsubcmd: nestedcmdexprlist . cmdredirin cmdredirout cmdredirerr cmdredirfd
   70 cmdredirin: . '<' nestedcmdexpr
   71           | .  [T_ERR2OUT, T_OUT2ERR, T_APPEND, T_ERR2FILE, T_OUT2FILE, '>', '`', '|']

    T_NUMBER         shift, and go to state 38
    T_STRING         shift, and go to state 39
    T_STRING_SCONST  shift, and go to state 40
    T_VAR            shift, and go to state 41
    '<'              shift, and go to state 50
    '('              shift, and go to state 42
    '"'              shift, and go to state 43

    $default  reduce using rule 71 (cmdredirin)

    nestedcmdexpr  go to state 88
    cmdredirin     go to state 89


state 46

   49 cmdexpr: '`' nestedsubcmd . '`'
   66 nestedsubcmd: nestedsubcmd . '|' nestedcmdexprlist cmdredirin cmdredirout cmdredirerr cmdredirfd

    '`'  shift, and go to state 90
    '|'  shift, and go to state 91


state 47

    0 $accept: start $end .

    $default  accept


state 48

    4 stmtlist: stmtlistr ';' .  [$end, T_ELSE, T_FI, T_DONE, T_END]
    6 stmtlistr: stmtlistr ';' . stmt
    7 stmt: . T_FUNCTION T_STRING T_BEGIN stmtlist T_END
    8     | . T_IF '(' expr ')' T_THEN stmtlist T_FI
    9     | . T_IF '(' expr ')' T_THEN stmtlist T_ELSE stmtlist T_FI
   10     | . T_FOR '(' expr ';' expr ';' expr ')' T_DO stmtlist T_DONE
   11     | . T_WHILE '(' expr ')' T_DO stmtlist T_DONE
   12     | . assignstmt
   13     | . cmd
   43 assignstmt: . T_VAR T_ASSIGN expr
   44 cmdexpr: . T_NUMBER
   45        | . T_STRING
   46        | . T_STRING_SCONST
   47        | . '"' strlist '"'
   48        | . T_VAR
   49        | . '`' nestedsubcmd '`'
   50        | . '(' expr ')'
   51 cmdexprlist: . cmdexpr
   52            | . cmdexprlist cmdexpr
   53 cmd: . subcmd
   54    | . subcmd '&'
   55 subcmd: . cmdexprlist cmdredirin cmdredirout cmdredirerr cmdredirfd
   56       | . subcmd '|' cmdexprlist cmdredirin cmdredirout cmdredirerr cmdredirfd

    T_IF             shift, and go to state 1
    T_FOR            shift, and go to state 2
    T_WHILE          shift, and go to state 3
    T_FUNCTION       shift, and go to state 4
    T_NUMBER         shift, and go to state 5
    T_STRING         shift, and go to state 6
    T_STRING_SCONST  shift, and go to state 7
    T_VAR            shift, and go to state 8
    '('              shift, and go to state 9
    '"'              shift, and go to state 10
    '`'              shift, and go to state 11

    $default  reduce using rule 4 (stmtlist)

    stmt         go to state 92
    assignstmt   go to state 16
    cmdexpr      go to state 17
    cmdexprlist  go to state 18
    cmd          go to state 19
    subcmd       go to state 20


state 49

   48 cmdexpr: T_VAR .

    $default  reduce using rule 48 (cmdexpr)


state 50

   57 nestedcmdexpr: . T_NUMBER
   58              | . T_STRING
   59              | . T_STRING_SCONST
   60              | . '"' strlist '"'
   61              | . T_VAR
   62              | . '(' expr ')'
   70 cmdredirin: '<' . nestedcmdexpr

    T_NUMBER         shift, and go to state 38
    T_STRING         shift, and go to state 39
    T_STRING_SCONST  shift, and go to state 40
    T_VAR            shift, and go to state 41
    '('              shift, and go to state 42
    '"'              shift, and go to state 43

    nestedcmdexpr  go to state 93


state 51

   52 cmdexprlist: cmdexprlist cmdexpr .

    $default  reduce using rule 52 (cmdexprlist)


state 52

   55 subcmd: cmdexprlist cmdredirin . cmdredirout cmdredirerr cmdredirfd
   74 cmdredirout: . '>' nestedcmdexpr
   75            | . T_OUT2FILE nestedcmdexpr
   76            | . T_APPEND nestedcmdexpr
   77            | .  [$end, T_ELSE, T_FI, T_DONE, T_END, T_ERR2OUT, T_OUT2ERR, T_ERR2FILE, ';', '&', '|']

    T_APPEND    shift, and go to state 94
    T_OUT2FILE  shift, and go to state 95
    '>'         shift, and go to state 96

    $default  reduce using rule 77 (cmdredirout)

    cmdredirout  go to state 97


state 53

   54 cmd: subcmd '&' .

    $default  reduce using rule 54 (cmd)


state 54

   44 cmdexpr: . T_NUMBER
   45        | . T_STRING
   46        | . T_STRING_SCONST
   47        | . '"' strlist '"'
   48        | . T_VAR
   49        | . '`' nestedsubcmd '`'
   50        | . '(' expr ')'
   51 cmdexprlist: . cmdexpr
   52            | . cmdexprlist cmdexpr
   56 subcmd: subcmd '|' . cmdexprlist cmdredirin cmdredirout cmdredirerr cmdredirfd

    T_NUMBER         shift, and go to state 5
    T_STRING         shift, and go to state 6
    T_STRING_SCONST  shift, and go to state 7
    T_VAR            shift, and go to state 49
    '('              shift, and go to state 9
    '"'              shift, and go to state 10
    '`'              shift, and go to state 11

    cmdexpr      go to state 17
    cmdexprlist  go to state 98


state 55

    8 stmt: T_IF '(' expr . ')' T_THEN stmtlist T_FI
    9     | T_IF '(' expr . ')' T_THEN stmtlist T_ELSE stmtlist T_FI
   24 expr: expr . T_ADD expr
   25     | expr . T_SUB expr
   26     | expr . T_MUL expr
   27     | expr . T_DIV expr
   28     | expr . T_MOD expr
   29     | expr . T_POW expr
   35     | expr . '<' expr
   36     | expr . '>' expr
   37     | expr . T_LEQ expr
   38     | expr . T_GEQ expr
   39     | expr . T_EQ expr
   40     | expr . T_NEQ expr

    '>'    shift, and go to state 68
    '<'    shift, and go to state 69
    T_NEQ  shift, and go to state 70
    T_EQ   shift, and go to state 71
    T_GEQ  shift, and go to state 72
    T_LEQ  shift, and go to state 73
    T_SUB  shift, and go to state 74
    T_ADD  shift, and go to state 75
    T_MOD  shift, and go to state 76
    T_DIV  shift, and go to state 77
    T_MUL  shift, and go to state 78
    T_POW  shift, and go to state 79
    ')'    shift, and go to state 99


state 56

   10 stmt: T_FOR '(' expr . ';' expr ';' expr ')' T_DO stmtlist T_DONE
   24 expr: expr . T_ADD expr
   25     | expr . T_SUB expr
   26     | expr . T_MUL expr
   27     | expr . T_DIV expr
   28     | expr . T_MOD expr
   29     | expr . T_POW expr
   35     | expr . '<' expr
   36     | expr . '>' expr
   37     | expr . T_LEQ expr
   38     | expr . T_GEQ expr
   39     | expr . T_EQ expr
   40     | expr . T_NEQ expr

    '>'    shift, and go to state 68
    '<'    shift, and go to state 69
    T_NEQ  shift, and go to state 70
    T_EQ   shift, and go to state 71
    T_GEQ  shift, and go to state 72
    T_LEQ  shift, and go to state 73
    T_SUB  shift, and go to state 74
    T_ADD  shift, and go to state 75
    T_MOD  shift, and go to state 76
    T_DIV  shift, and go to state 77
    T_MUL  shift, and go to state 78
    T_POW  shift, and go to state 79
    ';'    shift, and go to state 100


state 57

   11 stmt: T_WHILE '(' expr . ')' T_DO stmtlist T_DONE
   24 expr: expr . T_ADD expr
   25     | expr . T_SUB expr
   26     | expr . T_MUL expr
   27     | expr . T_DIV expr
   28     | expr . T_MOD expr
   29     | expr . T_POW expr
   35     | expr . '<' expr
   36     | expr . '>' expr
   37     | expr . T_LEQ expr
   38     | expr . T_GEQ expr
   39     | expr . T_EQ expr
   40     | expr . T_NEQ expr

    '>'    shift, and go to state 68
    '<'    shift, and go to state 69
    T_NEQ  shift, and go to state 70
    T_EQ   shift, and go to state 71
    T_GEQ  shift, and go to state 72
    T_LEQ  shift, and go to state 73
    T_SUB  shift, and go to state 74
    T_ADD  shift, and go to state 75
    T_MOD  shift, and go to state 76
    T_DIV  shift, and go to state 77
    T_MUL  shift, and go to state 78
    T_POW  shift, and go to state 79
    ')'    shift, and go to state 101


state 58

    2 stmtlist: .  [T_END]
    3         | . stmtlistr
    4         | . stmtlistr ';'
    5 stmtlistr: . stmt
    6          | . stmtlistr ';' stmt
    7 stmt: . T_FUNCTION T_STRING T_BEGIN stmtlist T_END
    7     | T_FUNCTION T_STRING T_BEGIN . stmtlist T_END
    8     | . T_IF '(' expr ')' T_THEN stmtlist T_FI
    9     | . T_IF '(' expr ')' T_THEN stmtlist T_ELSE stmtlist T_FI
   10     | . T_FOR '(' expr ';' expr ';' expr ')' T_DO stmtlist T_DONE
   11     | . T_WHILE '(' expr ')' T_DO stmtlist T_DONE
   12     | . assignstmt
   13     | . cmd
   43 assignstmt: . T_VAR T_ASSIGN expr
   44 cmdexpr: . T_NUMBER
   45        | . T_STRING
   46        | . T_STRING_SCONST
   47        | . '"' strlist '"'
   48        | . T_VAR
   49        | . '`' nestedsubcmd '`'
   50        | . '(' expr ')'
   51 cmdexprlist: . cmdexpr
   52            | . cmdexprlist cmdexpr
   53 cmd: . subcmd
   54    | . subcmd '&'
   55 subcmd: . cmdexprlist cmdredirin cmdredirout cmdredirerr cmdredirfd
   56       | . subcmd '|' cmdexprlist cmdredirin cmdredirout cmdredirerr cmdredirfd

    T_IF             shift, and go to state 1
    T_FOR            shift, and go to state 2
    T_WHILE          shift, and go to state 3
    T_FUNCTION       shift, and go to state 4
    T_NUMBER         shift, and go to state 5
    T_STRING         shift, and go to state 6
    T_STRING_SCONST  shift, and go to state 7
    T_VAR            shift, and go to state 8
    '('              shift, and go to state 9
    '"'              shift, and go to state 10
    '`'              shift, and go to state 11

    $default  reduce using rule 2 (stmtlist)

    stmtlist     go to state 102
    stmtlistr    go to state 14
    stmt         go to state 15
    assignstmt   go to state 16
    cmdexpr      go to state 17
    cmdexprlist  go to state 18
    cmd          go to state 19
    subcmd       go to state 20


state 59

   24 expr: expr . T_ADD expr
   25     | expr . T_SUB expr
   26     | expr . T_MUL expr
   27     | expr . T_DIV expr
   28     | expr . T_MOD expr
   29     | expr . T_POW expr
   35     | expr . '<' expr
   36     | expr . '>' expr
   37     | expr . T_LEQ expr
   38     | expr . T_GEQ expr
   39     | expr . T_EQ expr
   40     | expr . T_NEQ expr
   43 assignstmt: T_VAR T_ASSIGN expr .  [$end, T_ELSE, T_FI, T_DONE, T_END, ';', ')']

    T_SUB  shift, and go to state 74
    T_ADD  shift, and go to state 75
    T_MOD  shift, and go to state 76
    T_DIV  shift, and go to state 77
    T_MUL  shift, and go to state 78
    T_POW  shift, and go to state 79

    '>'    error (nonassociative)
    '<'    error (nonassociative)
    T_NEQ  error (nonassociative)
    T_EQ   error (nonassociative)
    T_GEQ  error (nonassociative)
    T_LEQ  error (nonassociative)

    $default  reduce using rule 43 (assignstmt)

    Conflict between rule 43 and token '>' resolved as an error (%nonassoc '>').
    Conflict between rule 43 and token '<' resolved as an error (%nonassoc '<').
    Conflict between rule 43 and token T_NEQ resolved as an error (%nonassoc T_NEQ).
    Conflict between rule 43 and token T_EQ resolved as an error (%nonassoc T_EQ).
    Conflict between rule 43 and token T_GEQ resolved as an error (%nonassoc T_GEQ).
    Conflict between rule 43 and token T_LEQ resolved as an error (%nonassoc T_LEQ).
    Conflict between rule 43 and token T_SUB resolved as shift (T_ASSIGN < T_SUB).
    Conflict between rule 43 and token T_ADD resolved as shift (T_ASSIGN < T_ADD).
    Conflict between rule 43 and token T_MOD resolved as shift (T_ASSIGN < T_MOD).
    Conflict between rule 43 and token T_DIV resolved as shift (T_ASSIGN < T_DIV).
    Conflict between rule 43 and token T_MUL resolved as shift (T_ASSIGN < T_MUL).
    Conflict between rule 43 and token T_POW resolved as shift (T_ASSIGN < T_POW).


state 60

   34 expr: T_VAR T_DEC .

    $default  reduce using rule 34 (expr)


state 61

   33 expr: T_VAR T_INC .

    $default  reduce using rule 33 (expr)


state 62

   24 expr: expr . T_ADD expr
   25     | expr . T_SUB expr
   26     | expr . T_MUL expr
   27     | expr . T_DIV expr
   28     | expr . T_MOD expr
   29     | expr . T_POW expr
   30     | T_SUB expr .  [$end, T_ELSE, T_FI, T_DONE, T_END, '>', '<', T_NEQ, T_EQ, T_GEQ, T_LEQ, T_SUB, T_ADD, T_MOD, T_DIV, T_MUL, ';', ')']
   35     | expr . '<' expr
   36     | expr . '>' expr
   37     | expr . T_LEQ expr
   38     | expr . T_GEQ expr
   39     | expr . T_EQ expr
   40     | expr . T_NEQ expr

    T_POW  shift, and go to state 79

    $default  reduce using rule 30 (expr)

    Conflict between rule 30 and token '>' resolved as reduce ('>' < T_NEG).
    Conflict between rule 30 and token '<' resolved as reduce ('<' < T_NEG).
    Conflict between rule 30 and token T_NEQ resolved as reduce (T_NEQ < T_NEG).
    Conflict between rule 30 and token T_EQ resolved as reduce (T_EQ < T_NEG).
    Conflict between rule 30 and token T_GEQ resolved as reduce (T_GEQ < T_NEG).
    Conflict between rule 30 and token T_LEQ resolved as reduce (T_LEQ < T_NEG).
    Conflict between rule 30 and token T_SUB resolved as reduce (T_SUB < T_NEG).
    Conflict between rule 30 and token T_ADD resolved as reduce (T_ADD < T_NEG).
    Conflict between rule 30 and token T_MOD resolved as reduce (T_MOD < T_NEG).
    Conflict between rule 30 and token T_DIV resolved as reduce (T_DIV < T_NEG).
    Conflict between rule 30 and token T_MUL resolved as reduce (T_MUL < T_NEG).
    Conflict between rule 30 and token T_POW resolved as shift (T_NEG < T_POW).


state 63

   32 expr: T_DEC T_VAR .

    $default  reduce using rule 32 (expr)


state 64

   31 expr: T_INC T_VAR .

    $default  reduce using rule 31 (expr)


state 65

   24 expr: expr . T_ADD expr
   25     | expr . T_SUB expr
   26     | expr . T_MUL expr
   27     | expr . T_DIV expr
   28     | expr . T_MOD expr
   29     | expr . T_POW expr
   35     | expr . '<' expr
   36     | expr . '>' expr
   37     | expr . T_LEQ expr
   38     | expr . T_GEQ expr
   39     | expr . T_EQ expr
   40     | expr . T_NEQ expr
   42     | '(' expr . ')'

    '>'    shift, and go to state 68
    '<'    shift, and go to state 69
    T_NEQ  shift, and go to state 70
    T_EQ   shift, and go to state 71
    T_GEQ  shift, and go to state 72
    T_LEQ  shift, and go to state 73
    T_SUB  shift, and go to state 74
    T_ADD  shift, and go to state 75
    T_MOD  shift, and go to state 76
    T_DIV  shift, and go to state 77
    T_MUL  shift, and go to state 78
    T_POW  shift, and go to state 79
    ')'    shift, and go to state 103


state 66

   14 strlist: strlist . strcomp
   16 strcomp: . T_STRING
   17        | . T_VAR
   18        | . '(' expr ')'
   21 expr: '"' strlist . '"'

    T_STRING  shift, and go to state 81
    T_VAR     shift, and go to state 82
    '('       shift, and go to state 83
    '"'       shift, and go to state 104

    strcomp  go to state 85


state 67

   41 expr: '`' nestedsubcmd . '`'
   66 nestedsubcmd: nestedsubcmd . '|' nestedcmdexprlist cmdredirin cmdredirout cmdredirerr cmdredirfd

    '`'  shift, and go to state 105
    '|'  shift, and go to state 91


state 68

   19 expr: . T_NUMBER
   20     | . T_STRING_SCONST
   21     | . '"' strlist '"'
   22     | . T_VAR
   23     | . assignstmt
   24     | . expr T_ADD expr
   25     | . expr T_SUB expr
   26     | . expr T_MUL expr
   27     | . expr T_DIV expr
   28     | . expr T_MOD expr
   29     | . expr T_POW expr
   30     | . T_SUB expr
   31     | . T_INC T_VAR
   32     | . T_DEC T_VAR
   33     | . T_VAR T_INC
   34     | . T_VAR T_DEC
   35     | . expr '<' expr
   36     | . expr '>' expr
   36     | expr '>' . expr
   37     | . expr T_LEQ expr
   38     | . expr T_GEQ expr
   39     | . expr T_EQ expr
   40     | . expr T_NEQ expr
   41     | . '`' nestedsubcmd '`'
   42     | . '(' expr ')'
   43 assignstmt: . T_VAR T_ASSIGN expr

    T_NUMBER         shift, and go to state 26
    T_STRING_SCONST  shift, and go to state 27
    T_VAR            shift, and go to state 28
    T_SUB            shift, and go to state 29
    T_DEC            shift, and go to state 30
    T_INC            shift, and go to state 31
    '('              shift, and go to state 32
    '"'              shift, and go to state 33
    '`'              shift, and go to state 34

    expr        go to state 106
    assignstmt  go to state 36


state 69

   19 expr: . T_NUMBER
   20     | . T_STRING_SCONST
   21     | . '"' strlist '"'
   22     | . T_VAR
   23     | . assignstmt
   24     | . expr T_ADD expr
   25     | . expr T_SUB expr
   26     | . expr T_MUL expr
   27     | . expr T_DIV expr
   28     | . expr T_MOD expr
   29     | . expr T_POW expr
   30     | . T_SUB expr
   31     | . T_INC T_VAR
   32     | . T_DEC T_VAR
   33     | . T_VAR T_INC
   34     | . T_VAR T_DEC
   35     | . expr '<' expr
   35     | expr '<' . expr
   36     | . expr '>' expr
   37     | . expr T_LEQ expr
   38     | . expr T_GEQ expr
   39     | . expr T_EQ expr
   40     | . expr T_NEQ expr
   41     | . '`' nestedsubcmd '`'
   42     | . '(' expr ')'
   43 assignstmt: . T_VAR T_ASSIGN expr

    T_NUMBER         shift, and go to state 26
    T_STRING_SCONST  shift, and go to state 27
    T_VAR            shift, and go to state 28
    T_SUB            shift, and go to state 29
    T_DEC            shift, and go to state 30
    T_INC            shift, and go to state 31
    '('              shift, and go to state 32
    '"'              shift, and go to state 33
    '`'              shift, and go to state 34

    expr        go to state 107
    assignstmt  go to state 36


state 70

   19 expr: . T_NUMBER
   20     | . T_STRING_SCONST
   21     | . '"' strlist '"'
   22     | . T_VAR
   23     | . assignstmt
   24     | . expr T_ADD expr
   25     | . expr T_SUB expr
   26     | . expr T_MUL expr
   27     | . expr T_DIV expr
   28     | . expr T_MOD expr
   29     | . expr T_POW expr
   30     | . T_SUB expr
   31     | . T_INC T_VAR
   32     | . T_DEC T_VAR
   33     | . T_VAR T_INC
   34     | . T_VAR T_DEC
   35     | . expr '<' expr
   36     | . expr '>' expr
   37     | . expr T_LEQ expr
   38     | . expr T_GEQ expr
   39     | . expr T_EQ expr
   40     | . expr T_NEQ expr
   40     | expr T_NEQ . expr
   41     | . '`' nestedsubcmd '`'
   42     | . '(' expr ')'
   43 assignstmt: . T_VAR T_ASSIGN expr

    T_NUMBER         shift, and go to state 26
    T_STRING_SCONST  shift, and go to state 27
    T_VAR            shift, and go to state 28
    T_SUB            shift, and go to state 29
    T_DEC            shift, and go to state 30
    T_INC            shift, and go to state 31
    '('              shift, and go to state 32
    '"'              shift, and go to state 33
    '`'              shift, and go to state 34

    expr        go to state 108
    assignstmt  go to state 36


state 71

   19 expr: . T_NUMBER
   20     | . T_STRING_SCONST
   21     | . '"' strlist '"'
   22     | . T_VAR
   23     | . assignstmt
   24     | . expr T_ADD expr
   25     | . expr T_SUB expr
   26     | . expr T_MUL expr
   27     | . expr T_DIV expr
   28     | . expr T_MOD expr
   29     | . expr T_POW expr
   30     | . T_SUB expr
   31     | . T_INC T_VAR
   32     | . T_DEC T_VAR
   33     | . T_VAR T_INC
   34     | . T_VAR T_DEC
   35     | . expr '<' expr
   36     | . expr '>' expr
   37     | . expr T_LEQ expr
   38     | . expr T_GEQ expr
   39     | . expr T_EQ expr
   39     | expr T_EQ . expr
   40     | . expr T_NEQ expr
   41     | . '`' nestedsubcmd '`'
   42     | . '(' expr ')'
   43 assignstmt: . T_VAR T_ASSIGN expr

    T_NUMBER         shift, and go to state 26
    T_STRING_SCONST  shift, and go to state 27
    T_VAR            shift, and go to state 28
    T_SUB            shift, and go to state 29
    T_DEC            shift, and go to state 30
    T_INC            shift, and go to state 31
    '('              shift, and go to state 32
    '"'              shift, and go to state 33
    '`'              shift, and go to state 34

    expr        go to state 109
    assignstmt  go to state 36


state 72

   19 expr: . T_NUMBER
   20     | . T_STRING_SCONST
   21     | . '"' strlist '"'
   22     | . T_VAR
   23     | . assignstmt
   24     | . expr T_ADD expr
   25     | . expr T_SUB expr
   26     | . expr T_MUL expr
   27     | . expr T_DIV expr
   28     | . expr T_MOD expr
   29     | . expr T_POW expr
   30     | . T_SUB expr
   31     | . T_INC T_VAR
   32     | . T_DEC T_VAR
   33     | . T_VAR T_INC
   34     | . T_VAR T_DEC
   35     | . expr '<' expr
   36     | . expr '>' expr
   37     | . expr T_LEQ expr
   38     | . expr T_GEQ expr
   38     | expr T_GEQ . expr
   39     | . expr T_EQ expr
   40     | . expr T_NEQ expr
   41     | . '`' nestedsubcmd '`'
   42     | . '(' expr ')'
   43 assignstmt: . T_VAR T_ASSIGN expr

    T_NUMBER         shift, and go to state 26
    T_STRING_SCONST  shift, and go to state 27
    T_VAR            shift, and go to state 28
    T_SUB            shift, and go to state 29
    T_DEC            shift, and go to state 30
    T_INC            shift, and go to state 31
    '('              shift, and go to state 32
    '"'              shift, and go to state 33
    '`'              shift, and go to state 34

    expr        go to state 110
    assignstmt  go to state 36


state 73

   19 expr: . T_NUMBER
   20     | . T_STRING_SCONST
   21     | . '"' strlist '"'
   22     | . T_VAR
   23     | . assignstmt
   24     | . expr T_ADD expr
   25     | . expr T_SUB expr
   26     | . expr T_MUL expr
   27     | . expr T_DIV expr
   28     | . expr T_MOD expr
   29     | . expr T_POW expr
   30     | . T_SUB expr
   31     | . T_INC T_VAR
   32     | . T_DEC T_VAR
   33     | . T_VAR T_INC
   34     | . T_VAR T_DEC
   35     | . expr '<' expr
   36     | . expr '>' expr
   37     | . expr T_LEQ expr
   37     | expr T_LEQ . expr
   38     | . expr T_GEQ expr
   39     | . expr T_EQ expr
   40     | . expr T_NEQ expr
   41     | . '`' nestedsubcmd '`'
   42     | . '(' expr ')'
   43 assignstmt: . T_VAR T_ASSIGN expr

    T_NUMBER         shift, and go to state 26
    T_STRING_SCONST  shift, and go to state 27
    T_VAR            shift, and go to state 28
    T_SUB            shift, and go to state 29
    T_DEC            shift, and go to state 30
    T_INC            shift, and go to state 31
    '('              shift, and go to state 32
    '"'              shift, and go to state 33
    '`'              shift, and go to state 34

    expr        go to state 111
    assignstmt  go to state 36


state 74

   19 expr: . T_NUMBER
   20     | . T_STRING_SCONST
   21     | . '"' strlist '"'
   22     | . T_VAR
   23     | . assignstmt
   24     | . expr T_ADD expr
   25     | . expr T_SUB expr
   25     | expr T_SUB . expr
   26     | . expr T_MUL expr
   27     | . expr T_DIV expr
   28     | . expr T_MOD expr
   29     | . expr T_POW expr
   30     | . T_SUB expr
   31     | . T_INC T_VAR
   32     | . T_DEC T_VAR
   33     | . T_VAR T_INC
   34     | . T_VAR T_DEC
   35     | . expr '<' expr
   36     | . expr '>' expr
   37     | . expr T_LEQ expr
   38     | . expr T_GEQ expr
   39     | . expr T_EQ expr
   40     | . expr T_NEQ expr
   41     | . '`' nestedsubcmd '`'
   42     | . '(' expr ')'
   43 assignstmt: . T_VAR T_ASSIGN expr

    T_NUMBER         shift, and go to state 26
    T_STRING_SCONST  shift, and go to state 27
    T_VAR            shift, and go to state 28
    T_SUB            shift, and go to state 29
    T_DEC            shift, and go to state 30
    T_INC            shift, and go to state 31
    '('              shift, and go to state 32
    '"'              shift, and go to state 33
    '`'              shift, and go to state 34

    expr        go to state 112
    assignstmt  go to state 36


state 75

   19 expr: . T_NUMBER
   20     | . T_STRING_SCONST
   21     | . '"' strlist '"'
   22     | . T_VAR
   23     | . assignstmt
   24     | . expr T_ADD expr
   24     | expr T_ADD . expr
   25     | . expr T_SUB expr
   26     | . expr T_MUL expr
   27     | . expr T_DIV expr
   28     | . expr T_MOD expr
   29     | . expr T_POW expr
   30     | . T_SUB expr
   31     | . T_INC T_VAR
   32     | . T_DEC T_VAR
   33     | . T_VAR T_INC
   34     | . T_VAR T_DEC
   35     | . expr '<' expr
   36     | . expr '>' expr
   37     | . expr T_LEQ expr
   38     | . expr T_GEQ expr
   39     | . expr T_EQ expr
   40     | . expr T_NEQ expr
   41     | . '`' nestedsubcmd '`'
   42     | . '(' expr ')'
   43 assignstmt: . T_VAR T_ASSIGN expr

    T_NUMBER         shift, and go to state 26
    T_STRING_SCONST  shift, and go to state 27
    T_VAR            shift, and go to state 28
    T_SUB            shift, and go to state 29
    T_DEC            shift, and go to state 30
    T_INC            shift, and go to state 31
    '('              shift, and go to state 32
    '"'              shift, and go to state 33
    '`'              shift, and go to state 34

    expr        go to state 113
    assignstmt  go to state 36


state 76

   19 expr: . T_NUMBER
   20     | . T_STRING_SCONST
   21     | . '"' strlist '"'
   22     | . T_VAR
   23     | . assignstmt
   24     | . expr T_ADD expr
   25     | . expr T_SUB expr
   26     | . expr T_MUL expr
   27     | . expr T_DIV expr
   28     | . expr T_MOD expr
   28     | expr T_MOD . expr
   29     | . expr T_POW expr
   30     | . T_SUB expr
   31     | . T_INC T_VAR
   32     | . T_DEC T_VAR
   33     | . T_VAR T_INC
   34     | . T_VAR T_DEC
   35     | . expr '<' expr
   36     | . expr '>' expr
   37     | . expr T_LEQ expr
   38     | . expr T_GEQ expr
   39     | . expr T_EQ expr
   40     | . expr T_NEQ expr
   41     | . '`' nestedsubcmd '`'
   42     | . '(' expr ')'
   43 assignstmt: . T_VAR T_ASSIGN expr

    T_NUMBER         shift, and go to state 26
    T_STRING_SCONST  shift, and go to state 27
    T_VAR            shift, and go to state 28
    T_SUB            shift, and go to state 29
    T_DEC            shift, and go to state 30
    T_INC            shift, and go to state 31
    '('              shift, and go to state 32
    '"'              shift, and go to state 33
    '`'              shift, and go to state 34

    expr        go to state 114
    assignstmt  go to state 36


state 77

   19 expr: . T_NUMBER
   20     | . T_STRING_SCONST
   21     | . '"' strlist '"'
   22     | . T_VAR
   23     | . assignstmt
   24     | . expr T_ADD expr
   25     | . expr T_SUB expr
   26     | . expr T_MUL expr
   27     | . expr T_DIV expr
   27     | expr T_DIV . expr
   28     | . expr T_MOD expr
   29     | . expr T_POW expr
   30     | . T_SUB expr
   31     | . T_INC T_VAR
   32     | . T_DEC T_VAR
   33     | . T_VAR T_INC
   34     | . T_VAR T_DEC
   35     | . expr '<' expr
   36     | . expr '>' expr
   37     | . expr T_LEQ expr
   38     | . expr T_GEQ expr
   39     | . expr T_EQ expr
   40     | . expr T_NEQ expr
   41     | . '`' nestedsubcmd '`'
   42     | . '(' expr ')'
   43 assignstmt: . T_VAR T_ASSIGN expr

    T_NUMBER         shift, and go to state 26
    T_STRING_SCONST  shift, and go to state 27
    T_VAR            shift, and go to state 28
    T_SUB            shift, and go to state 29
    T_DEC            shift, and go to state 30
    T_INC            shift, and go to state 31
    '('              shift, and go to state 32
    '"'              shift, and go to state 33
    '`'              shift, and go to state 34

    expr        go to state 115
    assignstmt  go to state 36


state 78

   19 expr: . T_NUMBER
   20     | . T_STRING_SCONST
   21     | . '"' strlist '"'
   22     | . T_VAR
   23     | . assignstmt
   24     | . expr T_ADD expr
   25     | . expr T_SUB expr
   26     | . expr T_MUL expr
   26     | expr T_MUL . expr
   27     | . expr T_DIV expr
   28     | . expr T_MOD expr
   29     | . expr T_POW expr
   30     | . T_SUB expr
   31     | . T_INC T_VAR
   32     | . T_DEC T_VAR
   33     | . T_VAR T_INC
   34     | . T_VAR T_DEC
   35     | . expr '<' expr
   36     | . expr '>' expr
   37     | . expr T_LEQ expr
   38     | . expr T_GEQ expr
   39     | . expr T_EQ expr
   40     | . expr T_NEQ expr
   41     | . '`' nestedsubcmd '`'
   42     | . '(' expr ')'
   43 assignstmt: . T_VAR T_ASSIGN expr

    T_NUMBER         shift, and go to state 26
    T_STRING_SCONST  shift, and go to state 27
    T_VAR            shift, and go to state 28
    T_SUB            shift, and go to state 29
    T_DEC            shift, and go to state 30
    T_INC            shift, and go to state 31
    '('              shift, and go to state 32
    '"'              shift, and go to state 33
    '`'              shift, and go to state 34

    expr        go to state 116
    assignstmt  go to state 36


state 79

   19 expr: . T_NUMBER
   20     | . T_STRING_SCONST
   21     | . '"' strlist '"'
   22     | . T_VAR
   23     | . assignstmt
   24     | . expr T_ADD expr
   25     | . expr T_SUB expr
   26     | . expr T_MUL expr
   27     | . expr T_DIV expr
   28     | . expr T_MOD expr
   29     | . expr T_POW expr
   29     | expr T_POW . expr
   30     | . T_SUB expr
   31     | . T_INC T_VAR
   32     | . T_DEC T_VAR
   33     | . T_VAR T_INC
   34     | . T_VAR T_DEC
   35     | . expr '<' expr
   36     | . expr '>' expr
   37     | . expr T_LEQ expr
   38     | . expr T_GEQ expr
   39     | . expr T_EQ expr
   40     | . expr T_NEQ expr
   41     | . '`' nestedsubcmd '`'
   42     | . '(' expr ')'
   43 assignstmt: . T_VAR T_ASSIGN expr

    T_NUMBER         shift, and go to state 26
    T_STRING_SCONST  shift, and go to state 27
    T_VAR            shift, and go to state 28
    T_SUB            shift, and go to state 29
    T_DEC            shift, and go to state 30
    T_INC            shift, and go to state 31
    '('              shift, and go to state 32
    '"'              shift, and go to state 33
    '`'              shift, and go to state 34

    expr        go to state 117
    assignstmt  go to state 36


state 80

   50 cmdexpr: '(' expr ')' .

    $default  reduce using rule 50 (cmdexpr)


state 81

   16 strcomp: T_STRING .

    $default  reduce using rule 16 (strcomp)


state 82

   17 strcomp: T_VAR .

    $default  reduce using rule 17 (strcomp)


state 83

   18 strcomp: '(' . expr ')'
   19 expr: . T_NUMBER
   20     | . T_STRING_SCONST
   21     | . '"' strlist '"'
   22     | . T_VAR
   23     | . assignstmt
   24     | . expr T_ADD expr
   25     | . expr T_SUB expr
   26     | . expr T_MUL expr
   27     | . expr T_DIV expr
   28     | . expr T_MOD expr
   29     | . expr T_POW expr
   30     | . T_SUB expr
   31     | . T_INC T_VAR
   32     | . T_DEC T_VAR
   33     | . T_VAR T_INC
   34     | . T_VAR T_DEC
   35     | . expr '<' expr
   36     | . expr '>' expr
   37     | . expr T_LEQ expr
   38     | . expr T_GEQ expr
   39     | . expr T_EQ expr
   40     | . expr T_NEQ expr
   41     | . '`' nestedsubcmd '`'
   42     | . '(' expr ')'
   43 assignstmt: . T_VAR T_ASSIGN expr

    T_NUMBER         shift, and go to state 26
    T_STRING_SCONST  shift, and go to state 27
    T_VAR            shift, and go to state 28
    T_SUB            shift, and go to state 29
    T_DEC            shift, and go to state 30
    T_INC            shift, and go to state 31
    '('              shift, and go to state 32
    '"'              shift, and go to state 33
    '`'              shift, and go to state 34

    expr        go to state 118
    assignstmt  go to state 36


state 84

   47 cmdexpr: '"' strlist '"' .

    $default  reduce using rule 47 (cmdexpr)


state 85

   14 strlist: strlist strcomp .

    $default  reduce using rule 14 (strlist)


state 86

   24 expr: expr . T_ADD expr
   25     | expr . T_SUB expr
   26     | expr . T_MUL expr
   27     | expr . T_DIV expr
   28     | expr . T_MOD expr
   29     | expr . T_POW expr
   35     | expr . '<' expr
   36     | expr . '>' expr
   37     | expr . T_LEQ expr
   38     | expr . T_GEQ expr
   39     | expr . T_EQ expr
   40     | expr . T_NEQ expr
   62 nestedcmdexpr: '(' expr . ')'

    '>'    shift, and go to state 68
    '<'    shift, and go to state 69
    T_NEQ  shift, and go to state 70
    T_EQ   shift, and go to state 71
    T_GEQ  shift, and go to state 72
    T_LEQ  shift, and go to state 73
    T_SUB  shift, and go to state 74
    T_ADD  shift, and go to state 75
    T_MOD  shift, and go to state 76
    T_DIV  shift, and go to state 77
    T_MUL  shift, and go to state 78
    T_POW  shift, and go to state 79
    ')'    shift, and go to state 119


state 87

   14 strlist: strlist . strcomp
   16 strcomp: . T_STRING
   17        | . T_VAR
   18        | . '(' expr ')'
   60 nestedcmdexpr: '"' strlist . '"'

    T_STRING  shift, and go to state 81
    T_VAR     shift, and go to state 82
    '('       shift, and go to state 83
    '"'       shift, and go to state 120

    strcomp  go to state 85


state 88

   64 nestedcmdexprlist: nestedcmdexprlist nestedcmdexpr .

    $default  reduce using rule 64 (nestedcmdexprlist)


state 89

   65 nestedsubcmd: nestedcmdexprlist cmdredirin . cmdredirout cmdredirerr cmdredirfd
   74 cmdredirout: . '>' nestedcmdexpr
   75            | . T_OUT2FILE nestedcmdexpr
   76            | . T_APPEND nestedcmdexpr
   77            | .  [T_ERR2OUT, T_OUT2ERR, T_ERR2FILE, '`', '|']

    T_APPEND    shift, and go to state 94
    T_OUT2FILE  shift, and go to state 95
    '>'         shift, and go to state 96

    $default  reduce using rule 77 (cmdredirout)

    cmdredirout  go to state 121


state 90

   49 cmdexpr: '`' nestedsubcmd '`' .

    $default  reduce using rule 49 (cmdexpr)


state 91

   57 nestedcmdexpr: . T_NUMBER
   58              | . T_STRING
   59              | . T_STRING_SCONST
   60              | . '"' strlist '"'
   61              | . T_VAR
   62              | . '(' expr ')'
   63 nestedcmdexprlist: . nestedcmdexpr
   64                  | . nestedcmdexprlist nestedcmdexpr
   66 nestedsubcmd: nestedsubcmd '|' . nestedcmdexprlist cmdredirin cmdredirout cmdredirerr cmdredirfd

    T_NUMBER         shift, and go to state 38
    T_STRING         shift, and go to state 39
    T_STRING_SCONST  shift, and go to state 40
    T_VAR            shift, and go to state 41
    '('              shift, and go to state 42
    '"'              shift, and go to state 43

    nestedcmdexpr      go to state 44
    nestedcmdexprlist  go to state 122


state 92

    6 stmtlistr: stmtlistr ';' stmt .

    $default  reduce using rule 6 (stmtlistr)


state 93

   70 cmdredirin: '<' nestedcmdexpr .

    $default  reduce using rule 70 (cmdredirin)


state 94

   57 nestedcmdexpr: . T_NUMBER
   58              | . T_STRING
   59              | . T_STRING_SCONST
   60              | . '"' strlist '"'
   61              | . T_VAR
   62              | . '(' expr ')'
   76 cmdredirout: T_APPEND . nestedcmdexpr

    T_NUMBER         shift, and go to state 38
    T_STRING         shift, and go to state 39
    T_STRING_SCONST  shift, and go to state 40
    T_VAR            shift, and go to state 41
    '('              shift, and go to state 42
    '"'              shift, and go to state 43

    nestedcmdexpr  go to state 123


state 95

   57 nestedcmdexpr: . T_NUMBER
   58              | . T_STRING
   59              | . T_STRING_SCONST
   60              | . '"' strlist '"'
   61              | . T_VAR
   62              | . '(' expr ')'
   75 cmdredirout: T_OUT2FILE . nestedcmdexpr

    T_NUMBER         shift, and go to state 38
    T_STRING         shift, and go to state 39
    T_STRING_SCONST  shift, and go to state 40
    T_VAR            shift, and go to state 41
    '('              shift, and go to state 42
    '"'              shift, and go to state 43

    nestedcmdexpr  go to state 124


state 96

   57 nestedcmdexpr: . T_NUMBER
   58              | . T_STRING
   59              | . T_STRING_SCONST
   60              | . '"' strlist '"'
   61              | . T_VAR
   62              | . '(' expr ')'
   74 cmdredirout: '>' . nestedcmdexpr

    T_NUMBER         shift, and go to state 38
    T_STRING         shift, and go to state 39
    T_STRING_SCONST  shift, and go to state 40
    T_VAR            shift, and go to state 41
    '('              shift, and go to state 42
    '"'              shift, and go to state 43

    nestedcmdexpr  go to state 125


state 97

   55 subcmd: cmdexprlist cmdredirin cmdredirout . cmdredirerr cmdredirfd
   72 cmdredirerr: . T_ERR2FILE nestedcmdexpr
   73            | .  [$end, T_ELSE, T_FI, T_DONE, T_END, T_ERR2OUT, T_OUT2ERR, ';', '&', '|']

    T_ERR2FILE  shift, and go to state 126

    $default  reduce using rule 73 (cmdredirerr)

    cmdredirerr  go to state 127


state 98

   44 cmdexpr: . T_NUMBER
   45        | . T_STRING
   46        | . T_STRING_SCONST
   47        | . '"' strlist '"'
   48        | . T_VAR
   49        | . '`' nestedsubcmd '`'
   50        | . '(' expr ')'
   52 cmdexprlist: cmdexprlist . cmdexpr
   56 subcmd: subcmd '|' cmdexprlist . cmdredirin cmdredirout cmdredirerr cmdredirfd
   70 cmdredirin: . '<' nestedcmdexpr
   71           | .  [$end, T_ELSE, T_FI, T_DONE, T_END, T_ERR2OUT, T_OUT2ERR, T_APPEND, T_ERR2FILE, T_OUT2FILE, '>', ';', '&', '|']

    T_NUMBER         shift, and go to state 5
    T_STRING         shift, and go to state 6
    T_STRING_SCONST  shift, and go to state 7
    T_VAR            shift, and go to state 49
    '<'              shift, and go to state 50
    '('              shift, and go to state 9
    '"'              shift, and go to state 10
    '`'              shift, and go to state 11

    $default  reduce using rule 71 (cmdredirin)

    cmdexpr     go to state 51
    cmdredirin  go to state 128


state 99

    8 stmt: T_IF '(' expr ')' . T_THEN stmtlist T_FI
    9     | T_IF '(' expr ')' . T_THEN stmtlist T_ELSE stmtlist T_FI

    T_THEN  shift, and go to state 129


state 100

   10 stmt: T_FOR '(' expr ';' . expr ';' expr ')' T_DO stmtlist T_DONE
   19 expr: . T_NUMBER
   20     | . T_STRING_SCONST
   21     | . '"' strlist '"'
   22     | . T_VAR
   23     | . assignstmt
   24     | . expr T_ADD expr
   25     | . expr T_SUB expr
   26     | . expr T_MUL expr
   27     | . expr T_DIV expr
   28     | . expr T_MOD expr
   29     | . expr T_POW expr
   30     | . T_SUB expr
   31     | . T_INC T_VAR
   32     | . T_DEC T_VAR
   33     | . T_VAR T_INC
   34     | . T_VAR T_DEC
   35     | . expr '<' expr
   36     | . expr '>' expr
   37     | . expr T_LEQ expr
   38     | . expr T_GEQ expr
   39     | . expr T_EQ expr
   40     | . expr T_NEQ expr
   41     | . '`' nestedsubcmd '`'
   42     | . '(' expr ')'
   43 assignstmt: . T_VAR T_ASSIGN expr

    T_NUMBER         shift, and go to state 26
    T_STRING_SCONST  shift, and go to state 27
    T_VAR            shift, and go to state 28
    T_SUB            shift, and go to state 29
    T_DEC            shift, and go to state 30
    T_INC            shift, and go to state 31
    '('              shift, and go to state 32
    '"'              shift, and go to state 33
    '`'              shift, and go to state 34

    expr        go to state 130
    assignstmt  go to state 36


state 101

   11 stmt: T_WHILE '(' expr ')' . T_DO stmtlist T_DONE

    T_DO  shift, and go to state 131


state 102

    7 stmt: T_FUNCTION T_STRING T_BEGIN stmtlist . T_END

    T_END  shift, and go to state 132


state 103

   42 expr: '(' expr ')' .

    $default  reduce using rule 42 (expr)


state 104

   21 expr: '"' strlist '"' .

    $default  reduce using rule 21 (expr)


state 105

   41 expr: '`' nestedsubcmd '`' .

    $default  reduce using rule 41 (expr)


state 106

   24 expr: expr . T_ADD expr
   25     | expr . T_SUB expr
   26     | expr . T_MUL expr
   27     | expr . T_DIV expr
   28     | expr . T_MOD expr
   29     | expr . T_POW expr
   35     | expr . '<' expr
   36     | expr . '>' expr
   36     | expr '>' expr .  [$end, T_ELSE, T_FI, T_DONE, T_END, ';', ')']
   37     | expr . T_LEQ expr
   38     | expr . T_GEQ expr
   39     | expr . T_EQ expr
   40     | expr . T_NEQ expr

    T_SUB  shift, and go to state 74
    T_ADD  shift, and go to state 75
    T_MOD  shift, and go to state 76
    T_DIV  shift, and go to state 77
    T_MUL  shift, and go to state 78
    T_POW  shift, and go to state 79

    '>'    error (nonassociative)
    '<'    error (nonassociative)
    T_NEQ  error (nonassociative)
    T_EQ   error (nonassociative)
    T_GEQ  error (nonassociative)
    T_LEQ  error (nonassociative)

    $default  reduce using rule 36 (expr)

    Conflict between rule 36 and token '>' resolved as an error (%nonassoc '>').
    Conflict between rule 36 and token '<' resolved as an error (%nonassoc '<').
    Conflict between rule 36 and token T_NEQ resolved as an error (%nonassoc T_NEQ).
    Conflict between rule 36 and token T_EQ resolved as an error (%nonassoc T_EQ).
    Conflict between rule 36 and token T_GEQ resolved as an error (%nonassoc T_GEQ).
    Conflict between rule 36 and token T_LEQ resolved as an error (%nonassoc T_LEQ).
    Conflict between rule 36 and token T_SUB resolved as shift ('>' < T_SUB).
    Conflict between rule 36 and token T_ADD resolved as shift ('>' < T_ADD).
    Conflict between rule 36 and token T_MOD resolved as shift ('>' < T_MOD).
    Conflict between rule 36 and token T_DIV resolved as shift ('>' < T_DIV).
    Conflict between rule 36 and token T_MUL resolved as shift ('>' < T_MUL).
    Conflict between rule 36 and token T_POW resolved as shift ('>' < T_POW).


state 107

   24 expr: expr . T_ADD expr
   25     | expr . T_SUB expr
   26     | expr . T_MUL expr
   27     | expr . T_DIV expr
   28     | expr . T_MOD expr
   29     | expr . T_POW expr
   35     | expr . '<' expr
   35     | expr '<' expr .  [$end, T_ELSE, T_FI, T_DONE, T_END, ';', ')']
   36     | expr . '>' expr
   37     | expr . T_LEQ expr
   38     | expr . T_GEQ expr
   39     | expr . T_EQ expr
   40     | expr . T_NEQ expr

    T_SUB  shift, and go to state 74
    T_ADD  shift, and go to state 75
    T_MOD  shift, and go to state 76
    T_DIV  shift, and go to state 77
    T_MUL  shift, and go to state 78
    T_POW  shift, and go to state 79

    '>'    error (nonassociative)
    '<'    error (nonassociative)
    T_NEQ  error (nonassociative)
    T_EQ   error (nonassociative)
    T_GEQ  error (nonassociative)
    T_LEQ  error (nonassociative)

    $default  reduce using rule 35 (expr)

    Conflict between rule 35 and token '>' resolved as an error (%nonassoc '>').
    Conflict between rule 35 and token '<' resolved as an error (%nonassoc '<').
    Conflict between rule 35 and token T_NEQ resolved as an error (%nonassoc T_NEQ).
    Conflict between rule 35 and token T_EQ resolved as an error (%nonassoc T_EQ).
    Conflict between rule 35 and token T_GEQ resolved as an error (%nonassoc T_GEQ).
    Conflict between rule 35 and token T_LEQ resolved as an error (%nonassoc T_LEQ).
    Conflict between rule 35 and token T_SUB resolved as shift ('<' < T_SUB).
    Conflict between rule 35 and token T_ADD resolved as shift ('<' < T_ADD).
    Conflict between rule 35 and token T_MOD resolved as shift ('<' < T_MOD).
    Conflict between rule 35 and token T_DIV resolved as shift ('<' < T_DIV).
    Conflict between rule 35 and token T_MUL resolved as shift ('<' < T_MUL).
    Conflict between rule 35 and token T_POW resolved as shift ('<' < T_POW).


state 108

   24 expr: expr . T_ADD expr
   25     | expr . T_SUB expr
   26     | expr . T_MUL expr
   27     | expr . T_DIV expr
   28     | expr . T_MOD expr
   29     | expr . T_POW expr
   35     | expr . '<' expr
   36     | expr . '>' expr
   37     | expr . T_LEQ expr
   38     | expr . T_GEQ expr
   39     | expr . T_EQ expr
   40     | expr . T_NEQ expr
   40     | expr T_NEQ expr .  [$end, T_ELSE, T_FI, T_DONE, T_END, ';', ')']

    T_SUB  shift, and go to state 74
    T_ADD  shift, and go to state 75
    T_MOD  shift, and go to state 76
    T_DIV  shift, and go to state 77
    T_MUL  shift, and go to state 78
    T_POW  shift, and go to state 79

    '>'    error (nonassociative)
    '<'    error (nonassociative)
    T_NEQ  error (nonassociative)
    T_EQ   error (nonassociative)
    T_GEQ  error (nonassociative)
    T_LEQ  error (nonassociative)

    $default  reduce using rule 40 (expr)

    Conflict between rule 40 and token '>' resolved as an error (%nonassoc '>').
    Conflict between rule 40 and token '<' resolved as an error (%nonassoc '<').
    Conflict between rule 40 and token T_NEQ resolved as an error (%nonassoc T_NEQ).
    Conflict between rule 40 and token T_EQ resolved as an error (%nonassoc T_EQ).
    Conflict between rule 40 and token T_GEQ resolved as an error (%nonassoc T_GEQ).
    Conflict between rule 40 and token T_LEQ resolved as an error (%nonassoc T_LEQ).
    Conflict between rule 40 and token T_SUB resolved as shift (T_NEQ < T_SUB).
    Conflict between rule 40 and token T_ADD resolved as shift (T_NEQ < T_ADD).
    Conflict between rule 40 and token T_MOD resolved as shift (T_NEQ < T_MOD).
    Conflict between rule 40 and token T_DIV resolved as shift (T_NEQ < T_DIV).
    Conflict between rule 40 and token T_MUL resolved as shift (T_NEQ < T_MUL).
    Conflict between rule 40 and token T_POW resolved as shift (T_NEQ < T_POW).


state 109

   24 expr: expr . T_ADD expr
   25     | expr . T_SUB expr
   26     | expr . T_MUL expr
   27     | expr . T_DIV expr
   28     | expr . T_MOD expr
   29     | expr . T_POW expr
   35     | expr . '<' expr
   36     | expr . '>' expr
   37     | expr . T_LEQ expr
   38     | expr . T_GEQ expr
   39     | expr . T_EQ expr
   39     | expr T_EQ expr .  [$end, T_ELSE, T_FI, T_DONE, T_END, ';', ')']
   40     | expr . T_NEQ expr

    T_SUB  shift, and go to state 74
    T_ADD  shift, and go to state 75
    T_MOD  shift, and go to state 76
    T_DIV  shift, and go to state 77
    T_MUL  shift, and go to state 78
    T_POW  shift, and go to state 79

    '>'    error (nonassociative)
    '<'    error (nonassociative)
    T_NEQ  error (nonassociative)
    T_EQ   error (nonassociative)
    T_GEQ  error (nonassociative)
    T_LEQ  error (nonassociative)

    $default  reduce using rule 39 (expr)

    Conflict between rule 39 and token '>' resolved as an error (%nonassoc '>').
    Conflict between rule 39 and token '<' resolved as an error (%nonassoc '<').
    Conflict between rule 39 and token T_NEQ resolved as an error (%nonassoc T_NEQ).
    Conflict between rule 39 and token T_EQ resolved as an error (%nonassoc T_EQ).
    Conflict between rule 39 and token T_GEQ resolved as an error (%nonassoc T_GEQ).
    Conflict between rule 39 and token T_LEQ resolved as an error (%nonassoc T_LEQ).
    Conflict between rule 39 and token T_SUB resolved as shift (T_EQ < T_SUB).
    Conflict between rule 39 and token T_ADD resolved as shift (T_EQ < T_ADD).
    Conflict between rule 39 and token T_MOD resolved as shift (T_EQ < T_MOD).
    Conflict between rule 39 and token T_DIV resolved as shift (T_EQ < T_DIV).
    Conflict between rule 39 and token T_MUL resolved as shift (T_EQ < T_MUL).
    Conflict between rule 39 and token T_POW resolved as shift (T_EQ < T_POW).


state 110

   24 expr: expr . T_ADD expr
   25     | expr . T_SUB expr
   26     | expr . T_MUL expr
   27     | expr . T_DIV expr
   28     | expr . T_MOD expr
   29     | expr . T_POW expr
   35     | expr . '<' expr
   36     | expr . '>' expr
   37     | expr . T_LEQ expr
   38     | expr . T_GEQ expr
   38     | expr T_GEQ expr .  [$end, T_ELSE, T_FI, T_DONE, T_END, ';', ')']
   39     | expr . T_EQ expr
   40     | expr . T_NEQ expr

    T_SUB  shift, and go to state 74
    T_ADD  shift, and go to state 75
    T_MOD  shift, and go to state 76
    T_DIV  shift, and go to state 77
    T_MUL  shift, and go to state 78
    T_POW  shift, and go to state 79

    '>'    error (nonassociative)
    '<'    error (nonassociative)
    T_NEQ  error (nonassociative)
    T_EQ   error (nonassociative)
    T_GEQ  error (nonassociative)
    T_LEQ  error (nonassociative)

    $default  reduce using rule 38 (expr)

    Conflict between rule 38 and token '>' resolved as an error (%nonassoc '>').
    Conflict between rule 38 and token '<' resolved as an error (%nonassoc '<').
    Conflict between rule 38 and token T_NEQ resolved as an error (%nonassoc T_NEQ).
    Conflict between rule 38 and token T_EQ resolved as an error (%nonassoc T_EQ).
    Conflict between rule 38 and token T_GEQ resolved as an error (%nonassoc T_GEQ).
    Conflict between rule 38 and token T_LEQ resolved as an error (%nonassoc T_LEQ).
    Conflict between rule 38 and token T_SUB resolved as shift (T_GEQ < T_SUB).
    Conflict between rule 38 and token T_ADD resolved as shift (T_GEQ < T_ADD).
    Conflict between rule 38 and token T_MOD resolved as shift (T_GEQ < T_MOD).
    Conflict between rule 38 and token T_DIV resolved as shift (T_GEQ < T_DIV).
    Conflict between rule 38 and token T_MUL resolved as shift (T_GEQ < T_MUL).
    Conflict between rule 38 and token T_POW resolved as shift (T_GEQ < T_POW).


state 111

   24 expr: expr . T_ADD expr
   25     | expr . T_SUB expr
   26     | expr . T_MUL expr
   27     | expr . T_DIV expr
   28     | expr . T_MOD expr
   29     | expr . T_POW expr
   35     | expr . '<' expr
   36     | expr . '>' expr
   37     | expr . T_LEQ expr
   37     | expr T_LEQ expr .  [$end, T_ELSE, T_FI, T_DONE, T_END, ';', ')']
   38     | expr . T_GEQ expr
   39     | expr . T_EQ expr
   40     | expr . T_NEQ expr

    T_SUB  shift, and go to state 74
    T_ADD  shift, and go to state 75
    T_MOD  shift, and go to state 76
    T_DIV  shift, and go to state 77
    T_MUL  shift, and go to state 78
    T_POW  shift, and go to state 79

    '>'    error (nonassociative)
    '<'    error (nonassociative)
    T_NEQ  error (nonassociative)
    T_EQ   error (nonassociative)
    T_GEQ  error (nonassociative)
    T_LEQ  error (nonassociative)

    $default  reduce using rule 37 (expr)

    Conflict between rule 37 and token '>' resolved as an error (%nonassoc '>').
    Conflict between rule 37 and token '<' resolved as an error (%nonassoc '<').
    Conflict between rule 37 and token T_NEQ resolved as an error (%nonassoc T_NEQ).
    Conflict between rule 37 and token T_EQ resolved as an error (%nonassoc T_EQ).
    Conflict between rule 37 and token T_GEQ resolved as an error (%nonassoc T_GEQ).
    Conflict between rule 37 and token T_LEQ resolved as an error (%nonassoc T_LEQ).
    Conflict between rule 37 and token T_SUB resolved as shift (T_LEQ < T_SUB).
    Conflict between rule 37 and token T_ADD resolved as shift (T_LEQ < T_ADD).
    Conflict between rule 37 and token T_MOD resolved as shift (T_LEQ < T_MOD).
    Conflict between rule 37 and token T_DIV resolved as shift (T_LEQ < T_DIV).
    Conflict between rule 37 and token T_MUL resolved as shift (T_LEQ < T_MUL).
    Conflict between rule 37 and token T_POW resolved as shift (T_LEQ < T_POW).


state 112

   24 expr: expr . T_ADD expr
   25     | expr . T_SUB expr
   25     | expr T_SUB expr .  [$end, T_ELSE, T_FI, T_DONE, T_END, '>', '<', T_NEQ, T_EQ, T_GEQ, T_LEQ, T_SUB, T_ADD, ';', ')']
   26     | expr . T_MUL expr
   27     | expr . T_DIV expr
   28     | expr . T_MOD expr
   29     | expr . T_POW expr
   35     | expr . '<' expr
   36     | expr . '>' expr
   37     | expr . T_LEQ expr
   38     | expr . T_GEQ expr
   39     | expr . T_EQ expr
   40     | expr . T_NEQ expr

    T_MOD  shift, and go to state 76
    T_DIV  shift, and go to state 77
    T_MUL  shift, and go to state 78
    T_POW  shift, and go to state 79

    $default  reduce using rule 25 (expr)

    Conflict between rule 25 and token '>' resolved as reduce ('>' < T_SUB).
    Conflict between rule 25 and token '<' resolved as reduce ('<' < T_SUB).
    Conflict between rule 25 and token T_NEQ resolved as reduce (T_NEQ < T_SUB).
    Conflict between rule 25 and token T_EQ resolved as reduce (T_EQ < T_SUB).
    Conflict between rule 25 and token T_GEQ resolved as reduce (T_GEQ < T_SUB).
    Conflict between rule 25 and token T_LEQ resolved as reduce (T_LEQ < T_SUB).
    Conflict between rule 25 and token T_SUB resolved as reduce (%left T_SUB).
    Conflict between rule 25 and token T_ADD resolved as reduce (%left T_ADD).
    Conflict between rule 25 and token T_MOD resolved as shift (T_SUB < T_MOD).
    Conflict between rule 25 and token T_DIV resolved as shift (T_SUB < T_DIV).
    Conflict between rule 25 and token T_MUL resolved as shift (T_SUB < T_MUL).
    Conflict between rule 25 and token T_POW resolved as shift (T_SUB < T_POW).


state 113

   24 expr: expr . T_ADD expr
   24     | expr T_ADD expr .  [$end, T_ELSE, T_FI, T_DONE, T_END, '>', '<', T_NEQ, T_EQ, T_GEQ, T_LEQ, T_SUB, T_ADD, ';', ')']
   25     | expr . T_SUB expr
   26     | expr . T_MUL expr
   27     | expr . T_DIV expr
   28     | expr . T_MOD expr
   29     | expr . T_POW expr
   35     | expr . '<' expr
   36     | expr . '>' expr
   37     | expr . T_LEQ expr
   38     | expr . T_GEQ expr
   39     | expr . T_EQ expr
   40     | expr . T_NEQ expr

    T_MOD  shift, and go to state 76
    T_DIV  shift, and go to state 77
    T_MUL  shift, and go to state 78
    T_POW  shift, and go to state 79

    $default  reduce using rule 24 (expr)

    Conflict between rule 24 and token '>' resolved as reduce ('>' < T_ADD).
    Conflict between rule 24 and token '<' resolved as reduce ('<' < T_ADD).
    Conflict between rule 24 and token T_NEQ resolved as reduce (T_NEQ < T_ADD).
    Conflict between rule 24 and token T_EQ resolved as reduce (T_EQ < T_ADD).
    Conflict between rule 24 and token T_GEQ resolved as reduce (T_GEQ < T_ADD).
    Conflict between rule 24 and token T_LEQ resolved as reduce (T_LEQ < T_ADD).
    Conflict between rule 24 and token T_SUB resolved as reduce (%left T_SUB).
    Conflict between rule 24 and token T_ADD resolved as reduce (%left T_ADD).
    Conflict between rule 24 and token T_MOD resolved as shift (T_ADD < T_MOD).
    Conflict between rule 24 and token T_DIV resolved as shift (T_ADD < T_DIV).
    Conflict between rule 24 and token T_MUL resolved as shift (T_ADD < T_MUL).
    Conflict between rule 24 and token T_POW resolved as shift (T_ADD < T_POW).


state 114

   24 expr: expr . T_ADD expr
   25     | expr . T_SUB expr
   26     | expr . T_MUL expr
   27     | expr . T_DIV expr
   28     | expr . T_MOD expr
   28     | expr T_MOD expr .  [$end, T_ELSE, T_FI, T_DONE, T_END, '>', '<', T_NEQ, T_EQ, T_GEQ, T_LEQ, T_SUB, T_ADD, T_MOD, T_DIV, T_MUL, ';', ')']
   29     | expr . T_POW expr
   35     | expr . '<' expr
   36     | expr . '>' expr
   37     | expr . T_LEQ expr
   38     | expr . T_GEQ expr
   39     | expr . T_EQ expr
   40     | expr . T_NEQ expr

    T_POW  shift, and go to state 79

    $default  reduce using rule 28 (expr)

    Conflict between rule 28 and token '>' resolved as reduce ('>' < T_MOD).
    Conflict between rule 28 and token '<' resolved as reduce ('<' < T_MOD).
    Conflict between rule 28 and token T_NEQ resolved as reduce (T_NEQ < T_MOD).
    Conflict between rule 28 and token T_EQ resolved as reduce (T_EQ < T_MOD).
    Conflict between rule 28 and token T_GEQ resolved as reduce (T_GEQ < T_MOD).
    Conflict between rule 28 and token T_LEQ resolved as reduce (T_LEQ < T_MOD).
    Conflict between rule 28 and token T_SUB resolved as reduce (T_SUB < T_MOD).
    Conflict between rule 28 and token T_ADD resolved as reduce (T_ADD < T_MOD).
    Conflict between rule 28 and token T_MOD resolved as reduce (%left T_MOD).
    Conflict between rule 28 and token T_DIV resolved as reduce (%left T_DIV).
    Conflict between rule 28 and token T_MUL resolved as reduce (%left T_MUL).
    Conflict between rule 28 and token T_POW resolved as shift (T_MOD < T_POW).


state 115

   24 expr: expr . T_ADD expr
   25     | expr . T_SUB expr
   26     | expr . T_MUL expr
   27     | expr . T_DIV expr
   27     | expr T_DIV expr .  [$end, T_ELSE, T_FI, T_DONE, T_END, '>', '<', T_NEQ, T_EQ, T_GEQ, T_LEQ, T_SUB, T_ADD, T_MOD, T_DIV, T_MUL, ';', ')']
   28     | expr . T_MOD expr
   29     | expr . T_POW expr
   35     | expr . '<' expr
   36     | expr . '>' expr
   37     | expr . T_LEQ expr
   38     | expr . T_GEQ expr
   39     | expr . T_EQ expr
   40     | expr . T_NEQ expr

    T_POW  shift, and go to state 79

    $default  reduce using rule 27 (expr)

    Conflict between rule 27 and token '>' resolved as reduce ('>' < T_DIV).
    Conflict between rule 27 and token '<' resolved as reduce ('<' < T_DIV).
    Conflict between rule 27 and token T_NEQ resolved as reduce (T_NEQ < T_DIV).
    Conflict between rule 27 and token T_EQ resolved as reduce (T_EQ < T_DIV).
    Conflict between rule 27 and token T_GEQ resolved as reduce (T_GEQ < T_DIV).
    Conflict between rule 27 and token T_LEQ resolved as reduce (T_LEQ < T_DIV).
    Conflict between rule 27 and token T_SUB resolved as reduce (T_SUB < T_DIV).
    Conflict between rule 27 and token T_ADD resolved as reduce (T_ADD < T_DIV).
    Conflict between rule 27 and token T_MOD resolved as reduce (%left T_MOD).
    Conflict between rule 27 and token T_DIV resolved as reduce (%left T_DIV).
    Conflict between rule 27 and token T_MUL resolved as reduce (%left T_MUL).
    Conflict between rule 27 and token T_POW resolved as shift (T_DIV < T_POW).


state 116

   24 expr: expr . T_ADD expr
   25     | expr . T_SUB expr
   26     | expr . T_MUL expr
   26     | expr T_MUL expr .  [$end, T_ELSE, T_FI, T_DONE, T_END, '>', '<', T_NEQ, T_EQ, T_GEQ, T_LEQ, T_SUB, T_ADD, T_MOD, T_DIV, T_MUL, ';', ')']
   27     | expr . T_DIV expr
   28     | expr . T_MOD expr
   29     | expr . T_POW expr
   35     | expr . '<' expr
   36     | expr . '>' expr
   37     | expr . T_LEQ expr
   38     | expr . T_GEQ expr
   39     | expr . T_EQ expr
   40     | expr . T_NEQ expr

    T_POW  shift, and go to state 79

    $default  reduce using rule 26 (expr)

    Conflict between rule 26 and token '>' resolved as reduce ('>' < T_MUL).
    Conflict between rule 26 and token '<' resolved as reduce ('<' < T_MUL).
    Conflict between rule 26 and token T_NEQ resolved as reduce (T_NEQ < T_MUL).
    Conflict between rule 26 and token T_EQ resolved as reduce (T_EQ < T_MUL).
    Conflict between rule 26 and token T_GEQ resolved as reduce (T_GEQ < T_MUL).
    Conflict between rule 26 and token T_LEQ resolved as reduce (T_LEQ < T_MUL).
    Conflict between rule 26 and token T_SUB resolved as reduce (T_SUB < T_MUL).
    Conflict between rule 26 and token T_ADD resolved as reduce (T_ADD < T_MUL).
    Conflict between rule 26 and token T_MOD resolved as reduce (%left T_MOD).
    Conflict between rule 26 and token T_DIV resolved as reduce (%left T_DIV).
    Conflict between rule 26 and token T_MUL resolved as reduce (%left T_MUL).
    Conflict between rule 26 and token T_POW resolved as shift (T_MUL < T_POW).


state 117

   24 expr: expr . T_ADD expr
   25     | expr . T_SUB expr
   26     | expr . T_MUL expr
   27     | expr . T_DIV expr
   28     | expr . T_MOD expr
   29     | expr . T_POW expr
   29     | expr T_POW expr .  [$end, T_ELSE, T_FI, T_DONE, T_END, '>', '<', T_NEQ, T_EQ, T_GEQ, T_LEQ, T_SUB, T_ADD, T_MOD, T_DIV, T_MUL, ';', ')']
   35     | expr . '<' expr
   36     | expr . '>' expr
   37     | expr . T_LEQ expr
   38     | expr . T_GEQ expr
   39     | expr . T_EQ expr
   40     | expr . T_NEQ expr

    T_POW  shift, and go to state 79

    $default  reduce using rule 29 (expr)

    Conflict between rule 29 and token '>' resolved as reduce ('>' < T_POW).
    Conflict between rule 29 and token '<' resolved as reduce ('<' < T_POW).
    Conflict between rule 29 and token T_NEQ resolved as reduce (T_NEQ < T_POW).
    Conflict between rule 29 and token T_EQ resolved as reduce (T_EQ < T_POW).
    Conflict between rule 29 and token T_GEQ resolved as reduce (T_GEQ < T_POW).
    Conflict between rule 29 and token T_LEQ resolved as reduce (T_LEQ < T_POW).
    Conflict between rule 29 and token T_SUB resolved as reduce (T_SUB < T_POW).
    Conflict between rule 29 and token T_ADD resolved as reduce (T_ADD < T_POW).
    Conflict between rule 29 and token T_MOD resolved as reduce (T_MOD < T_POW).
    Conflict between rule 29 and token T_DIV resolved as reduce (T_DIV < T_POW).
    Conflict between rule 29 and token T_MUL resolved as reduce (T_MUL < T_POW).
    Conflict between rule 29 and token T_POW resolved as shift (%right T_POW).


state 118

   18 strcomp: '(' expr . ')'
   24 expr: expr . T_ADD expr
   25     | expr . T_SUB expr
   26     | expr . T_MUL expr
   27     | expr . T_DIV expr
   28     | expr . T_MOD expr
   29     | expr . T_POW expr
   35     | expr . '<' expr
   36     | expr . '>' expr
   37     | expr . T_LEQ expr
   38     | expr . T_GEQ expr
   39     | expr . T_EQ expr
   40     | expr . T_NEQ expr

    '>'    shift, and go to state 68
    '<'    shift, and go to state 69
    T_NEQ  shift, and go to state 70
    T_EQ   shift, and go to state 71
    T_GEQ  shift, and go to state 72
    T_LEQ  shift, and go to state 73
    T_SUB  shift, and go to state 74
    T_ADD  shift, and go to state 75
    T_MOD  shift, and go to state 76
    T_DIV  shift, and go to state 77
    T_MUL  shift, and go to state 78
    T_POW  shift, and go to state 79
    ')'    shift, and go to state 133


state 119

   62 nestedcmdexpr: '(' expr ')' .

    $default  reduce using rule 62 (nestedcmdexpr)


state 120

   60 nestedcmdexpr: '"' strlist '"' .

    $default  reduce using rule 60 (nestedcmdexpr)


state 121

   65 nestedsubcmd: nestedcmdexprlist cmdredirin cmdredirout . cmdredirerr cmdredirfd
   72 cmdredirerr: . T_ERR2FILE nestedcmdexpr
   73            | .  [T_ERR2OUT, T_OUT2ERR, '`', '|']

    T_ERR2FILE  shift, and go to state 126

    $default  reduce using rule 73 (cmdredirerr)

    cmdredirerr  go to state 134


state 122

   57 nestedcmdexpr: . T_NUMBER
   58              | . T_STRING
   59              | . T_STRING_SCONST
   60              | . '"' strlist '"'
   61              | . T_VAR
   62              | . '(' expr ')'
   64 nestedcmdexprlist: nestedcmdexprlist . nestedcmdexpr
   66 nestedsubcmd: nestedsubcmd '|' nestedcmdexprlist . cmdredirin cmdredirout cmdredirerr cmdredirfd
   70 cmdredirin: . '<' nestedcmdexpr
   71           | .  [T_ERR2OUT, T_OUT2ERR, T_APPEND, T_ERR2FILE, T_OUT2FILE, '>', '`', '|']

    T_NUMBER         shift, and go to state 38
    T_STRING         shift, and go to state 39
    T_STRING_SCONST  shift, and go to state 40
    T_VAR            shift, and go to state 41
    '<'              shift, and go to state 50
    '('              shift, and go to state 42
    '"'              shift, and go to state 43

    $default  reduce using rule 71 (cmdredirin)

    nestedcmdexpr  go to state 88
    cmdredirin     go to state 135


state 123

   76 cmdredirout: T_APPEND nestedcmdexpr .

    $default  reduce using rule 76 (cmdredirout)


state 124

   75 cmdredirout: T_OUT2FILE nestedcmdexpr .

    $default  reduce using rule 75 (cmdredirout)


state 125

   74 cmdredirout: '>' nestedcmdexpr .

    $default  reduce using rule 74 (cmdredirout)


state 126

   57 nestedcmdexpr: . T_NUMBER
   58              | . T_STRING
   59              | . T_STRING_SCONST
   60              | . '"' strlist '"'
   61              | . T_VAR
   62              | . '(' expr ')'
   72 cmdredirerr: T_ERR2FILE . nestedcmdexpr

    T_NUMBER         shift, and go to state 38
    T_STRING         shift, and go to state 39
    T_STRING_SCONST  shift, and go to state 40
    T_VAR            shift, and go to state 41
    '('              shift, and go to state 42
    '"'              shift, and go to state 43

    nestedcmdexpr  go to state 136


state 127

   55 subcmd: cmdexprlist cmdredirin cmdredirout cmdredirerr . cmdredirfd
   67 cmdredirfd: . T_ERR2OUT
   68           | . T_OUT2ERR
   69           | .  [$end, T_ELSE, T_FI, T_DONE, T_END, ';', '&', '|']

    T_ERR2OUT  shift, and go to state 137
    T_OUT2ERR  shift, and go to state 138

    $default  reduce using rule 69 (cmdredirfd)

    cmdredirfd  go to state 139


state 128

   56 subcmd: subcmd '|' cmdexprlist cmdredirin . cmdredirout cmdredirerr cmdredirfd
   74 cmdredirout: . '>' nestedcmdexpr
   75            | . T_OUT2FILE nestedcmdexpr
   76            | . T_APPEND nestedcmdexpr
   77            | .  [$end, T_ELSE, T_FI, T_DONE, T_END, T_ERR2OUT, T_OUT2ERR, T_ERR2FILE, ';', '&', '|']

    T_APPEND    shift, and go to state 94
    T_OUT2FILE  shift, and go to state 95
    '>'         shift, and go to state 96

    $default  reduce using rule 77 (cmdredirout)

    cmdredirout  go to state 140


state 129

    2 stmtlist: .  [T_ELSE, T_FI]
    3         | . stmtlistr
    4         | . stmtlistr ';'
    5 stmtlistr: . stmt
    6          | . stmtlistr ';' stmt
    7 stmt: . T_FUNCTION T_STRING T_BEGIN stmtlist T_END
    8     | . T_IF '(' expr ')' T_THEN stmtlist T_FI
    8     | T_IF '(' expr ')' T_THEN . stmtlist T_FI
    9     | . T_IF '(' expr ')' T_THEN stmtlist T_ELSE stmtlist T_FI
    9     | T_IF '(' expr ')' T_THEN . stmtlist T_ELSE stmtlist T_FI
   10     | . T_FOR '(' expr ';' expr ';' expr ')' T_DO stmtlist T_DONE
   11     | . T_WHILE '(' expr ')' T_DO stmtlist T_DONE
   12     | . assignstmt
   13     | . cmd
   43 assignstmt: . T_VAR T_ASSIGN expr
   44 cmdexpr: . T_NUMBER
   45        | . T_STRING
   46        | . T_STRING_SCONST
   47        | . '"' strlist '"'
   48        | . T_VAR
   49        | . '`' nestedsubcmd '`'
   50        | . '(' expr ')'
   51 cmdexprlist: . cmdexpr
   52            | . cmdexprlist cmdexpr
   53 cmd: . subcmd
   54    | . subcmd '&'
   55 subcmd: . cmdexprlist cmdredirin cmdredirout cmdredirerr cmdredirfd
   56       | . subcmd '|' cmdexprlist cmdredirin cmdredirout cmdredirerr cmdredirfd

    T_IF             shift, and go to state 1
    T_FOR            shift, and go to state 2
    T_WHILE          shift, and go to state 3
    T_FUNCTION       shift, and go to state 4
    T_NUMBER         shift, and go to state 5
    T_STRING         shift, and go to state 6
    T_STRING_SCONST  shift, and go to state 7
    T_VAR            shift, and go to state 8
    '('              shift, and go to state 9
    '"'              shift, and go to state 10
    '`'              shift, and go to state 11

    $default  reduce using rule 2 (stmtlist)

    stmtlist     go to state 141
    stmtlistr    go to state 14
    stmt         go to state 15
    assignstmt   go to state 16
    cmdexpr      go to state 17
    cmdexprlist  go to state 18
    cmd          go to state 19
    subcmd       go to state 20


state 130

   10 stmt: T_FOR '(' expr ';' expr . ';' expr ')' T_DO stmtlist T_DONE
   24 expr: expr . T_ADD expr
   25     | expr . T_SUB expr
   26     | expr . T_MUL expr
   27     | expr . T_DIV expr
   28     | expr . T_MOD expr
   29     | expr . T_POW expr
   35     | expr . '<' expr
   36     | expr . '>' expr
   37     | expr . T_LEQ expr
   38     | expr . T_GEQ expr
   39     | expr . T_EQ expr
   40     | expr . T_NEQ expr

    '>'    shift, and go to state 68
    '<'    shift, and go to state 69
    T_NEQ  shift, and go to state 70
    T_EQ   shift, and go to state 71
    T_GEQ  shift, and go to state 72
    T_LEQ  shift, and go to state 73
    T_SUB  shift, and go to state 74
    T_ADD  shift, and go to state 75
    T_MOD  shift, and go to state 76
    T_DIV  shift, and go to state 77
    T_MUL  shift, and go to state 78
    T_POW  shift, and go to state 79
    ';'    shift, and go to state 142


state 131

    2 stmtlist: .  [T_DONE]
    3         | . stmtlistr
    4         | . stmtlistr ';'
    5 stmtlistr: . stmt
    6          | . stmtlistr ';' stmt
    7 stmt: . T_FUNCTION T_STRING T_BEGIN stmtlist T_END
    8     | . T_IF '(' expr ')' T_THEN stmtlist T_FI
    9     | . T_IF '(' expr ')' T_THEN stmtlist T_ELSE stmtlist T_FI
   10     | . T_FOR '(' expr ';' expr ';' expr ')' T_DO stmtlist T_DONE
   11     | . T_WHILE '(' expr ')' T_DO stmtlist T_DONE
   11     | T_WHILE '(' expr ')' T_DO . stmtlist T_DONE
   12     | . assignstmt
   13     | . cmd
   43 assignstmt: . T_VAR T_ASSIGN expr
   44 cmdexpr: . T_NUMBER
   45        | . T_STRING
   46        | . T_STRING_SCONST
   47        | . '"' strlist '"'
   48        | . T_VAR
   49        | . '`' nestedsubcmd '`'
   50        | . '(' expr ')'
   51 cmdexprlist: . cmdexpr
   52            | . cmdexprlist cmdexpr
   53 cmd: . subcmd
   54    | . subcmd '&'
   55 subcmd: . cmdexprlist cmdredirin cmdredirout cmdredirerr cmdredirfd
   56       | . subcmd '|' cmdexprlist cmdredirin cmdredirout cmdredirerr cmdredirfd

    T_IF             shift, and go to state 1
    T_FOR            shift, and go to state 2
    T_WHILE          shift, and go to state 3
    T_FUNCTION       shift, and go to state 4
    T_NUMBER         shift, and go to state 5
    T_STRING         shift, and go to state 6
    T_STRING_SCONST  shift, and go to state 7
    T_VAR            shift, and go to state 8
    '('              shift, and go to state 9
    '"'              shift, and go to state 10
    '`'              shift, and go to state 11

    $default  reduce using rule 2 (stmtlist)

    stmtlist     go to state 143
    stmtlistr    go to state 14
    stmt         go to state 15
    assignstmt   go to state 16
    cmdexpr      go to state 17
    cmdexprlist  go to state 18
    cmd          go to state 19
    subcmd       go to state 20


state 132

    7 stmt: T_FUNCTION T_STRING T_BEGIN stmtlist T_END .

    $default  reduce using rule 7 (stmt)


state 133

   18 strcomp: '(' expr ')' .

    $default  reduce using rule 18 (strcomp)


state 134

   65 nestedsubcmd: nestedcmdexprlist cmdredirin cmdredirout cmdredirerr . cmdredirfd
   67 cmdredirfd: . T_ERR2OUT
   68           | . T_OUT2ERR
   69           | .  ['`', '|']

    T_ERR2OUT  shift, and go to state 137
    T_OUT2ERR  shift, and go to state 138

    $default  reduce using rule 69 (cmdredirfd)

    cmdredirfd  go to state 144


state 135

   66 nestedsubcmd: nestedsubcmd '|' nestedcmdexprlist cmdredirin . cmdredirout cmdredirerr cmdredirfd
   74 cmdredirout: . '>' nestedcmdexpr
   75            | . T_OUT2FILE nestedcmdexpr
   76            | . T_APPEND nestedcmdexpr
   77            | .  [T_ERR2OUT, T_OUT2ERR, T_ERR2FILE, '`', '|']

    T_APPEND    shift, and go to state 94
    T_OUT2FILE  shift, and go to state 95
    '>'         shift, and go to state 96

    $default  reduce using rule 77 (cmdredirout)

    cmdredirout  go to state 145


state 136

   72 cmdredirerr: T_ERR2FILE nestedcmdexpr .

    $default  reduce using rule 72 (cmdredirerr)


state 137

   67 cmdredirfd: T_ERR2OUT .

    $default  reduce using rule 67 (cmdredirfd)


state 138

   68 cmdredirfd: T_OUT2ERR .

    $default  reduce using rule 68 (cmdredirfd)


state 139

   55 subcmd: cmdexprlist cmdredirin cmdredirout cmdredirerr cmdredirfd .

    $default  reduce using rule 55 (subcmd)


state 140

   56 subcmd: subcmd '|' cmdexprlist cmdredirin cmdredirout . cmdredirerr cmdredirfd
   72 cmdredirerr: . T_ERR2FILE nestedcmdexpr
   73            | .  [$end, T_ELSE, T_FI, T_DONE, T_END, T_ERR2OUT, T_OUT2ERR, ';', '&', '|']

    T_ERR2FILE  shift, and go to state 126

    $default  reduce using rule 73 (cmdredirerr)

    cmdredirerr  go to state 146


state 141

    8 stmt: T_IF '(' expr ')' T_THEN stmtlist . T_FI
    9     | T_IF '(' expr ')' T_THEN stmtlist . T_ELSE stmtlist T_FI

    T_ELSE  shift, and go to state 147
    T_FI    shift, and go to state 148


state 142

   10 stmt: T_FOR '(' expr ';' expr ';' . expr ')' T_DO stmtlist T_DONE
   19 expr: . T_NUMBER
   20     | . T_STRING_SCONST
   21     | . '"' strlist '"'
   22     | . T_VAR
   23     | . assignstmt
   24     | . expr T_ADD expr
   25     | . expr T_SUB expr
   26     | . expr T_MUL expr
   27     | . expr T_DIV expr
   28     | . expr T_MOD expr
   29     | . expr T_POW expr
   30     | . T_SUB expr
   31     | . T_INC T_VAR
   32     | . T_DEC T_VAR
   33     | . T_VAR T_INC
   34     | . T_VAR T_DEC
   35     | . expr '<' expr
   36     | . expr '>' expr
   37     | . expr T_LEQ expr
   38     | . expr T_GEQ expr
   39     | . expr T_EQ expr
   40     | . expr T_NEQ expr
   41     | . '`' nestedsubcmd '`'
   42     | . '(' expr ')'
   43 assignstmt: . T_VAR T_ASSIGN expr

    T_NUMBER         shift, and go to state 26
    T_STRING_SCONST  shift, and go to state 27
    T_VAR            shift, and go to state 28
    T_SUB            shift, and go to state 29
    T_DEC            shift, and go to state 30
    T_INC            shift, and go to state 31
    '('              shift, and go to state 32
    '"'              shift, and go to state 33
    '`'              shift, and go to state 34

    expr        go to state 149
    assignstmt  go to state 36


state 143

   11 stmt: T_WHILE '(' expr ')' T_DO stmtlist . T_DONE

    T_DONE  shift, and go to state 150


state 144

   65 nestedsubcmd: nestedcmdexprlist cmdredirin cmdredirout cmdredirerr cmdredirfd .

    $default  reduce using rule 65 (nestedsubcmd)


state 145

   66 nestedsubcmd: nestedsubcmd '|' nestedcmdexprlist cmdredirin cmdredirout . cmdredirerr cmdredirfd
   72 cmdredirerr: . T_ERR2FILE nestedcmdexpr
   73            | .  [T_ERR2OUT, T_OUT2ERR, '`', '|']

    T_ERR2FILE  shift, and go to state 126

    $default  reduce using rule 73 (cmdredirerr)

    cmdredirerr  go to state 151


state 146

   56 subcmd: subcmd '|' cmdexprlist cmdredirin cmdredirout cmdredirerr . cmdredirfd
   67 cmdredirfd: . T_ERR2OUT
   68           | . T_OUT2ERR
   69           | .  [$end, T_ELSE, T_FI, T_DONE, T_END, ';', '&', '|']

    T_ERR2OUT  shift, and go to state 137
    T_OUT2ERR  shift, and go to state 138

    $default  reduce using rule 69 (cmdredirfd)

    cmdredirfd  go to state 152


state 147

    2 stmtlist: .  [T_FI]
    3         | . stmtlistr
    4         | . stmtlistr ';'
    5 stmtlistr: . stmt
    6          | . stmtlistr ';' stmt
    7 stmt: . T_FUNCTION T_STRING T_BEGIN stmtlist T_END
    8     | . T_IF '(' expr ')' T_THEN stmtlist T_FI
    9     | . T_IF '(' expr ')' T_THEN stmtlist T_ELSE stmtlist T_FI
    9     | T_IF '(' expr ')' T_THEN stmtlist T_ELSE . stmtlist T_FI
   10     | . T_FOR '(' expr ';' expr ';' expr ')' T_DO stmtlist T_DONE
   11     | . T_WHILE '(' expr ')' T_DO stmtlist T_DONE
   12     | . assignstmt
   13     | . cmd
   43 assignstmt: . T_VAR T_ASSIGN expr
   44 cmdexpr: . T_NUMBER
   45        | . T_STRING
   46        | . T_STRING_SCONST
   47        | . '"' strlist '"'
   48        | . T_VAR
   49        | . '`' nestedsubcmd '`'
   50        | . '(' expr ')'
   51 cmdexprlist: . cmdexpr
   52            | . cmdexprlist cmdexpr
   53 cmd: . subcmd
   54    | . subcmd '&'
   55 subcmd: . cmdexprlist cmdredirin cmdredirout cmdredirerr cmdredirfd
   56       | . subcmd '|' cmdexprlist cmdredirin cmdredirout cmdredirerr cmdredirfd

    T_IF             shift, and go to state 1
    T_FOR            shift, and go to state 2
    T_WHILE          shift, and go to state 3
    T_FUNCTION       shift, and go to state 4
    T_NUMBER         shift, and go to state 5
    T_STRING         shift, and go to state 6
    T_STRING_SCONST  shift, and go to state 7
    T_VAR            shift, and go to state 8
    '('              shift, and go to state 9
    '"'              shift, and go to state 10
    '`'              shift, and go to state 11

    $default  reduce using rule 2 (stmtlist)

    stmtlist     go to state 153
    stmtlistr    go to state 14
    stmt         go to state 15
    assignstmt   go to state 16
    cmdexpr      go to state 17
    cmdexprlist  go to state 18
    cmd          go to state 19
    subcmd       go to state 20


state 148

    8 stmt: T_IF '(' expr ')' T_THEN stmtlist T_FI .

    $default  reduce using rule 8 (stmt)


state 149

   10 stmt: T_FOR '(' expr ';' expr ';' expr . ')' T_DO stmtlist T_DONE
   24 expr: expr . T_ADD expr
   25     | expr . T_SUB expr
   26     | expr . T_MUL expr
   27     | expr . T_DIV expr
   28     | expr . T_MOD expr
   29     | expr . T_POW expr
   35     | expr . '<' expr
   36     | expr . '>' expr
   37     | expr . T_LEQ expr
   38     | expr . T_GEQ expr
   39     | expr . T_EQ expr
   40     | expr . T_NEQ expr

    '>'    shift, and go to state 68
    '<'    shift, and go to state 69
    T_NEQ  shift, and go to state 70
    T_EQ   shift, and go to state 71
    T_GEQ  shift, and go to state 72
    T_LEQ  shift, and go to state 73
    T_SUB  shift, and go to state 74
    T_ADD  shift, and go to state 75
    T_MOD  shift, and go to state 76
    T_DIV  shift, and go to state 77
    T_MUL  shift, and go to state 78
    T_POW  shift, and go to state 79
    ')'    shift, and go to state 154


state 150

   11 stmt: T_WHILE '(' expr ')' T_DO stmtlist T_DONE .

    $default  reduce using rule 11 (stmt)


state 151

   66 nestedsubcmd: nestedsubcmd '|' nestedcmdexprlist cmdredirin cmdredirout cmdredirerr . cmdredirfd
   67 cmdredirfd: . T_ERR2OUT
   68           | . T_OUT2ERR
   69           | .  ['`', '|']

    T_ERR2OUT  shift, and go to state 137
    T_OUT2ERR  shift, and go to state 138

    $default  reduce using rule 69 (cmdredirfd)

    cmdredirfd  go to state 155


state 152

   56 subcmd: subcmd '|' cmdexprlist cmdredirin cmdredirout cmdredirerr cmdredirfd .

    $default  reduce using rule 56 (subcmd)


state 153

    9 stmt: T_IF '(' expr ')' T_THEN stmtlist T_ELSE stmtlist . T_FI

    T_FI  shift, and go to state 156


state 154

   10 stmt: T_FOR '(' expr ';' expr ';' expr ')' . T_DO stmtlist T_DONE

    T_DO  shift, and go to state 157


state 155

   66 nestedsubcmd: nestedsubcmd '|' nestedcmdexprlist cmdredirin cmdredirout cmdredirerr cmdredirfd .

    $default  reduce using rule 66 (nestedsubcmd)


state 156

    9 stmt: T_IF '(' expr ')' T_THEN stmtlist T_ELSE stmtlist T_FI .

    $default  reduce using rule 9 (stmt)


state 157

    2 stmtlist: .  [T_DONE]
    3         | . stmtlistr
    4         | . stmtlistr ';'
    5 stmtlistr: . stmt
    6          | . stmtlistr ';' stmt
    7 stmt: . T_FUNCTION T_STRING T_BEGIN stmtlist T_END
    8     | . T_IF '(' expr ')' T_THEN stmtlist T_FI
    9     | . T_IF '(' expr ')' T_THEN stmtlist T_ELSE stmtlist T_FI
   10     | . T_FOR '(' expr ';' expr ';' expr ')' T_DO stmtlist T_DONE
   10     | T_FOR '(' expr ';' expr ';' expr ')' T_DO . stmtlist T_DONE
   11     | . T_WHILE '(' expr ')' T_DO stmtlist T_DONE
   12     | . assignstmt
   13     | . cmd
   43 assignstmt: . T_VAR T_ASSIGN expr
   44 cmdexpr: . T_NUMBER
   45        | . T_STRING
   46        | . T_STRING_SCONST
   47        | . '"' strlist '"'
   48        | . T_VAR
   49        | . '`' nestedsubcmd '`'
   50        | . '(' expr ')'
   51 cmdexprlist: . cmdexpr
   52            | . cmdexprlist cmdexpr
   53 cmd: . subcmd
   54    | . subcmd '&'
   55 subcmd: . cmdexprlist cmdredirin cmdredirout cmdredirerr cmdredirfd
   56       | . subcmd '|' cmdexprlist cmdredirin cmdredirout cmdredirerr cmdredirfd

    T_IF             shift, and go to state 1
    T_FOR            shift, and go to state 2
    T_WHILE          shift, and go to state 3
    T_FUNCTION       shift, and go to state 4
    T_NUMBER         shift, and go to state 5
    T_STRING         shift, and go to state 6
    T_STRING_SCONST  shift, and go to state 7
    T_VAR            shift, and go to state 8
    '('              shift, and go to state 9
    '"'              shift, and go to state 10
    '`'              shift, and go to state 11

    $default  reduce using rule 2 (stmtlist)

    stmtlist     go to state 158
    stmtlistr    go to state 14
    stmt         go to state 15
    assignstmt   go to state 16
    cmdexpr      go to state 17
    cmdexprlist  go to state 18
    cmd          go to state 19
    subcmd       go to state 20


state 158

   10 stmt: T_FOR '(' expr ';' expr ';' expr ')' T_DO stmtlist . T_DONE

    T_DONE  shift, and go to state 159


state 159

   10 stmt: T_FOR '(' expr ';' expr ';' expr ')' T_DO stmtlist T_DONE .

    $default  reduce using rule 10 (stmt)
