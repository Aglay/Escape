
#define cpuid
/* 
 * xmark.S -- Generated by xmark.py
 */ 

.data
count:		.int  8
Output:		.int 0; .int 1
.text
.globl addfmul
.align 32
addfmul:	pushl %esi; pushl %edi;
	pushl %ebx; pushl %ebp
	call  .setup
cpuid; rdtsc; movl %eax, count; xorl %eax, %eax; xorl %edx, %edx
	addl  %eax, %edi
	fmul  %st, %st(1)
	addl  %esp, %edx
	fmul  %st, %st(2)
	addl  %eax, %esi
	fmul  %st, %st(3)
	addl  %esp, %ebp
	fmul  %st, %st(4)
	addl  %eax, %edi
	fmul  %st, %st(5)
	addl  %esp, %edx
	fmul  %st, %st(6)
	addl  %eax, %esi
	fmul  %st, %st(7)
	addl  %esp, %ebp
	fmul  %st, %st(1)
	addl  %eax, %edi
	fmul  %st, %st(2)
	addl  %esp, %edx
	fmul  %st, %st(3)
	addl  %eax, %esi
	fmul  %st, %st(4)
	addl  %esp, %ebp
	fmul  %st, %st(5)
	addl  %eax, %edi
	fmul  %st, %st(6)
	addl  %esp, %edx
	fmul  %st, %st(7)
	addl  %eax, %esi
	fmul  %st, %st(1)
	addl  %esp, %ebp
	fmul  %st, %st(2)
	cpuid; rdtsc; subl count, %eax
	finit
	popl %ebp; popl %ebx; popl %edi; popl %esi; ret
.globl mulfmul
.align 32
mulfmul:	pushl %esi; pushl %edi;
	pushl %ebx; pushl %ebp
	call  .setup
cpuid; rdtsc; movl %eax, count; xorl %eax, %eax; xorl %edx, %edx
	mull  %ebx
	fmul  %st, %st(1)
	mull  %ebx
	fmul  %st, %st(2)
	mull  %ebx
	fmul  %st, %st(3)
	mull  %ebx
	fmul  %st, %st(4)
	mull  %ebx
	fmul  %st, %st(5)
	mull  %ebx
	fmul  %st, %st(6)
	mull  %ebx
	fmul  %st, %st(7)
	mull  %ebx
	fmul  %st, %st(1)
	mull  %ebx
	fmul  %st, %st(2)
	mull  %ebx
	fmul  %st, %st(3)
	mull  %ebx
	fmul  %st, %st(4)
	mull  %ebx
	fmul  %st, %st(5)
	mull  %ebx
	fmul  %st, %st(6)
	mull  %ebx
	fmul  %st, %st(7)
	mull  %ebx
	fmul  %st, %st(1)
	mull  %ebx
	fmul  %st, %st(2)
	cpuid; rdtsc; subl count, %eax
	finit
	popl %ebp; popl %ebx; popl %edi; popl %esi; ret
.globl shlfmul
.align 32
shlfmul:	pushl %esi; pushl %edi;
	pushl %ebx; pushl %ebp
	call  .setup
cpuid; rdtsc; movl %eax, count; xorl %eax, %eax; xorl %edx, %edx
	shll  %esi
	fmul  %st, %st(1)
	shll  %ebp
	fmul  %st, %st(2)
	shll  %edi
	fmul  %st, %st(3)
	shll  %edx
	fmul  %st, %st(4)
	shll  %esi
	fmul  %st, %st(5)
	shll  %ebp
	fmul  %st, %st(6)
	shll  %edi
	fmul  %st, %st(7)
	shll  %edx
	fmul  %st, %st(1)
	shll  %esi
	fmul  %st, %st(2)
	shll  %ebp
	fmul  %st, %st(3)
	shll  %edi
	fmul  %st, %st(4)
	shll  %edx
	fmul  %st, %st(5)
	shll  %esi
	fmul  %st, %st(6)
	shll  %ebp
	fmul  %st, %st(7)
	shll  %edi
	fmul  %st, %st(1)
	shll  %edx
	fmul  %st, %st(2)
	cpuid; rdtsc; subl count, %eax
	finit
	popl %ebp; popl %ebx; popl %edi; popl %esi; ret
.globl addfadd
.align 32
addfadd:	pushl %esi; pushl %edi;
	pushl %ebx; pushl %ebp
	call  .setup
cpuid; rdtsc; movl %eax, count; xorl %eax, %eax; xorl %edx, %edx
	addl  %eax, %edi
	fadd  %st, %st(1)
	addl  %esp, %edx
	fadd  %st, %st(2)
	addl  %eax, %esi
	fadd  %st, %st(3)
	addl  %esp, %ebp
	fadd  %st, %st(4)
	addl  %eax, %edi
	fadd  %st, %st(5)
	addl  %esp, %edx
	fadd  %st, %st(6)
	addl  %eax, %esi
	fadd  %st, %st(7)
	addl  %esp, %ebp
	fadd  %st, %st(1)
	addl  %eax, %edi
	fadd  %st, %st(2)
	addl  %esp, %edx
	fadd  %st, %st(3)
	addl  %eax, %esi
	fadd  %st, %st(4)
	addl  %esp, %ebp
	fadd  %st, %st(5)
	addl  %eax, %edi
	fadd  %st, %st(6)
	addl  %esp, %edx
	fadd  %st, %st(7)
	addl  %eax, %esi
	fadd  %st, %st(1)
	addl  %esp, %ebp
	fadd  %st, %st(2)
	cpuid; rdtsc; subl count, %eax
	finit
	popl %ebp; popl %ebx; popl %edi; popl %esi; ret
.globl mulfadd
.align 32
mulfadd:	pushl %esi; pushl %edi;
	pushl %ebx; pushl %ebp
	call  .setup
cpuid; rdtsc; movl %eax, count; xorl %eax, %eax; xorl %edx, %edx
	mull  %ebx
	fadd  %st, %st(1)
	mull  %ebx
	fadd  %st, %st(2)
	mull  %ebx
	fadd  %st, %st(3)
	mull  %ebx
	fadd  %st, %st(4)
	mull  %ebx
	fadd  %st, %st(5)
	mull  %ebx
	fadd  %st, %st(6)
	mull  %ebx
	fadd  %st, %st(7)
	mull  %ebx
	fadd  %st, %st(1)
	mull  %ebx
	fadd  %st, %st(2)
	mull  %ebx
	fadd  %st, %st(3)
	mull  %ebx
	fadd  %st, %st(4)
	mull  %ebx
	fadd  %st, %st(5)
	mull  %ebx
	fadd  %st, %st(6)
	mull  %ebx
	fadd  %st, %st(7)
	mull  %ebx
	fadd  %st, %st(1)
	mull  %ebx
	fadd  %st, %st(2)
	cpuid; rdtsc; subl count, %eax
	finit
	popl %ebp; popl %ebx; popl %edi; popl %esi; ret
.globl shlfadd
.align 32
shlfadd:	pushl %esi; pushl %edi;
	pushl %ebx; pushl %ebp
	call  .setup
cpuid; rdtsc; movl %eax, count; xorl %eax, %eax; xorl %edx, %edx
	shll  %esi
	fadd  %st, %st(1)
	shll  %ebp
	fadd  %st, %st(2)
	shll  %edi
	fadd  %st, %st(3)
	shll  %edx
	fadd  %st, %st(4)
	shll  %esi
	fadd  %st, %st(5)
	shll  %ebp
	fadd  %st, %st(6)
	shll  %edi
	fadd  %st, %st(7)
	shll  %edx
	fadd  %st, %st(1)
	shll  %esi
	fadd  %st, %st(2)
	shll  %ebp
	fadd  %st, %st(3)
	shll  %edi
	fadd  %st, %st(4)
	shll  %edx
	fadd  %st, %st(5)
	shll  %esi
	fadd  %st, %st(6)
	shll  %ebp
	fadd  %st, %st(7)
	shll  %edi
	fadd  %st, %st(1)
	shll  %edx
	fadd  %st, %st(2)
	cpuid; rdtsc; subl count, %eax
	finit
	popl %ebp; popl %ebx; popl %edi; popl %esi; ret
.globl addfdiv
.align 32
addfdiv:	pushl %esi; pushl %edi;
	pushl %ebx; pushl %ebp
	call  .setup
cpuid; rdtsc; movl %eax, count; xorl %eax, %eax; xorl %edx, %edx
	addl  %eax, %edi
	fdiv  %st, %st(1)
	addl  %esp, %edx
	fdiv  %st, %st(2)
	addl  %eax, %esi
	fdiv  %st, %st(3)
	addl  %esp, %ebp
	fdiv  %st, %st(4)
	addl  %eax, %edi
	fdiv  %st, %st(5)
	addl  %esp, %edx
	fdiv  %st, %st(6)
	addl  %eax, %esi
	fdiv  %st, %st(7)
	addl  %esp, %ebp
	fdiv  %st, %st(1)
	addl  %eax, %edi
	fdiv  %st, %st(2)
	addl  %esp, %edx
	fdiv  %st, %st(3)
	addl  %eax, %esi
	fdiv  %st, %st(4)
	addl  %esp, %ebp
	fdiv  %st, %st(5)
	addl  %eax, %edi
	fdiv  %st, %st(6)
	addl  %esp, %edx
	fdiv  %st, %st(7)
	addl  %eax, %esi
	fdiv  %st, %st(1)
	addl  %esp, %ebp
	fdiv  %st, %st(2)
	cpuid; rdtsc; subl count, %eax
	finit
	popl %ebp; popl %ebx; popl %edi; popl %esi; ret
.globl oheadohead
.align 32
oheadohead:	pushl %esi; pushl %edi;
	pushl %ebx; pushl %ebp
	call  .setup
cpuid; rdtsc; movl %eax, count; xorl %eax, %eax; xorl %edx, %edx
	      
	      
	      
	      
	      
	      
	      
	      
	      
	      
	      
	      
	      
	      
	      
	      
	      
	      
	      
	      
	      
	      
	      
	      
	      
	      
	      
	      
	      
	      
	      
	      
	cpuid; rdtsc; subl count, %eax
	finit
	popl %ebp; popl %ebx; popl %edi; popl %esi; ret

.setup:
	xorl  %ecx,%ecx
	xorl  %edi,%edi
	xorl  %esi,%esi
	xorl  %ebx,%ebx
	xorl  %ebp,%ebp
	finit
	fld1; fld1; fld1; fld1
	fld1; fld1; fld1; fld1
	ret

.mmxsetup:
	xorl  %ecx,%ecx
	xorl  %edi,%edi
	xorl  %esi,%esi
	xorl  %ebx,%ebx
	xorl  %ebp,%ebp
	emms
	ret
