/**
 * $Id$
 * Copyright (C) 2008 - 2009 Nils Asmussen
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
 */

#pragma once

#include <stddef.h>

namespace std {
	template<class T1,class T2>
	struct pair {
		typedef T1 first_type;
		typedef T2 second_type;

		T1 first;
		T2 second;

		pair();
		pair(const T1& x,const T2& y);
		template<class U,class V>
		pair(const pair<U,V> &p);

		pair& operator=(const pair<T1,T2>& p2);
	};

	template<class T1,class T2>
	pair<T1,T2> make_pair(T1 x,T2 y);

	template<class T1,class T2>
	bool operator==(const pair<T1,T2>& x,const pair<T1,T2>& y);

	namespace rel_ops {
		template<class T>
		bool operator!=(const T& x,const T& y);
		template<class T>
		bool operator>(const T& x,const T& y);
		template<class T>
		bool operator<=(const T& x,const T& y);
		template<class T>
		bool operator>=(const T& x,const T& y);
	}
}

#include "../../lib/cpp/utility.cc"
