/**
 * $Id$
 * Copyright (C) 2008 - 2009 Nils Asmussen
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
 */

#ifndef EXCEPTION_
#define EXCEPTION_

#include <impl/exception/exception.h>
#include <stdexcept>

namespace std {
	/**
	 * Type of terminate-handlers
	 */
	typedef void (*terminate_handler)(void);
	/**
	 * Type of unexpected-handlers
	 */
	typedef void (*unexpected_handler)(void);

	/**
	 * Sets the terminate-handler
	 *
	 * @param pHandler the new one
	 * @return the old one
	 */
	terminate_handler set_terminate(terminate_handler pHandler) throw ();
	/**
	 * Is called by the runtime if exception-handling must be aborted
	 */
	void terminate(void) __attribute__ ((__noreturn__));
	/**
	 * Sets the unexpected-handler
	 *
	 * @param pHandler the new one
	 * @return the old one
	 */
	unexpected_handler set_unexpected(unexpected_handler pHandler) throw ();
	/**
	 * Is called by the runtime if an exception is thrown which violates the functions exception
	 * specification
	 */
	void unexpected(void) __attribute__ ((__noreturn__));
	/**
	 * @return true if the caught exception violates the throw specification.
	 */
	bool uncaught_exception() throw ();
}

#endif /* EXCEPTION_ */
