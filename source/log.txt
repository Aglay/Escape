GDT exchanged, paging enabled, video initialized                            DONE
MultiBoot-Structure:
---------------------
flags=0x7ef
memLower=637 KB, memUpper=60404 KB
biosDriveNumber=E0, part1=FF, part2=FF, part3=FF
cmdLine=/boot/escape_test.bin videomode=vga swapdev=/dev/hda3
modsCount=4:
	/sbin/pci /dev/pci [c01f:2000 .. c025:34e2]
	/sbin/ata /system/devices/ata [c025:4000 .. c028:1b7e]
	/sbin/cmos /dev/cmos [c028:2000 .. c02a:49bc]
	/sbin/fs /dev/fs cdrom iso9660 [c02a:5000 .. c02e:b1c9]
ELF: num=12, size=40, addr=0x16a000, shndx=0x9
mmapLength=144, mmapAddr=c002:ce48
memory-map:
	0: addr=0000:0000, size=0x0009f400, type=free
	1: addr=0009:f400, size=0x00000c00, type=used
	2: addr=000f:0000, size=0x00010000, type=used
	3: addr=0010:0000, size=0x03afd000, type=free
	4: addr=03bf:d000, size=0x00003000, type=used
	5: addr=fffc:0000, size=0x00040000, type=used
Drives: (size=12)
	0: no=80, mode=1, cyl=710, heads=5, sectors=51
---------------------
Initializing physical memory-management...                                  DONE
Initializing paging...                                                      DONE
Initializing FPU...                                                         DONE
Initializing VFS...                                                         DONE
Initializing process-management...                                          DONE
Initializing virtual memory management...                                   DONE
Initializing IDT...                                                         DONE
Initializing timer...                                                       DONE
Initializing signal-handling...                                             DONE
Detecting CPU...                                                            DONE
14335 free frames (57340 KiB)
Initializing Swapmap...                                                     DONE

====== Starting test-procedure ======
---- Starting with module 0 : "Physical memory-management" ----

== Testcase 1 : Requesting and freeing 50 frames ==
== >> SUCCESS ==

== Testcase 2 : Requesting once and free ==
== >> SUCCESS ==

== Testcase 3 : Requesting twice and free ==
== >> SUCCESS ==

== Testcase 4 : Request, free, request and free ==
== >> SUCCESS ==

== Testcase 5 : Request a lot multiple times and free ==
== >> SUCCESS ==

== Testcase 6 : [Align] Requesting once and free ==
== >> SUCCESS ==

== Testcase 7 : [Align] Requesting twice and free ==
== >> SUCCESS ==

== Testcase 8 : [Align] Request, free, request and free ==
== >> SUCCESS ==

== Testcase 9 : [Align] Request a lot multiple times and free ==
== >> SUCCESS ==

---- Module "Physical memory-management" finished. Summary: ----
-- 9 testcases successfull --
-- 0 testcases failed --
----------------------------------

---- Starting with module 1 : "Paging" ----

== Testcase 1 : Mapping 0 pages to 0000:0000 ==
== >> SUCCESS ==

== Testcase 2 : Mapping 1 pages to 0000:0000 ==
== >> SUCCESS ==

== Testcase 3 : Mapping 50 pages to 0000:0000 ==
== >> SUCCESS ==

== Testcase 4 : Mapping 1024 pages to 0000:0000 ==
== >> SUCCESS ==

== Testcase 5 : Mapping 1025 pages to 0000:0000 ==
== >> SUCCESS ==

== Testcase 6 : Mapping 2048 pages to 0000:0000 ==
== >> SUCCESS ==

== Testcase 7 : Mapping 2051 pages to 0000:0000 ==
== >> SUCCESS ==

== Testcase 8 : Mapping 0 pages to 4000:0000 ==
== >> SUCCESS ==

== Testcase 9 : Mapping 1 pages to 4000:0000 ==
== >> SUCCESS ==

== Testcase 10 : Mapping 50 pages to 4000:0000 ==
== >> SUCCESS ==

== Testcase 11 : Mapping 1024 pages to 4000:0000 ==
== >> SUCCESS ==

== Testcase 12 : Mapping 1025 pages to 4000:0000 ==
== >> SUCCESS ==

== Testcase 13 : Mapping 2048 pages to 4000:0000 ==
== >> SUCCESS ==

== Testcase 14 : Mapping 2051 pages to 4000:0000 ==
== >> SUCCESS ==

== Testcase 15 : Mapping 0 pages to 7000:0000 ==
== >> SUCCESS ==

== Testcase 16 : Mapping 1 pages to 7000:0000 ==
== >> SUCCESS ==

== Testcase 17 : Mapping 50 pages to 7000:0000 ==
== >> SUCCESS ==

== Testcase 18 : Mapping 1024 pages to 7000:0000 ==
== >> SUCCESS ==

== Testcase 19 : Mapping 1025 pages to 7000:0000 ==
== >> SUCCESS ==

== Testcase 20 : Mapping 2048 pages to 7000:0000 ==
== >> SUCCESS ==

== Testcase 21 : Mapping 2051 pages to 7000:0000 ==
== >> SUCCESS ==

== Testcase 22 : Mapping 0 pages to 0000:4000 ==
== >> SUCCESS ==

== Testcase 23 : Mapping 1 pages to 0000:4000 ==
== >> SUCCESS ==

== Testcase 24 : Mapping 50 pages to 0000:4000 ==
== >> SUCCESS ==

== Testcase 25 : Mapping 1024 pages to 0000:4000 ==
== >> SUCCESS ==

== Testcase 26 : Mapping 1025 pages to 0000:4000 ==
== >> SUCCESS ==

== Testcase 27 : Mapping 2048 pages to 0000:4000 ==
== >> SUCCESS ==

== Testcase 28 : Mapping 2051 pages to 0000:4000 ==
== >> SUCCESS ==

== Testcase 29 : Mapping 0 pages to 0000:1234 ==
== >> SUCCESS ==

== Testcase 30 : Mapping 1 pages to 0000:1234 ==
== >> SUCCESS ==

== Testcase 31 : Mapping 50 pages to 0000:1234 ==
== >> SUCCESS ==

== Testcase 32 : Mapping 1024 pages to 0000:1234 ==
== >> SUCCESS ==

== Testcase 33 : Mapping 1025 pages to 0000:1234 ==
== >> SUCCESS ==

== Testcase 34 : Mapping 2048 pages to 0000:1234 ==
== >> SUCCESS ==

== Testcase 35 : Mapping 2051 pages to 0000:1234 ==
== >> SUCCESS ==

== Testcase 36 : Mapping 3 pages to 0000:0000 into pdir 0370:5000 ==
== >> SUCCESS ==

== Testcase 37 : Mapping 6 pages to 4000:0000 into pdir 0370:5000, separatly ==
== >> SUCCESS ==

---- Module "Paging" finished. Summary: ----
-- 37 testcases successfull --
-- 0 testcases failed --
----------------------------------

---- Starting with module 2 : "Kernel-Heap" ----

== Testcase 1 : Allocate, then free in same direction ==
Allocating...(14334 free frames)
4 bytes
Write test for 0xc08011bc...done
16 bytes
Write test for 0xc08011cc...done
40 bytes
Write test for 0xc08011e8...done
4092 bytes
Write test for 0xc0802008...done
4096 bytes
Write test for 0xc0804008...done
4100 bytes
Write test for 0xc0806008...done
8192 bytes
Write test for 0xc0808008...done
16388 bytes
Write test for 0xc080b008...done
Freeing...
FREE1: address=0xc08011bc, i=0
FREE1: address=0xc08011cc, i=1
FREE1: address=0xc08011e8, i=2
FREE1: address=0xc0802008, i=3
FREE1: address=0xc0804008, i=4
FREE1: address=0xc0806008, i=5
FREE1: address=0xc0808008, i=6
FREE1: address=0xc080b008, i=7
== >> SUCCESS ==

== Testcase 2 : Allocate, then free in opposite direction ==
Allocating...(14320 free frames)
4 bytes
Write test for 0xc08013d8...done
16 bytes
Write test for 0xc08013e8...done
40 bytes
Write test for 0xc0801404...done
4092 bytes
Write test for 0xc0801438...done
4096 bytes
Write test for 0xc0802440...done
4100 bytes
Write test for 0xc080344c...done
8192 bytes
Write test for 0xc080445c...done
16388 bytes
Write test for 0xc0806468...done
Freeing...
FREE2: address=0xc0806468, i=7
FREE2: address=0xc080445c, i=6
FREE2: address=0xc080344c, i=5
FREE2: address=0xc0802440, i=4
FREE2: address=0xc0801438, i=3
FREE2: address=0xc0801404, i=2
FREE2: address=0xc08013e8, i=1
FREE2: address=0xc08013d8, i=0
== >> SUCCESS ==

== Testcase 3 : Allocate, then free in "random" direction 1 ==
Allocating...(14320 free frames)
4 bytes
Write test for 0xc08013d8...done
16 bytes
Write test for 0xc08013e8...done
40 bytes
Write test for 0xc0801404...done
4092 bytes
Write test for 0xc0801438...done
4096 bytes
Write test for 0xc0802440...done
4100 bytes
Write test for 0xc080344c...done
8192 bytes
Write test for 0xc080445c...done
16388 bytes
Write test for 0xc0806468...done
Freeing...
FREE3: address=0xc0806468, i=0
FREE3: address=0xc080344c, i=1
FREE3: address=0xc0801404, i=2
FREE3: address=0xc08013d8, i=3
FREE3: address=0xc080445c, i=4
FREE3: address=0xc0801438, i=5
FREE3: address=0xc0802440, i=6
FREE3: address=0xc08013e8, i=7
== >> SUCCESS ==

== Testcase 4 : Allocate, then free in "random" direction 2 ==
Allocating...(14320 free frames)
4 bytes
Write test for 0xc08013d8...done
16 bytes
Write test for 0xc08013e8...done
40 bytes
Write test for 0xc0801404...done
4092 bytes
Write test for 0xc0801438...done
4096 bytes
Write test for 0xc0802440...done
4100 bytes
Write test for 0xc080344c...done
8192 bytes
Write test for 0xc080445c...done
16388 bytes
Write test for 0xc0806468...done
Freeing...
FREE4: address=0xc0801438, i=0
FREE4: address=0xc0802440, i=1
FREE4: address=0xc08013e8, i=2
FREE4: address=0xc080344c, i=3
FREE4: address=0xc080445c, i=4
FREE4: address=0xc08013d8, i=5
FREE4: address=0xc0806468, i=6
FREE4: address=0xc0801404, i=7
== >> SUCCESS ==

== Testcase 5 : Allocate and free 4 bytes ==
Write test for 0xc08013d8...done
Freeing mem @ 0xc08013d8
== >> SUCCESS ==

== Testcase 6 : Allocate and free 16 bytes ==
Write test for 0xc08013d8...done
Freeing mem @ 0xc08013d8
== >> SUCCESS ==

== Testcase 7 : Allocate and free 40 bytes ==
Write test for 0xc08013d8...done
Freeing mem @ 0xc08013d8
== >> SUCCESS ==

== Testcase 8 : Allocate and free 4092 bytes ==
Write test for 0xc08013d8...done
Freeing mem @ 0xc08013d8
== >> SUCCESS ==

== Testcase 9 : Allocate and free 4096 bytes ==
Write test for 0xc08013d8...done
Freeing mem @ 0xc08013d8
== >> SUCCESS ==

== Testcase 10 : Allocate and free 4100 bytes ==
Write test for 0xc08013d8...done
Freeing mem @ 0xc08013d8
== >> SUCCESS ==

== Testcase 11 : Allocate and free 8192 bytes ==
Write test for 0xc08013d8...done
Freeing mem @ 0xc08013d8
== >> SUCCESS ==

== Testcase 12 : Allocate and free 16388 bytes ==
Write test for 0xc08013d8...done
Freeing mem @ 0xc08013d8
== >> SUCCESS ==

== Testcase 13 : Allocate 10000 times 1 byte ==
== >> SUCCESS ==

== Testcase 14 : Allocating 3 regions ==
Freeing region 2...
Reusing region 2...
Testing contents...
== >> SUCCESS ==

== Testcase 15 : Testing realloc() ==
== >> SUCCESS ==

---- Module "Kernel-Heap" finished. Summary: ----
-- 15 testcases successfull --
-- 0 testcases failed --
----------------------------------

---- Starting with module 3 : "Scheduling" ----

---- Module "Scheduling" finished. Summary: ----
-- 0 testcases successfull --
-- 0 testcases failed --
----------------------------------

---- Starting with module 4 : "String" ----

== Testcase 1 : Testing atoi() ==
== >> SUCCESS ==

== Testcase 2 : Testing atoll() ==
== >> SUCCESS ==

== Testcase 3 : Testing itoa() ==
== >> SUCCESS ==

== Testcase 4 : Testing memset() ==
== >> SUCCESS ==

== Testcase 5 : Testing memclear() ==
== >> SUCCESS ==

== Testcase 6 : Testing memchr() ==
== >> SUCCESS ==

== Testcase 7 : Testing memcpy() ==
== >> SUCCESS ==

== Testcase 8 : Testing memcmp() ==
== >> SUCCESS ==

== Testcase 9 : Testing memmove() ==
== >> SUCCESS ==

== Testcase 10 : Testing strcpy() ==
== >> SUCCESS ==

== Testcase 11 : Testing strncpy() ==
== >> SUCCESS ==

== Testcase 12 : Testing strtok() ==
== >> SUCCESS ==

== Testcase 13 : Testing strcat() ==
== >> SUCCESS ==

== Testcase 14 : Testing strnat() ==
== >> SUCCESS ==

== Testcase 15 : Testing strcmp() ==
== >> SUCCESS ==

== Testcase 16 : Testing strncmp() ==
== >> SUCCESS ==

== Testcase 17 : Testing strcasecmp() ==
== >> SUCCESS ==

== Testcase 18 : Testing strncasecmp() ==
== >> SUCCESS ==

== Testcase 19 : Testing strchr() ==
== >> SUCCESS ==

== Testcase 20 : Testing strchri() ==
== >> SUCCESS ==

== Testcase 21 : Testing strrchr() ==
== >> SUCCESS ==

== Testcase 22 : Testing strstr() ==
== >> SUCCESS ==

== Testcase 23 : Testing strspn() ==
== >> SUCCESS ==

== Testcase 24 : Testing strcspn() ==
== >> SUCCESS ==

== Testcase 25 : Testing strpbrk() ==
== >> SUCCESS ==

== Testcase 26 : Testing strcut() ==
== >> SUCCESS ==

== Testcase 27 : Testing strlen() ==
== >> SUCCESS ==

== Testcase 28 : Testing strnlen() ==
== >> SUCCESS ==

== Testcase 29 : Testing tolower() ==
== >> SUCCESS ==

== Testcase 30 : Testing toupper() ==
== >> SUCCESS ==

== Testcase 31 : Testing isalnumstr() ==
== >> SUCCESS ==

== Testcase 32 : Testing strmatch() ==
== >> SUCCESS ==

== Testcase 33 : Testing strtold() ==
== >> SUCCESS ==

== Testcase 34 : Testing strtol() ==
== >> SUCCESS ==

== Testcase 35 : Testing ecvt() ==
== >> SUCCESS ==

---- Module "String" finished. Summary: ----
-- 35 testcases successfull --
-- 0 testcases failed --
----------------------------------

---- Starting with module 5 : "VFS" ----

== Testcase 1 : Testing vfs_createDriver() ==
== >> SUCCESS ==

---- Module "VFS" finished. Summary: ----
-- 1 testcases successfull --
-- 0 testcases failed --
----------------------------------

---- Starting with module 6 : "VFSNode" ----

== Testcase 1 : Testing vfs_node_resolvePath() ==
== >> SUCCESS ==

== Testcase 2 : Testing vfs_node_getPath() ==
== >> SUCCESS ==

---- Module "VFSNode" finished. Summary: ----
-- 2 testcases successfull --
-- 0 testcases failed --
----------------------------------

---- Starting with module 7 : "Signals" ----

== Testcase 1 : Testing sig_canHandle() ==
== >> SUCCESS ==

== Testcase 2 : Testing sig_setHandler() ==
== >> SUCCESS ==

== Testcase 3 : Adding and handling a signal ==
== >> SUCCESS ==

== Testcase 4 : Adding nested signals ==
== >> SUCCESS ==

== Testcase 5 : Adding signal for process ==
== >> SUCCESS ==

== Testcase 6 : Testing sig_unsetHandler() ==
== >> SUCCESS ==

== Testcase 7 : Testing sig_removeHandlerFor() ==
== >> SUCCESS ==

---- Module "Signals" finished. Summary: ----
-- 7 testcases successfull --
-- 0 testcases failed --
----------------------------------

---- Starting with module 8 : "Ring buffer" ----

== Testcase 1 : Create & Destroy ==
== >> SUCCESS ==

== Testcase 2 : Write & Read ==
== >> SUCCESS ==

== Testcase 3 : Write & Read - Full RB_OVERWRITE ==
== >> SUCCESS ==

== Testcase 4 : Write & Read - Full RB_DEFAULT ==
== >> SUCCESS ==

== Testcase 5 : Move ==
== >> SUCCESS ==

---- Module "Ring buffer" finished. Summary: ----
-- 5 testcases successfull --
-- 0 testcases failed --
----------------------------------

---- Starting with module 9 : "Escape-Codes" ----

== Testcase 1 : Valid codes ==
== >> SUCCESS ==

== Testcase 2 : Invalid codes ==
== >> SUCCESS ==

== Testcase 3 : Incomplete codes ==
== >> SUCCESS ==

---- Module "Escape-Codes" finished. Summary: ----
-- 3 testcases successfull --
-- 0 testcases failed --
----------------------------------

---- Starting with module 10 : "SwapMap" ----

== Testcase 1 : Testing alloc & free ==
== >> SUCCESS ==

== Testcase 2 : Testing alloc & reverse free ==
== >> SUCCESS ==

== Testcase 3 : Testing alloc & free mixed ==
== >> SUCCESS ==

== Testcase 4 : Testing alloc all & free ==
== >> SUCCESS ==

---- Module "SwapMap" finished. Summary: ----
-- 4 testcases successfull --
-- 0 testcases failed --
----------------------------------

---- Starting with module 11 : "VMM Regions" ----

== Testcase 1 : Testing reg_create() & reg_destroy() ==
== >> SUCCESS ==

== Testcase 2 : Testing reg_addTo() & reg_remFrom() ==
== >> SUCCESS ==

== Testcase 3 : Testing reg_grow() ==
== >> SUCCESS ==

== Testcase 4 : Testing reg_clone() ==
== >> SUCCESS ==

---- Module "VMM Regions" finished. Summary: ----
-- 4 testcases successfull --
-- 0 testcases failed --
----------------------------------

---- Starting with module 12 : "Virtual Memory Manager" ----

== Testcase 1 : Testing vmm_add() and vmm_remove() ==
== >> SUCCESS ==

== Testcase 2 : Testing vmm_grow() ==
== >> SUCCESS ==

---- Module "Virtual Memory Manager" finished. Summary: ----
-- 2 testcases successfull --
-- 0 testcases failed --
----------------------------------

---- Starting with module 13 : "Shared memory" ----

== Testcase 1 : Testing shm_create() & shm_destroy() ==
== >> SUCCESS ==

== Testcase 2 : Testing shm_join() & shm_leave() & shm_remProc() ==
== >> SUCCESS ==

---- Module "Shared memory" finished. Summary: ----
-- 2 testcases successfull --
-- 0 testcases failed --
----------------------------------

---- Starting with module 14 : "HashMap" ----

== Testcase 1 : Testing basic functionality ==
== >> SUCCESS ==

== Testcase 2 : Testing remove ==
== >> SUCCESS ==

== Testcase 3 : Testing map iterator ==
0: 1
1: 34
2: 44
3: 12
4: 109
== >> SUCCESS ==

---- Module "HashMap" finished. Summary: ----
-- 3 testcases successfull --
-- 0 testcases failed --
----------------------------------

---- Starting with module 15 : "Single linked list" ----

== Testcase 1 : Append & check & remove index 0 ==
== >> SUCCESS ==

== Testcase 2 : Append & remove first (NULL) ==
== >> SUCCESS ==

== Testcase 3 : Append & remove first (x) ==
== >> SUCCESS ==

== Testcase 4 : Create & append & destroy ==
== >> SUCCESS ==

== Testcase 5 : Create & append & insert somewhere & destroy ==
== >> SUCCESS ==

== Testcase 6 : Create & append & set somewhere & destroy ==
== >> SUCCESS ==

== Testcase 7 : Append until no mem left & destroy ==
Appended 4194297 elements
Freeing...done
== >> SUCCESS ==

== Testcase 8 : Walking through the list ==
Starting at index 0
element @ 0xd27ff000 : 0x123
element @ 0xd27ff008 : 0x456
element @ 0xd27ff010 : 0x789
Starting at index 2
element @ 0xd27ff010 : 0x789
== >> SUCCESS ==

== Testcase 9 : Testing sll_indexOf and sll_nodeWith ==
== >> SUCCESS ==

== Testcase 10 : Testing sll_clone ==
== >> SUCCESS ==

---- Module "Single linked list" finished. Summary: ----
-- 10 testcases successfull --
-- 0 testcases failed --
----------------------------------

====== All modules done ======
== 16 modules successfull ==
== 0 modules failed ==
== 139 testcases successfull ==
== 0 testcases failed ==
============================
