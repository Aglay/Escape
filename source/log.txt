GDT exchanged, paging enabled, video initialized                            DONE
MultiBoot-Structure:
---------------------
flags=0x7ef
memLower=637 KB, memUpper=60404 KB
biosDriveNumber=E0, part1=FF, part2=FF, part3=FF
cmdLine=/boot/escape_test.bin videomode=vga swapdev=/dev/hda3
modsCount=4:
	/sbin/pci /dev/pci (0xc01eb000 .. 0xc024f2bc)
	/sbin/ata /system/devices/ata (0xc0250000 .. 0xc02809ec)
	/sbin/cmos /dev/cmos (0xc0281000 .. 0xc02a676a)
	/sbin/fs /dev/fs cdrom iso9660 (0xc02a7000 .. 0xc02efce3)
ELF: num=12, size=40, addr=0x165000, shndx=0x9
mmapLength=144, mmapAddr=0xc002ce48
memory-map:
	0: addr=0x00000000, size=0x0009f400, type=free
	1: addr=0x0009f400, size=0x00000c00, type=used
	2: addr=0x000f0000, size=0x00010000, type=used
	3: addr=0x00100000, size=0x03afd000, type=free
	4: addr=0x03bfd000, size=0x00003000, type=used
	5: addr=0xfffc0000, size=0x00040000, type=used
Drives: (size=12)
	0: no=80, mode=1, cyl=710, heads=5, sectors=51
---------------------
Initializing physical memory-management...                                  DONE
Initializing paging...                                                      DONE
Initializing FPU...                                                         DONE
Initializing VFS...                                                         DONE
Initializing process-management...                                          DONE
Initializing virtual memory management...                                   DONE
Initializing IDT...                                                         DONE
Initializing timer...                                                       DONE
Initializing signal-handling...                                             DONE
Detecting CPU...                                                            DONE
14331 free frames (57324 KiB)
Initializing Swapmap...                                                     DONE

====== Starting test-procedure ======
---- Starting with module 0 : "Physical memory-management" ----

== Testcase 1 : Requesting and freeing 50 frames ==
vassert 1 succeeded
== >> SUCCESS ==

== Testcase 2 : Requesting once and free ==
vassert 1 succeeded
== >> SUCCESS ==

== Testcase 3 : Requesting twice and free ==
vassert 1 succeeded
== >> SUCCESS ==

== Testcase 4 : Request, free, request and free ==
vassert 1 succeeded
== >> SUCCESS ==

== Testcase 5 : Request a lot multiple times and free ==
vassert 1 succeeded
== >> SUCCESS ==

== Testcase 6 : [Align] Requesting once and free ==
vassert 1 succeeded
vassert 2 succeeded
== >> SUCCESS ==

== Testcase 7 : [Align] Requesting twice and free ==
vassert 1 succeeded
vassert 2 succeeded
vassert 3 succeeded
== >> SUCCESS ==

== Testcase 8 : [Align] Request, free, request and free ==
vassert 1 succeeded
vassert 2 succeeded
vassert 3 succeeded
vassert 4 succeeded
vassert 5 succeeded
vassert 6 succeeded
== >> SUCCESS ==

== Testcase 9 : [Align] Request a lot multiple times and free ==
vassert 1 succeeded
vassert 2 succeeded
vassert 3 succeeded
vassert 4 succeeded
vassert 5 succeeded
== >> SUCCESS ==

---- Module "Physical memory-management" finished. Summary: ----
-- 9 testcases successfull --
-- 0 testcases failed --
----------------------------------

---- Starting with module 1 : "Paging" ----

== Testcase 1 : Mapping 0 pages to 0x00000000 ==
== >> SUCCESS ==

== Testcase 2 : Mapping 1 pages to 0x00000000 ==
== >> SUCCESS ==

== Testcase 3 : Mapping 50 pages to 0x00000000 ==
== >> SUCCESS ==

== Testcase 4 : Mapping 1024 pages to 0x00000000 ==
== >> SUCCESS ==

== Testcase 5 : Mapping 1025 pages to 0x00000000 ==
== >> SUCCESS ==

== Testcase 6 : Mapping 2048 pages to 0x00000000 ==
== >> SUCCESS ==

== Testcase 7 : Mapping 2051 pages to 0x00000000 ==
== >> SUCCESS ==

== Testcase 8 : Mapping 0 pages to 0x40000000 ==
== >> SUCCESS ==

== Testcase 9 : Mapping 1 pages to 0x40000000 ==
== >> SUCCESS ==

== Testcase 10 : Mapping 50 pages to 0x40000000 ==
== >> SUCCESS ==

== Testcase 11 : Mapping 1024 pages to 0x40000000 ==
== >> SUCCESS ==

== Testcase 12 : Mapping 1025 pages to 0x40000000 ==
== >> SUCCESS ==

== Testcase 13 : Mapping 2048 pages to 0x40000000 ==
== >> SUCCESS ==

== Testcase 14 : Mapping 2051 pages to 0x40000000 ==
== >> SUCCESS ==

== Testcase 15 : Mapping 0 pages to 0x70000000 ==
== >> SUCCESS ==

== Testcase 16 : Mapping 1 pages to 0x70000000 ==
== >> SUCCESS ==

== Testcase 17 : Mapping 50 pages to 0x70000000 ==
== >> SUCCESS ==

== Testcase 18 : Mapping 1024 pages to 0x70000000 ==
== >> SUCCESS ==

== Testcase 19 : Mapping 1025 pages to 0x70000000 ==
== >> SUCCESS ==

== Testcase 20 : Mapping 2048 pages to 0x70000000 ==
== >> SUCCESS ==

== Testcase 21 : Mapping 2051 pages to 0x70000000 ==
== >> SUCCESS ==

== Testcase 22 : Mapping 0 pages to 0x00004000 ==
== >> SUCCESS ==

== Testcase 23 : Mapping 1 pages to 0x00004000 ==
== >> SUCCESS ==

== Testcase 24 : Mapping 50 pages to 0x00004000 ==
== >> SUCCESS ==

== Testcase 25 : Mapping 1024 pages to 0x00004000 ==
== >> SUCCESS ==

== Testcase 26 : Mapping 1025 pages to 0x00004000 ==
== >> SUCCESS ==

== Testcase 27 : Mapping 2048 pages to 0x00004000 ==
== >> SUCCESS ==

== Testcase 28 : Mapping 2051 pages to 0x00004000 ==
== >> SUCCESS ==

== Testcase 29 : Mapping 0 pages to 0x00001234 ==
== >> SUCCESS ==

== Testcase 30 : Mapping 1 pages to 0x00001234 ==
== >> SUCCESS ==

== Testcase 31 : Mapping 50 pages to 0x00001234 ==
== >> SUCCESS ==

== Testcase 32 : Mapping 1024 pages to 0x00001234 ==
== >> SUCCESS ==

== Testcase 33 : Mapping 1025 pages to 0x00001234 ==
== >> SUCCESS ==

== Testcase 34 : Mapping 2048 pages to 0x00001234 ==
== >> SUCCESS ==

== Testcase 35 : Mapping 2051 pages to 0x00001234 ==
== >> SUCCESS ==

vassert 1 succeeded
== Testcase 36 : Mapping 3 pages to 0x00000000 into pdir 0x3705000 ==
vassert 1 succeeded
vassert 2 succeeded
vassert 3 succeeded
vassert 4 succeeded
== >> SUCCESS ==

== Testcase 37 : Mapping 6 pages to 0x40000000 into pdir 0x3705000, separatly ==
vassert 1 succeeded
vassert 2 succeeded
vassert 3 succeeded
vassert 4 succeeded
vassert 5 succeeded
vassert 6 succeeded
vassert 7 succeeded
vassert 8 succeeded
== >> SUCCESS ==

---- Module "Paging" finished. Summary: ----
-- 37 testcases successfull --
-- 0 testcases failed --
----------------------------------

---- Starting with module 2 : "Process-Management" ----

== Testcase 1 : Cloning and destroying processes ==
Cloning process to pid=2
vassert 1 succeeded
Destroying process
Cloning process to pid=3
vassert 2 succeeded
Destroying process
Cloning process to pid=4
vassert 3 succeeded
Destroying process
Cloning process to pid=5
vassert 4 succeeded
Destroying process
Cloning process to pid=6
vassert 5 succeeded
Destroying process
== >> SUCCESS ==

---- Module "Process-Management" finished. Summary: ----
-- 1 testcases successfull --
-- 0 testcases failed --
----------------------------------

---- Starting with module 3 : "Kernel-Heap" ----

== Testcase 1 : Allocate, then free in same direction ==
Allocating...(13819 free frames)
4 bytes
Write test for 0xc08013d8...done
16 bytes
Write test for 0xc08013e8...done
40 bytes
Write test for 0xc0801404...done
4092 bytes
Write test for 0xc0802008...done
4096 bytes
Write test for 0xc0804008...done
4100 bytes
Write test for 0xc0806008...done
8192 bytes
Write test for 0xc0808008...done
16388 bytes
Write test for 0xc080b008...done
Freeing...
FREE1: address=0xc08013d8, i=0
FREE1: address=0xc08013e8, i=1
FREE1: address=0xc0801404, i=2
FREE1: address=0xc0802008, i=3
FREE1: address=0xc0804008, i=4
FREE1: address=0xc0806008, i=5
FREE1: address=0xc0808008, i=6
FREE1: address=0xc080b008, i=7
== >> SUCCESS ==

== Testcase 2 : Allocate, then free in opposite direction ==
Allocating...(13805 free frames)
4 bytes
Write test for 0xc08013d8...done
16 bytes
Write test for 0xc08013e8...done
40 bytes
Write test for 0xc0801404...done
4092 bytes
Write test for 0xc0801438...done
4096 bytes
Write test for 0xc0802440...done
4100 bytes
Write test for 0xc080344c...done
8192 bytes
Write test for 0xc080445c...done
16388 bytes
Write test for 0xc0806468...done
Freeing...
FREE2: address=0xc0806468, i=7
FREE2: address=0xc080445c, i=6
FREE2: address=0xc080344c, i=5
FREE2: address=0xc0802440, i=4
FREE2: address=0xc0801438, i=3
FREE2: address=0xc0801404, i=2
FREE2: address=0xc08013e8, i=1
FREE2: address=0xc08013d8, i=0
== >> SUCCESS ==

== Testcase 3 : Allocate, then free in "random" direction 1 ==
Allocating...(13805 free frames)
4 bytes
Write test for 0xc08013d8...done
16 bytes
Write test for 0xc08013e8...done
40 bytes
Write test for 0xc0801404...done
4092 bytes
Write test for 0xc0801438...done
4096 bytes
Write test for 0xc0802440...done
4100 bytes
Write test for 0xc080344c...done
8192 bytes
Write test for 0xc080445c...done
16388 bytes
Write test for 0xc0806468...done
Freeing...
FREE3: address=0xc0806468, i=0
FREE3: address=0xc080344c, i=1
FREE3: address=0xc0801404, i=2
FREE3: address=0xc08013d8, i=3
FREE3: address=0xc080445c, i=4
FREE3: address=0xc0801438, i=5
FREE3: address=0xc0802440, i=6
FREE3: address=0xc08013e8, i=7
== >> SUCCESS ==

== Testcase 4 : Allocate, then free in "random" direction 2 ==
Allocating...(13805 free frames)
4 bytes
Write test for 0xc08013d8...done
16 bytes
Write test for 0xc08013e8...done
40 bytes
Write test for 0xc0801404...done
4092 bytes
Write test for 0xc0801438...done
4096 bytes
Write test for 0xc0802440...done
4100 bytes
Write test for 0xc080344c...done
8192 bytes
Write test for 0xc080445c...done
16388 bytes
Write test for 0xc0806468...done
Freeing...
FREE4: address=0xc0801438, i=0
FREE4: address=0xc0802440, i=1
FREE4: address=0xc08013e8, i=2
FREE4: address=0xc080344c, i=3
FREE4: address=0xc080445c, i=4
FREE4: address=0xc08013d8, i=5
FREE4: address=0xc0806468, i=6
FREE4: address=0xc0801404, i=7
== >> SUCCESS ==

== Testcase 5 : Allocate and free 4 bytes ==
Write test for 0xc08013d8...done
Freeing mem @ 0xc08013d8
== >> SUCCESS ==

== Testcase 6 : Allocate and free 16 bytes ==
Write test for 0xc08013d8...done
Freeing mem @ 0xc08013d8
== >> SUCCESS ==

== Testcase 7 : Allocate and free 40 bytes ==
Write test for 0xc08013d8...done
Freeing mem @ 0xc08013d8
== >> SUCCESS ==

== Testcase 8 : Allocate and free 4092 bytes ==
Write test for 0xc08013d8...done
Freeing mem @ 0xc08013d8
== >> SUCCESS ==

== Testcase 9 : Allocate and free 4096 bytes ==
Write test for 0xc08013d8...done
Freeing mem @ 0xc08013d8
== >> SUCCESS ==

== Testcase 10 : Allocate and free 4100 bytes ==
Write test for 0xc08013d8...done
Freeing mem @ 0xc08013d8
== >> SUCCESS ==

== Testcase 11 : Allocate and free 8192 bytes ==
Write test for 0xc08013d8...done
Freeing mem @ 0xc08013d8
== >> SUCCESS ==

== Testcase 12 : Allocate and free 16388 bytes ==
Write test for 0xc08013d8...done
Freeing mem @ 0xc08013d8
== >> SUCCESS ==

== Testcase 13 : Allocate 10000 times 1 byte ==
== >> SUCCESS ==

== Testcase 14 : Allocating 3 regions ==
Freeing region 2...
Reusing region 2...
Testing contents...
== >> SUCCESS ==

== Testcase 15 : Testing realloc() ==
== >> SUCCESS ==

---- Module "Kernel-Heap" finished. Summary: ----
-- 15 testcases successfull --
-- 0 testcases failed --
----------------------------------

---- Starting with module 4 : "Scheduling" ----

---- Module "Scheduling" finished. Summary: ----
-- 0 testcases successfull --
-- 0 testcases failed --
----------------------------------

---- Starting with module 5 : "String" ----

== Testcase 1 : Testing atoi() ==
vassert 1 succeeded
vassert 2 succeeded
vassert 3 succeeded
vassert 4 succeeded
vassert 5 succeeded
vassert 6 succeeded
vassert 7 succeeded
vassert 8 succeeded
vassert 9 succeeded
vassert 10 succeeded
vassert 11 succeeded
vassert 12 succeeded
vassert 13 succeeded
vassert 14 succeeded
== >> SUCCESS ==

== Testcase 2 : Testing atoll() ==
vassert 1 succeeded
vassert 2 succeeded
vassert 3 succeeded
vassert 4 succeeded
vassert 5 succeeded
vassert 6 succeeded
vassert 7 succeeded
vassert 8 succeeded
vassert 9 succeeded
vassert 10 succeeded
vassert 11 succeeded
vassert 12 succeeded
vassert 13 succeeded
vassert 14 succeeded
vassert 15 succeeded
vassert 16 succeeded
vassert 17 succeeded
vassert 18 succeeded
== >> SUCCESS ==

== Testcase 3 : Testing itoa() ==
vassert 1 succeeded
vassert 2 succeeded
vassert 3 succeeded
vassert 4 succeeded
vassert 5 succeeded
vassert 6 succeeded
vassert 7 succeeded
vassert 8 succeeded
vassert 9 succeeded
vassert 10 succeeded
vassert 11 succeeded
== >> SUCCESS ==

== Testcase 4 : Testing memset() ==
vassert 1 succeeded
vassert 2 succeeded
vassert 3 succeeded
vassert 4 succeeded
vassert 5 succeeded
vassert 6 succeeded
vassert 7 succeeded
vassert 8 succeeded
Testing i=0,j=0
Testing i=0,j=1
Testing i=0,j=2
Testing i=0,j=3
Testing i=0,j=4
Testing i=0,j=5
Testing i=0,j=6
Testing i=0,j=7
Testing i=1,j=0
Testing i=1,j=1
Testing i=1,j=2
Testing i=1,j=3
Testing i=1,j=4
Testing i=1,j=5
Testing i=1,j=6
Testing i=1,j=7
Testing i=2,j=0
Testing i=2,j=1
Testing i=2,j=2
Testing i=2,j=3
Testing i=2,j=4
Testing i=2,j=5
Testing i=2,j=6
Testing i=2,j=7
Testing i=3,j=0
Testing i=3,j=1
Testing i=3,j=2
Testing i=3,j=3
Testing i=3,j=4
Testing i=3,j=5
Testing i=3,j=6
Testing i=3,j=7
Testing i=4,j=0
Testing i=4,j=1
Testing i=4,j=2
Testing i=4,j=3
Testing i=4,j=4
Testing i=4,j=5
Testing i=4,j=6
Testing i=4,j=7
Testing i=5,j=0
Testing i=5,j=1
Testing i=5,j=2
Testing i=5,j=3
Testing i=5,j=4
Testing i=5,j=5
Testing i=5,j=6
Testing i=5,j=7
Testing i=6,j=0
Testing i=6,j=1
Testing i=6,j=2
Testing i=6,j=3
Testing i=6,j=4
Testing i=6,j=5
Testing i=6,j=6
Testing i=6,j=7
Testing i=7,j=0
Testing i=7,j=1
Testing i=7,j=2
Testing i=7,j=3
Testing i=7,j=4
Testing i=7,j=5
Testing i=7,j=6
Testing i=7,j=7
== >> SUCCESS ==

== Testcase 5 : Testing memclear() ==
Testing i=0,j=0
Testing i=0,j=1
Testing i=0,j=2
Testing i=0,j=3
Testing i=0,j=4
Testing i=0,j=5
Testing i=0,j=6
Testing i=0,j=7
Testing i=1,j=0
Testing i=1,j=1
Testing i=1,j=2
Testing i=1,j=3
Testing i=1,j=4
Testing i=1,j=5
Testing i=1,j=6
Testing i=1,j=7
Testing i=2,j=0
Testing i=2,j=1
Testing i=2,j=2
Testing i=2,j=3
Testing i=2,j=4
Testing i=2,j=5
Testing i=2,j=6
Testing i=2,j=7
Testing i=3,j=0
Testing i=3,j=1
Testing i=3,j=2
Testing i=3,j=3
Testing i=3,j=4
Testing i=3,j=5
Testing i=3,j=6
Testing i=3,j=7
Testing i=4,j=0
Testing i=4,j=1
Testing i=4,j=2
Testing i=4,j=3
Testing i=4,j=4
Testing i=4,j=5
Testing i=4,j=6
Testing i=4,j=7
Testing i=5,j=0
Testing i=5,j=1
Testing i=5,j=2
Testing i=5,j=3
Testing i=5,j=4
Testing i=5,j=5
Testing i=5,j=6
Testing i=5,j=7
Testing i=6,j=0
Testing i=6,j=1
Testing i=6,j=2
Testing i=6,j=3
Testing i=6,j=4
Testing i=6,j=5
Testing i=6,j=6
Testing i=6,j=7
Testing i=7,j=0
Testing i=7,j=1
Testing i=7,j=2
Testing i=7,j=3
Testing i=7,j=4
Testing i=7,j=5
Testing i=7,j=6
Testing i=7,j=7
== >> SUCCESS ==

== Testcase 6 : Testing memchr() ==
vassert 1 succeeded
vassert 2 succeeded
vassert 3 succeeded
vassert 4 succeeded
vassert 5 succeeded
vassert 6 succeeded
== >> SUCCESS ==

== Testcase 7 : Testing memcpy() ==
vassert 1 succeeded
vassert 2 succeeded
vassert 3 succeeded
Testing i=0,j=0
Testing i=0,j=1
Testing i=0,j=2
Testing i=0,j=3
Testing i=0,j=4
Testing i=0,j=5
Testing i=0,j=6
Testing i=0,j=7
Testing i=1,j=0
Testing i=1,j=1
Testing i=1,j=2
Testing i=1,j=3
Testing i=1,j=4
Testing i=1,j=5
Testing i=1,j=6
Testing i=1,j=7
Testing i=2,j=0
Testing i=2,j=1
Testing i=2,j=2
Testing i=2,j=3
Testing i=2,j=4
Testing i=2,j=5
Testing i=2,j=6
Testing i=2,j=7
Testing i=3,j=0
Testing i=3,j=1
Testing i=3,j=2
Testing i=3,j=3
Testing i=3,j=4
Testing i=3,j=5
Testing i=3,j=6
Testing i=3,j=7
Testing i=4,j=0
Testing i=4,j=1
Testing i=4,j=2
Testing i=4,j=3
Testing i=4,j=4
Testing i=4,j=5
Testing i=4,j=6
Testing i=4,j=7
Testing i=5,j=0
Testing i=5,j=1
Testing i=5,j=2
Testing i=5,j=3
Testing i=5,j=4
Testing i=5,j=5
Testing i=5,j=6
Testing i=5,j=7
Testing i=6,j=0
Testing i=6,j=1
Testing i=6,j=2
Testing i=6,j=3
Testing i=6,j=4
Testing i=6,j=5
Testing i=6,j=6
Testing i=6,j=7
Testing i=7,j=0
Testing i=7,j=1
Testing i=7,j=2
Testing i=7,j=3
Testing i=7,j=4
Testing i=7,j=5
Testing i=7,j=6
Testing i=7,j=7
== >> SUCCESS ==

== Testcase 8 : Testing memcmp() ==
vassert 1 succeeded
vassert 2 succeeded
vassert 3 succeeded
vassert 4 succeeded
vassert 5 succeeded
vassert 6 succeeded
== >> SUCCESS ==

== Testcase 9 : Testing memmove() ==
vassert 1 succeeded
vassert 2 succeeded
vassert 3 succeeded
vassert 4 succeeded
vassert 5 succeeded
vassert 6 succeeded
vassert 7 succeeded
Testing i=0,j=0
Testing i=0,j=1
Testing i=0,j=2
Testing i=0,j=3
Testing i=0,j=4
Testing i=0,j=5
Testing i=0,j=6
Testing i=0,j=7
Testing i=1,j=0
Testing i=1,j=1
Testing i=1,j=2
Testing i=1,j=3
Testing i=1,j=4
Testing i=1,j=5
Testing i=1,j=6
Testing i=1,j=7
Testing i=2,j=0
Testing i=2,j=1
Testing i=2,j=2
Testing i=2,j=3
Testing i=2,j=4
Testing i=2,j=5
Testing i=2,j=6
Testing i=2,j=7
Testing i=3,j=0
Testing i=3,j=1
Testing i=3,j=2
Testing i=3,j=3
Testing i=3,j=4
Testing i=3,j=5
Testing i=3,j=6
Testing i=3,j=7
Testing i=4,j=0
Testing i=4,j=1
Testing i=4,j=2
Testing i=4,j=3
Testing i=4,j=4
Testing i=4,j=5
Testing i=4,j=6
Testing i=4,j=7
Testing i=5,j=0
Testing i=5,j=1
Testing i=5,j=2
Testing i=5,j=3
Testing i=5,j=4
Testing i=5,j=5
Testing i=5,j=6
Testing i=5,j=7
Testing i=6,j=0
Testing i=6,j=1
Testing i=6,j=2
Testing i=6,j=3
Testing i=6,j=4
Testing i=6,j=5
Testing i=6,j=6
Testing i=6,j=7
Testing i=7,j=0
Testing i=7,j=1
Testing i=7,j=2
Testing i=7,j=3
Testing i=7,j=4
Testing i=7,j=5
Testing i=7,j=6
Testing i=7,j=7
== >> SUCCESS ==

== Testcase 10 : Testing strcpy() ==
vassert 1 succeeded
vassert 2 succeeded
vassert 3 succeeded
vassert 4 succeeded
== >> SUCCESS ==

== Testcase 11 : Testing strncpy() ==
vassert 1 succeeded
vassert 2 succeeded
vassert 3 succeeded
vassert 4 succeeded
vassert 5 succeeded
vassert 6 succeeded
vassert 7 succeeded
== >> SUCCESS ==

== Testcase 12 : Testing strtok() ==
vassert 1 succeeded
vassert 2 succeeded
vassert 3 succeeded
vassert 4 succeeded
vassert 5 succeeded
vassert 6 succeeded
vassert 7 succeeded
vassert 8 succeeded
vassert 9 succeeded
vassert 10 succeeded
vassert 11 succeeded
vassert 12 succeeded
vassert 13 succeeded
vassert 14 succeeded
vassert 15 succeeded
vassert 16 succeeded
vassert 17 succeeded
vassert 18 succeeded
== >> SUCCESS ==

== Testcase 13 : Testing strcat() ==
vassert 1 succeeded
vassert 2 succeeded
== >> SUCCESS ==

== Testcase 14 : Testing strnat() ==
vassert 1 succeeded
vassert 2 succeeded
vassert 3 succeeded
vassert 4 succeeded
vassert 5 succeeded
vassert 6 succeeded
== >> SUCCESS ==

== Testcase 15 : Testing strcmp() ==
vassert 1 succeeded
vassert 2 succeeded
vassert 3 succeeded
vassert 4 succeeded
vassert 5 succeeded
vassert 6 succeeded
vassert 7 succeeded
vassert 8 succeeded
== >> SUCCESS ==

== Testcase 16 : Testing strncmp() ==
vassert 1 succeeded
vassert 2 succeeded
vassert 3 succeeded
vassert 4 succeeded
vassert 5 succeeded
vassert 6 succeeded
vassert 7 succeeded
vassert 8 succeeded
vassert 9 succeeded
vassert 10 succeeded
vassert 11 succeeded
vassert 12 succeeded
== >> SUCCESS ==

== Testcase 17 : Testing strcasecmp() ==
vassert 1 succeeded
vassert 2 succeeded
vassert 3 succeeded
vassert 4 succeeded
vassert 5 succeeded
vassert 6 succeeded
vassert 7 succeeded
vassert 8 succeeded
== >> SUCCESS ==

== Testcase 18 : Testing strncasecmp() ==
vassert 1 succeeded
vassert 2 succeeded
vassert 3 succeeded
vassert 4 succeeded
vassert 5 succeeded
vassert 6 succeeded
vassert 7 succeeded
vassert 8 succeeded
vassert 9 succeeded
vassert 10 succeeded
vassert 11 succeeded
vassert 12 succeeded
== >> SUCCESS ==

== Testcase 19 : Testing strchr() ==
vassert 1 succeeded
vassert 2 succeeded
vassert 3 succeeded
vassert 4 succeeded
== >> SUCCESS ==

== Testcase 20 : Testing strchri() ==
vassert 1 succeeded
vassert 2 succeeded
vassert 3 succeeded
vassert 4 succeeded
== >> SUCCESS ==

== Testcase 21 : Testing strrchr() ==
vassert 1 succeeded
vassert 2 succeeded
vassert 3 succeeded
vassert 4 succeeded
vassert 5 succeeded
== >> SUCCESS ==

== Testcase 22 : Testing strstr() ==
vassert 1 succeeded
vassert 2 succeeded
vassert 3 succeeded
vassert 4 succeeded
vassert 5 succeeded
vassert 6 succeeded
vassert 7 succeeded
vassert 8 succeeded
vassert 9 succeeded
vassert 10 succeeded
vassert 11 succeeded
== >> SUCCESS ==

== Testcase 23 : Testing strspn() ==
vassert 1 succeeded
vassert 2 succeeded
vassert 3 succeeded
vassert 4 succeeded
vassert 5 succeeded
vassert 6 succeeded
vassert 7 succeeded
vassert 8 succeeded
vassert 9 succeeded
vassert 10 succeeded
vassert 11 succeeded
vassert 12 succeeded
== >> SUCCESS ==

== Testcase 24 : Testing strcspn() ==
vassert 1 succeeded
vassert 2 succeeded
vassert 3 succeeded
vassert 4 succeeded
vassert 5 succeeded
vassert 6 succeeded
== >> SUCCESS ==

== Testcase 25 : Testing strpbrk() ==
vassert 1 succeeded
vassert 2 succeeded
vassert 3 succeeded
vassert 4 succeeded
vassert 5 succeeded
vassert 6 succeeded
vassert 7 succeeded
vassert 8 succeeded
vassert 9 succeeded
vassert 10 succeeded
vassert 11 succeeded
vassert 12 succeeded
vassert 13 succeeded
vassert 14 succeeded
== >> SUCCESS ==

== Testcase 26 : Testing strcut() ==
vassert 1 succeeded
vassert 2 succeeded
vassert 3 succeeded
vassert 4 succeeded
vassert 5 succeeded
== >> SUCCESS ==

== Testcase 27 : Testing strlen() ==
vassert 1 succeeded
vassert 2 succeeded
vassert 3 succeeded
vassert 4 succeeded
== >> SUCCESS ==

== Testcase 28 : Testing strnlen() ==
vassert 1 succeeded
vassert 2 succeeded
vassert 3 succeeded
vassert 4 succeeded
vassert 5 succeeded
vassert 6 succeeded
vassert 7 succeeded
vassert 8 succeeded
vassert 9 succeeded
vassert 10 succeeded
vassert 11 succeeded
== >> SUCCESS ==

== Testcase 29 : Testing tolower() ==
vassert 1 succeeded
vassert 2 succeeded
vassert 3 succeeded
vassert 4 succeeded
vassert 5 succeeded
vassert 6 succeeded
== >> SUCCESS ==

== Testcase 30 : Testing toupper() ==
vassert 1 succeeded
vassert 2 succeeded
vassert 3 succeeded
vassert 4 succeeded
vassert 5 succeeded
vassert 6 succeeded
== >> SUCCESS ==

== Testcase 31 : Testing isalnumstr() ==
vassert 1 succeeded
vassert 2 succeeded
vassert 3 succeeded
vassert 4 succeeded
vassert 5 succeeded
vassert 6 succeeded
vassert 7 succeeded
vassert 8 succeeded
vassert 9 succeeded
== >> SUCCESS ==

== Testcase 32 : Testing strmatch() ==
vassert 1 succeeded
vassert 2 succeeded
vassert 3 succeeded
vassert 4 succeeded
vassert 5 succeeded
vassert 6 succeeded
vassert 7 succeeded
vassert 8 succeeded
vassert 9 succeeded
vassert 10 succeeded
vassert 11 succeeded
vassert 12 succeeded
vassert 13 succeeded
vassert 14 succeeded
vassert 15 succeeded
vassert 16 succeeded
vassert 17 succeeded
vassert 18 succeeded
vassert 19 succeeded
vassert 20 succeeded
vassert 21 succeeded
vassert 22 succeeded
vassert 23 succeeded
vassert 24 succeeded
vassert 25 succeeded
vassert 26 succeeded
vassert 27 succeeded
vassert 28 succeeded
vassert 29 succeeded
vassert 30 succeeded
vassert 31 succeeded
vassert 32 succeeded
vassert 33 succeeded
vassert 34 succeeded
vassert 35 succeeded
vassert 36 succeeded
vassert 37 succeeded
vassert 38 succeeded
vassert 39 succeeded
vassert 40 succeeded
== >> SUCCESS ==

== Testcase 33 : Testing strtold() ==
vassert 1 succeeded
vassert 2 succeeded
vassert 3 succeeded
vassert 4 succeeded
vassert 5 succeeded
vassert 6 succeeded
vassert 7 succeeded
vassert 8 succeeded
vassert 9 succeeded
vassert 10 succeeded
vassert 11 succeeded
vassert 12 succeeded
vassert 13 succeeded
vassert 14 succeeded
vassert 15 succeeded
vassert 16 succeeded
vassert 17 succeeded
vassert 18 succeeded
vassert 19 succeeded
vassert 20 succeeded
vassert 21 succeeded
vassert 22 succeeded
vassert 23 succeeded
vassert 24 succeeded
vassert 25 succeeded
vassert 26 succeeded
vassert 27 succeeded
vassert 28 succeeded
vassert 29 succeeded
vassert 30 succeeded
vassert 31 succeeded
vassert 32 succeeded
vassert 33 succeeded
== >> SUCCESS ==

== Testcase 34 : Testing strtol() ==
vassert 1 succeeded
vassert 2 succeeded
vassert 3 succeeded
vassert 4 succeeded
vassert 5 succeeded
vassert 6 succeeded
vassert 7 succeeded
vassert 8 succeeded
vassert 9 succeeded
vassert 10 succeeded
vassert 11 succeeded
vassert 12 succeeded
vassert 13 succeeded
vassert 14 succeeded
vassert 15 succeeded
vassert 16 succeeded
vassert 17 succeeded
vassert 18 succeeded
vassert 19 succeeded
vassert 20 succeeded
vassert 21 succeeded
vassert 22 succeeded
vassert 23 succeeded
vassert 24 succeeded
vassert 25 succeeded
vassert 26 succeeded
vassert 27 succeeded
vassert 28 succeeded
vassert 29 succeeded
vassert 30 succeeded
vassert 31 succeeded
vassert 32 succeeded
vassert 33 succeeded
vassert 34 succeeded
vassert 35 succeeded
vassert 36 succeeded
vassert 37 succeeded
vassert 38 succeeded
vassert 39 succeeded
== >> SUCCESS ==

== Testcase 35 : Testing ecvt() ==
vassert 1 succeeded
vassert 2 succeeded
vassert 3 succeeded
vassert 4 succeeded
vassert 5 succeeded
vassert 6 succeeded
vassert 7 succeeded
vassert 8 succeeded
vassert 9 succeeded
vassert 10 succeeded
vassert 11 succeeded
vassert 12 succeeded
== >> SUCCESS ==

---- Module "String" finished. Summary: ----
-- 35 testcases successfull --
-- 0 testcases failed --
----------------------------------

---- Starting with module 6 : "VFS" ----

== Testcase 1 : Testing vfs_createDriver() ==
vassert 1 succeeded
vassert 2 succeeded
vassert 3 succeeded
vassert 4 succeeded
vassert 5 succeeded
vassert 6 succeeded
== >> SUCCESS ==

---- Module "VFS" finished. Summary: ----
-- 1 testcases successfull --
-- 0 testcases failed --
----------------------------------

---- Starting with module 7 : "VFSNode" ----

== Testcase 1 : Testing vfs_node_resolvePath() ==
vassert 1 succeeded
vassert 2 succeeded
vassert 3 succeeded
vassert 4 succeeded
vassert 5 succeeded
vassert 6 succeeded
vassert 7 succeeded
vassert 8 succeeded
vassert 9 succeeded
vassert 10 succeeded
vassert 11 succeeded
vassert 12 succeeded
vassert 13 succeeded
== >> SUCCESS ==

== Testcase 2 : Testing vfs_node_getPath() ==
vassert 1 succeeded
vassert 2 succeeded
vassert 3 succeeded
== >> SUCCESS ==

---- Module "VFSNode" finished. Summary: ----
-- 2 testcases successfull --
-- 0 testcases failed --
----------------------------------

---- Starting with module 8 : "Signals" ----

== Testcase 1 : Testing sig_canHandle() ==
vassert 1 succeeded
vassert 2 succeeded
vassert 3 succeeded
vassert 4 succeeded
vassert 5 succeeded
vassert 6 succeeded
vassert 7 succeeded
vassert 8 succeeded
vassert 9 succeeded
vassert 10 succeeded
vassert 11 succeeded
vassert 12 succeeded
vassert 13 succeeded
== >> SUCCESS ==

== Testcase 2 : Testing sig_setHandler() ==
== >> SUCCESS ==

== Testcase 3 : Adding and handling a signal ==
vassert 1 succeeded
vassert 2 succeeded
vassert 3 succeeded
== >> SUCCESS ==

== Testcase 4 : Adding nested signals ==
vassert 1 succeeded
vassert 2 succeeded
vassert 3 succeeded
vassert 4 succeeded
vassert 5 succeeded
== >> SUCCESS ==

== Testcase 5 : Adding signal for process ==
vassert 1 succeeded
vassert 2 succeeded
vassert 3 succeeded
== >> SUCCESS ==

== Testcase 6 : Testing sig_unsetHandler() ==
vassert 1 succeeded
vassert 2 succeeded
== >> SUCCESS ==

== Testcase 7 : Testing sig_removeHandlerFor() ==
vassert 1 succeeded
== >> SUCCESS ==

---- Module "Signals" finished. Summary: ----
-- 7 testcases successfull --
-- 0 testcases failed --
----------------------------------

---- Starting with module 9 : "Ring buffer" ----

== Testcase 1 : Create & Destroy ==
vassert 1 succeeded
vassert 2 succeeded
== >> SUCCESS ==

== Testcase 2 : Write & Read ==
vassert 1 succeeded
vassert 2 succeeded
vassert 3 succeeded
vassert 4 succeeded
vassert 5 succeeded
vassert 6 succeeded
vassert 7 succeeded
vassert 8 succeeded
vassert 9 succeeded
vassert 10 succeeded
vassert 11 succeeded
vassert 12 succeeded
vassert 13 succeeded
vassert 14 succeeded
vassert 15 succeeded
vassert 16 succeeded
vassert 17 succeeded
vassert 18 succeeded
vassert 19 succeeded
vassert 20 succeeded
vassert 21 succeeded
vassert 22 succeeded
vassert 23 succeeded
vassert 24 succeeded
vassert 25 succeeded
vassert 26 succeeded
vassert 27 succeeded
vassert 28 succeeded
vassert 29 succeeded
vassert 30 succeeded
vassert 31 succeeded
vassert 32 succeeded
vassert 33 succeeded
== >> SUCCESS ==

== Testcase 3 : Write & Read - Full RB_OVERWRITE ==
vassert 1 succeeded
vassert 2 succeeded
vassert 3 succeeded
vassert 4 succeeded
vassert 5 succeeded
vassert 6 succeeded
vassert 7 succeeded
vassert 8 succeeded
vassert 9 succeeded
vassert 10 succeeded
vassert 11 succeeded
vassert 12 succeeded
vassert 13 succeeded
vassert 14 succeeded
vassert 15 succeeded
vassert 16 succeeded
vassert 17 succeeded
vassert 18 succeeded
vassert 19 succeeded
vassert 20 succeeded
vassert 21 succeeded
vassert 22 succeeded
vassert 23 succeeded
vassert 24 succeeded
vassert 25 succeeded
vassert 26 succeeded
vassert 27 succeeded
vassert 28 succeeded
vassert 29 succeeded
vassert 30 succeeded
vassert 31 succeeded
vassert 32 succeeded
vassert 33 succeeded
vassert 34 succeeded
vassert 35 succeeded
vassert 36 succeeded
vassert 37 succeeded
vassert 38 succeeded
vassert 39 succeeded
vassert 40 succeeded
vassert 41 succeeded
vassert 42 succeeded
vassert 43 succeeded
vassert 44 succeeded
vassert 45 succeeded
vassert 46 succeeded
vassert 47 succeeded
vassert 48 succeeded
vassert 49 succeeded
vassert 50 succeeded
vassert 51 succeeded
vassert 52 succeeded
vassert 53 succeeded
vassert 54 succeeded
vassert 55 succeeded
vassert 56 succeeded
vassert 57 succeeded
vassert 58 succeeded
vassert 59 succeeded
vassert 60 succeeded
== >> SUCCESS ==

== Testcase 4 : Write & Read - Full RB_DEFAULT ==
vassert 1 succeeded
vassert 2 succeeded
vassert 3 succeeded
vassert 4 succeeded
vassert 5 succeeded
vassert 6 succeeded
vassert 7 succeeded
vassert 8 succeeded
vassert 9 succeeded
vassert 10 succeeded
vassert 11 succeeded
vassert 12 succeeded
vassert 13 succeeded
vassert 14 succeeded
vassert 15 succeeded
vassert 16 succeeded
vassert 17 succeeded
vassert 18 succeeded
vassert 19 succeeded
vassert 20 succeeded
== >> SUCCESS ==

== Testcase 5 : Move ==
vassert 1 succeeded
vassert 2 succeeded
vassert 3 succeeded
vassert 4 succeeded
vassert 5 succeeded
vassert 6 succeeded
vassert 7 succeeded
vassert 8 succeeded
vassert 9 succeeded
vassert 10 succeeded
vassert 11 succeeded
vassert 12 succeeded
vassert 13 succeeded
vassert 14 succeeded
vassert 15 succeeded
vassert 16 succeeded
vassert 17 succeeded
vassert 18 succeeded
vassert 19 succeeded
vassert 20 succeeded
vassert 21 succeeded
vassert 22 succeeded
== >> SUCCESS ==

---- Module "Ring buffer" finished. Summary: ----
-- 5 testcases successfull --
-- 0 testcases failed --
----------------------------------

---- Starting with module 10 : "Escape-Codes" ----

== Testcase 1 : Valid codes ==
vassert 1 succeeded
vassert 2 succeeded
vassert 3 succeeded
vassert 4 succeeded
vassert 5 succeeded
vassert 6 succeeded
vassert 7 succeeded
vassert 8 succeeded
vassert 9 succeeded
vassert 10 succeeded
vassert 11 succeeded
vassert 12 succeeded
vassert 13 succeeded
vassert 14 succeeded
vassert 15 succeeded
vassert 16 succeeded
vassert 17 succeeded
vassert 18 succeeded
vassert 19 succeeded
vassert 20 succeeded
vassert 21 succeeded
vassert 22 succeeded
vassert 23 succeeded
vassert 24 succeeded
vassert 25 succeeded
vassert 26 succeeded
vassert 27 succeeded
vassert 28 succeeded
vassert 29 succeeded
vassert 30 succeeded
vassert 31 succeeded
vassert 32 succeeded
vassert 33 succeeded
vassert 34 succeeded
vassert 35 succeeded
vassert 36 succeeded
vassert 37 succeeded
vassert 38 succeeded
vassert 39 succeeded
vassert 40 succeeded
vassert 41 succeeded
vassert 42 succeeded
vassert 43 succeeded
vassert 44 succeeded
vassert 45 succeeded
vassert 46 succeeded
vassert 47 succeeded
vassert 48 succeeded
vassert 49 succeeded
vassert 50 succeeded
vassert 51 succeeded
vassert 52 succeeded
vassert 53 succeeded
vassert 54 succeeded
vassert 55 succeeded
vassert 56 succeeded
vassert 57 succeeded
vassert 58 succeeded
vassert 59 succeeded
vassert 60 succeeded
vassert 61 succeeded
vassert 62 succeeded
vassert 63 succeeded
vassert 64 succeeded
vassert 65 succeeded
vassert 66 succeeded
vassert 67 succeeded
vassert 68 succeeded
vassert 69 succeeded
vassert 70 succeeded
vassert 71 succeeded
vassert 72 succeeded
vassert 73 succeeded
vassert 74 succeeded
vassert 75 succeeded
vassert 76 succeeded
vassert 77 succeeded
vassert 78 succeeded
vassert 79 succeeded
vassert 80 succeeded
vassert 81 succeeded
vassert 82 succeeded
vassert 83 succeeded
vassert 84 succeeded
vassert 85 succeeded
vassert 86 succeeded
vassert 87 succeeded
vassert 88 succeeded
vassert 89 succeeded
vassert 90 succeeded
vassert 91 succeeded
vassert 92 succeeded
vassert 93 succeeded
vassert 94 succeeded
vassert 95 succeeded
vassert 96 succeeded
vassert 97 succeeded
vassert 98 succeeded
vassert 99 succeeded
vassert 100 succeeded
== >> SUCCESS ==

== Testcase 2 : Invalid codes ==
vassert 1 succeeded
vassert 2 succeeded
vassert 3 succeeded
vassert 4 succeeded
vassert 5 succeeded
vassert 6 succeeded
vassert 7 succeeded
vassert 8 succeeded
vassert 9 succeeded
vassert 10 succeeded
vassert 11 succeeded
vassert 12 succeeded
vassert 13 succeeded
vassert 14 succeeded
vassert 15 succeeded
vassert 16 succeeded
vassert 17 succeeded
vassert 18 succeeded
vassert 19 succeeded
vassert 20 succeeded
vassert 21 succeeded
vassert 22 succeeded
vassert 23 succeeded
vassert 24 succeeded
vassert 25 succeeded
vassert 26 succeeded
vassert 27 succeeded
vassert 28 succeeded
vassert 29 succeeded
vassert 30 succeeded
vassert 31 succeeded
vassert 32 succeeded
vassert 33 succeeded
vassert 34 succeeded
vassert 35 succeeded
vassert 36 succeeded
vassert 37 succeeded
vassert 38 succeeded
vassert 39 succeeded
vassert 40 succeeded
vassert 41 succeeded
vassert 42 succeeded
vassert 43 succeeded
vassert 44 succeeded
vassert 45 succeeded
vassert 46 succeeded
vassert 47 succeeded
vassert 48 succeeded
vassert 49 succeeded
vassert 50 succeeded
vassert 51 succeeded
vassert 52 succeeded
vassert 53 succeeded
vassert 54 succeeded
vassert 55 succeeded
== >> SUCCESS ==

== Testcase 3 : Incomplete codes ==
vassert 1 succeeded
vassert 2 succeeded
vassert 3 succeeded
vassert 4 succeeded
vassert 5 succeeded
vassert 6 succeeded
vassert 7 succeeded
vassert 8 succeeded
vassert 9 succeeded
vassert 10 succeeded
vassert 11 succeeded
vassert 12 succeeded
vassert 13 succeeded
vassert 14 succeeded
vassert 15 succeeded
vassert 16 succeeded
vassert 17 succeeded
vassert 18 succeeded
vassert 19 succeeded
vassert 20 succeeded
vassert 21 succeeded
vassert 22 succeeded
vassert 23 succeeded
vassert 24 succeeded
vassert 25 succeeded
vassert 26 succeeded
vassert 27 succeeded
vassert 28 succeeded
vassert 29 succeeded
vassert 30 succeeded
vassert 31 succeeded
vassert 32 succeeded
vassert 33 succeeded
vassert 34 succeeded
vassert 35 succeeded
vassert 36 succeeded
vassert 37 succeeded
vassert 38 succeeded
vassert 39 succeeded
vassert 40 succeeded
== >> SUCCESS ==

---- Module "Escape-Codes" finished. Summary: ----
-- 3 testcases successfull --
-- 0 testcases failed --
----------------------------------

---- Starting with module 11 : "SwapMap" ----

== Testcase 1 : Testing alloc & free ==
vassert 1 succeeded
vassert 2 succeeded
vassert 3 succeeded
vassert 4 succeeded
vassert 5 succeeded
vassert 6 succeeded
vassert 7 succeeded
== >> SUCCESS ==

== Testcase 2 : Testing alloc & reverse free ==
== >> SUCCESS ==

== Testcase 3 : Testing alloc & free mixed ==
vassert 1 succeeded
vassert 2 succeeded
vassert 3 succeeded
vassert 4 succeeded
vassert 5 succeeded
vassert 6 succeeded
vassert 7 succeeded
vassert 8 succeeded
vassert 9 succeeded
vassert 10 succeeded
vassert 11 succeeded
vassert 12 succeeded
vassert 13 succeeded
vassert 14 succeeded
vassert 15 succeeded
vassert 16 succeeded
vassert 17 succeeded
== >> SUCCESS ==

== Testcase 4 : Testing alloc all & free ==
vassert 1 succeeded
vassert 2 succeeded
vassert 3 succeeded
vassert 4 succeeded
vassert 5 succeeded
vassert 6 succeeded
vassert 7 succeeded
vassert 8 succeeded
vassert 9 succeeded
vassert 10 succeeded
vassert 11 succeeded
vassert 12 succeeded
vassert 13 succeeded
vassert 14 succeeded
vassert 15 succeeded
vassert 16 succeeded
vassert 17 succeeded
vassert 18 succeeded
vassert 19 succeeded
vassert 20 succeeded
vassert 21 succeeded
vassert 22 succeeded
vassert 23 succeeded
vassert 24 succeeded
vassert 25 succeeded
vassert 26 succeeded
vassert 27 succeeded
vassert 28 succeeded
vassert 29 succeeded
vassert 30 succeeded
vassert 31 succeeded
vassert 32 succeeded
vassert 33 succeeded
vassert 34 succeeded
vassert 35 succeeded
vassert 36 succeeded
vassert 37 succeeded
vassert 38 succeeded
vassert 39 succeeded
vassert 40 succeeded
vassert 41 succeeded
vassert 42 succeeded
vassert 43 succeeded
vassert 44 succeeded
vassert 45 succeeded
vassert 46 succeeded
vassert 47 succeeded
vassert 48 succeeded
vassert 49 succeeded
vassert 50 succeeded
vassert 51 succeeded
vassert 52 succeeded
vassert 53 succeeded
vassert 54 succeeded
vassert 55 succeeded
vassert 56 succeeded
vassert 57 succeeded
vassert 58 succeeded
vassert 59 succeeded
vassert 60 succeeded
vassert 61 succeeded
vassert 62 succeeded
vassert 63 succeeded
== >> SUCCESS ==

---- Module "SwapMap" finished. Summary: ----
-- 4 testcases successfull --
-- 0 testcases failed --
----------------------------------

---- Starting with module 12 : "VMM Regions" ----

== Testcase 1 : Testing reg_create() & reg_destroy() ==
vassert 1 succeeded
vassert 2 succeeded
vassert 3 succeeded
vassert 4 succeeded
vassert 5 succeeded
vassert 6 succeeded
vassert 7 succeeded
vassert 8 succeeded
vassert 9 succeeded
vassert 10 succeeded
vassert 11 succeeded
vassert 12 succeeded
vassert 13 succeeded
vassert 14 succeeded
vassert 15 succeeded
vassert 16 succeeded
vassert 17 succeeded
vassert 18 succeeded
vassert 19 succeeded
vassert 20 succeeded
vassert 21 succeeded
== >> SUCCESS ==

== Testcase 2 : Testing reg_addTo() & reg_remFrom() ==
vassert 1 succeeded
vassert 2 succeeded
vassert 3 succeeded
vassert 4 succeeded
vassert 5 succeeded
vassert 6 succeeded
vassert 7 succeeded
vassert 8 succeeded
vassert 9 succeeded
== >> SUCCESS ==

== Testcase 3 : Testing reg_grow() ==
vassert 1 succeeded
vassert 2 succeeded
vassert 3 succeeded
vassert 4 succeeded
vassert 5 succeeded
vassert 6 succeeded
vassert 7 succeeded
vassert 8 succeeded
vassert 9 succeeded
vassert 10 succeeded
vassert 11 succeeded
vassert 12 succeeded
vassert 13 succeeded
vassert 14 succeeded
vassert 15 succeeded
vassert 16 succeeded
vassert 17 succeeded
vassert 18 succeeded
vassert 19 succeeded
vassert 20 succeeded
vassert 21 succeeded
vassert 22 succeeded
vassert 23 succeeded
vassert 24 succeeded
vassert 25 succeeded
vassert 26 succeeded
vassert 27 succeeded
vassert 28 succeeded
vassert 29 succeeded
vassert 30 succeeded
vassert 31 succeeded
vassert 32 succeeded
vassert 33 succeeded
vassert 34 succeeded
vassert 35 succeeded
vassert 36 succeeded
vassert 37 succeeded
vassert 38 succeeded
vassert 39 succeeded
vassert 40 succeeded
vassert 41 succeeded
vassert 42 succeeded
vassert 43 succeeded
vassert 44 succeeded
vassert 45 succeeded
vassert 46 succeeded
vassert 47 succeeded
vassert 48 succeeded
vassert 49 succeeded
vassert 50 succeeded
vassert 51 succeeded
vassert 52 succeeded
vassert 53 succeeded
vassert 54 succeeded
vassert 55 succeeded
== >> SUCCESS ==

== Testcase 4 : Testing reg_clone() ==
vassert 1 succeeded
vassert 2 succeeded
vassert 3 succeeded
vassert 4 succeeded
vassert 5 succeeded
vassert 6 succeeded
vassert 7 succeeded
vassert 8 succeeded
vassert 9 succeeded
vassert 10 succeeded
vassert 11 succeeded
vassert 12 succeeded
== >> SUCCESS ==

---- Module "VMM Regions" finished. Summary: ----
-- 4 testcases successfull --
-- 0 testcases failed --
----------------------------------

---- Starting with module 13 : "Virtual Memory Manager" ----

== Testcase 1 : Testing vmm_add() and vmm_remove() ==
vassert 1 succeeded
vassert 2 succeeded
vassert 3 succeeded
vassert 4 succeeded
vassert 5 succeeded
vassert 6 succeeded
vassert 7 succeeded
vassert 8 succeeded
vassert 9 succeeded
vassert 10 succeeded
vassert 11 succeeded
vassert 12 succeeded
vassert 13 succeeded
vassert 14 succeeded
vassert 15 succeeded
vassert 16 succeeded
vassert 17 succeeded
== >> SUCCESS ==

== Testcase 2 : Testing vmm_grow() ==
vassert 1 succeeded
vassert 2 succeeded
vassert 3 succeeded
vassert 4 succeeded
vassert 5 succeeded
vassert 6 succeeded
vassert 7 succeeded
vassert 8 succeeded
vassert 9 succeeded
vassert 10 succeeded
vassert 11 succeeded
vassert 12 succeeded
vassert 13 succeeded
vassert 14 succeeded
vassert 15 succeeded
== >> SUCCESS ==

---- Module "Virtual Memory Manager" finished. Summary: ----
-- 2 testcases successfull --
-- 0 testcases failed --
----------------------------------

---- Starting with module 14 : "Shared memory" ----

== Testcase 1 : Testing shm_create() & shm_destroy() ==
vassert 1 succeeded
vassert 2 succeeded
vassert 3 succeeded
vassert 4 succeeded
== >> SUCCESS ==

== Testcase 2 : Testing shm_join() & shm_leave() & shm_remProc() ==
vassert 1 succeeded
vassert 2 succeeded
vassert 3 succeeded
vassert 4 succeeded
vassert 5 succeeded
vassert 6 succeeded
vassert 7 succeeded
vassert 8 succeeded
vassert 9 succeeded
vassert 10 succeeded
vassert 11 succeeded
vassert 12 succeeded
vassert 13 succeeded
vassert 14 succeeded
vassert 15 succeeded
vassert 16 succeeded
vassert 17 succeeded
vassert 18 succeeded
vassert 19 succeeded
vassert 20 succeeded
vassert 21 succeeded
vassert 22 succeeded
vassert 23 succeeded
vassert 24 succeeded
vassert 25 succeeded
vassert 26 succeeded
vassert 27 succeeded
== >> SUCCESS ==

---- Module "Shared memory" finished. Summary: ----
-- 2 testcases successfull --
-- 0 testcases failed --
----------------------------------

---- Starting with module 15 : "HashMap" ----

== Testcase 1 : Testing basic functionality ==
vassert 1 succeeded
vassert 2 succeeded
vassert 3 succeeded
vassert 4 succeeded
vassert 5 succeeded
vassert 6 succeeded
vassert 7 succeeded
vassert 8 succeeded
vassert 9 succeeded
vassert 10 succeeded
== >> SUCCESS ==

== Testcase 2 : Testing remove ==
vassert 1 succeeded
vassert 2 succeeded
vassert 3 succeeded
vassert 4 succeeded
vassert 5 succeeded
vassert 6 succeeded
vassert 7 succeeded
vassert 8 succeeded
vassert 9 succeeded
vassert 10 succeeded
vassert 11 succeeded
vassert 12 succeeded
vassert 13 succeeded
vassert 14 succeeded
== >> SUCCESS ==

== Testcase 3 : Testing map iterator ==
vassert 1 succeeded
0: 1
vassert 2 succeeded
1: 34
vassert 3 succeeded
2: 44
vassert 4 succeeded
3: 12
vassert 5 succeeded
4: 109
vassert 6 succeeded
vassert 7 succeeded
vassert 8 succeeded
== >> SUCCESS ==

---- Module "HashMap" finished. Summary: ----
-- 3 testcases successfull --
-- 0 testcases failed --
----------------------------------

---- Starting with module 16 : "Single linked list" ----

== Testcase 1 : Append & check & remove index 0 ==
== >> SUCCESS ==

== Testcase 2 : Append & remove first (NULL) ==
== >> SUCCESS ==

== Testcase 3 : Append & remove first (x) ==
== >> SUCCESS ==

== Testcase 4 : Create & append & destroy ==
== >> SUCCESS ==

== Testcase 5 : Create & append & insert somewhere & destroy ==
== >> SUCCESS ==

== Testcase 6 : Create & append & set somewhere & destroy ==
== >> SUCCESS ==

== Testcase 7 : Append until no mem left & destroy ==
Appended 4194297 elements
Freeing...done
== >> SUCCESS ==

== Testcase 8 : Walking through the list ==
Starting at index 0
element @ 0xd27ff000 : 0x123
element @ 0xd27ff008 : 0x456
element @ 0xd27ff010 : 0x789
Starting at index 2
element @ 0xd27ff010 : 0x789
== >> SUCCESS ==

== Testcase 9 : Testing sll_indexOf and sll_nodeWith ==
vassert 1 succeeded
vassert 2 succeeded
vassert 3 succeeded
vassert 4 succeeded
vassert 5 succeeded
vassert 6 succeeded
vassert 7 succeeded
vassert 8 succeeded
== >> SUCCESS ==

== Testcase 10 : Testing sll_clone ==
vassert 1 succeeded
vassert 2 succeeded
vassert 3 succeeded
vassert 4 succeeded
vassert 5 succeeded
== >> SUCCESS ==

---- Module "Single linked list" finished. Summary: ----
-- 10 testcases successfull --
-- 0 testcases failed --
----------------------------------

====== All modules done ======
== 17 modules successfull ==
== 0 modules failed ==
== 140 testcases successfull ==
== 0 testcases failed ==
============================
