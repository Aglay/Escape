Memory size: 20971520 bytes
Disk size: 92897280 bytes
Kernelstack-begin: 8000:0000:000b:0000
Kernelstack-end: 8000:0000:000b:0138
Boot modules:
	    /boot/kernel.bin
	    	    [8000:0000:0000:0000 .. 8000:0000:000a:e900]
	    /sbin/disk /system/devices/disk
	    	    [8000:0000:000b:2000 .. 8000:0000:000d:adeb]
Initializing physical memory-management...                                  DONEInitializing paging...                                                      DONEInitializing VFS...                                                         DONEInitializing process-management...                                          DONEInitializing virtual memory management...                                   DONEInitializing timer...                                                       DONEInitializing signal-handling...                                             DONE2434 free frames (19472 KiB)
Initializing Swapmap...                                                     DONE
====== Starting test-procedure ======
---- Starting with module 0 : "Address space" ----

== Testcase 1 : Testing basics ==
== >> SUCCESS ==

== Testcase 2 : Testing duplicate usage ==
== >> SUCCESS ==

== Testcase 3 : Testing duplicate usage ==
== >> SUCCESS ==

---- Module "Address space" finished. Summary: ----
-- 3 testcases successfull --
-- 0 testcases failed --
----------------------------------

---- Starting with module 1 : "Physical memory-management" ----

== Testcase 1 : Requesting and freeing 50 frames ==
== >> SUCCESS ==

== Testcase 2 : Requesting once and free ==
== >> SUCCESS ==

== Testcase 3 : Requesting twice and free ==
== >> SUCCESS ==

== Testcase 4 : Request, free, request and free ==
== >> SUCCESS ==

== Testcase 5 : Request a lot multiple times and free ==
== >> SUCCESS ==

== Testcase 6 : [Align] Requesting once and free ==
== >> SUCCESS ==

== Testcase 7 : [Align] Requesting twice and free ==
== >> SUCCESS ==

== Testcase 8 : [Align] Request, free, request and free ==
== >> SUCCESS ==

== Testcase 9 : [Align] Request a lot multiple times and free ==
== >> SUCCESS ==

---- Module "Physical memory-management" finished. Summary: ----
-- 9 testcases successfull --
-- 0 testcases failed --
----------------------------------

---- Starting with module 2 : "Dynamic array" ----

== Testcase 1 : Test various functions ==
== >> SUCCESS ==

---- Module "Dynamic array" finished. Summary: ----
-- 1 testcases successfull --
-- 0 testcases failed --
----------------------------------

---- Starting with module 3 : "Paging" ----

== Testcase 1 : Mapping 0 pages to 0000:0000:0000:0000 ==
== >> SUCCESS ==

== Testcase 2 : Mapping 1 pages to 0000:0000:0000:0000 ==
== >> SUCCESS ==

== Testcase 3 : Mapping 50 pages to 0000:0000:0000:0000 ==
== >> SUCCESS ==

== Testcase 4 : Mapping 1024 pages to 0000:0000:0000:0000 ==
== >> SUCCESS ==

== Testcase 5 : Mapping 1025 pages to 0000:0000:0000:0000 ==
== >> SUCCESS ==

== Testcase 6 : Mapping 2048 pages to 0000:0000:0000:0000 ==
== >> SUCCESS ==

== Testcase 7 : Mapping 2051 pages to 0000:0000:0000:0000 ==
== >> SUCCESS ==

== Testcase 8 : Mapping 0 pages to 0000:0000:4000:0000 ==
== >> SUCCESS ==

== Testcase 9 : Mapping 1 pages to 0000:0000:4000:0000 ==
== >> SUCCESS ==

== Testcase 10 : Mapping 50 pages to 0000:0000:4000:0000 ==
== >> SUCCESS ==

== Testcase 11 : Mapping 1024 pages to 0000:0000:4000:0000 ==
== >> SUCCESS ==

== Testcase 12 : Mapping 1025 pages to 0000:0000:4000:0000 ==
== >> SUCCESS ==

== Testcase 13 : Mapping 2048 pages to 0000:0000:4000:0000 ==
== >> SUCCESS ==

== Testcase 14 : Mapping 2051 pages to 0000:0000:4000:0000 ==
== >> SUCCESS ==

== Testcase 15 : Mapping 0 pages to 0000:0000:7000:0000 ==
== >> SUCCESS ==

== Testcase 16 : Mapping 1 pages to 0000:0000:7000:0000 ==
== >> SUCCESS ==

== Testcase 17 : Mapping 50 pages to 0000:0000:7000:0000 ==
== >> SUCCESS ==

== Testcase 18 : Mapping 1024 pages to 0000:0000:7000:0000 ==
== >> SUCCESS ==

== Testcase 19 : Mapping 1025 pages to 0000:0000:7000:0000 ==
== >> SUCCESS ==

== Testcase 20 : Mapping 2048 pages to 0000:0000:7000:0000 ==
== >> SUCCESS ==

== Testcase 21 : Mapping 2051 pages to 0000:0000:7000:0000 ==
== >> SUCCESS ==

== Testcase 22 : Mapping 0 pages to 0000:0000:0000:4000 ==
== >> SUCCESS ==

== Testcase 23 : Mapping 1 pages to 0000:0000:0000:4000 ==
== >> SUCCESS ==

== Testcase 24 : Mapping 50 pages to 0000:0000:0000:4000 ==
== >> SUCCESS ==

== Testcase 25 : Mapping 1024 pages to 0000:0000:0000:4000 ==
== >> SUCCESS ==

== Testcase 26 : Mapping 1025 pages to 0000:0000:0000:4000 ==
== >> SUCCESS ==

== Testcase 27 : Mapping 2048 pages to 0000:0000:0000:4000 ==
== >> SUCCESS ==

== Testcase 28 : Mapping 2051 pages to 0000:0000:0000:4000 ==
== >> SUCCESS ==

== Testcase 29 : Mapping 0 pages to 0000:0000:0000:1234 ==
== >> SUCCESS ==

== Testcase 30 : Mapping 1 pages to 0000:0000:0000:1234 ==
== >> SUCCESS ==

== Testcase 31 : Mapping 50 pages to 0000:0000:0000:1234 ==
== >> SUCCESS ==

== Testcase 32 : Mapping 1024 pages to 0000:0000:0000:1234 ==
== >> SUCCESS ==

== Testcase 33 : Mapping 1025 pages to 0000:0000:0000:1234 ==
== >> SUCCESS ==

== Testcase 34 : Mapping 2048 pages to 0000:0000:0000:1234 ==
== >> SUCCESS ==

== Testcase 35 : Mapping 2051 pages to 0000:0000:0000:1234 ==
== >> SUCCESS ==

== Testcase 36 : Mapping 3 pages to 0000:0000:0000:0000 into pdir 8000:0000:013f:a520 ==
== >> SUCCESS ==

== Testcase 37 : Mapping 6 pages to 0000:0000:4000:0000 into pdir 8000:0000:013f:a520, separatly ==
== >> SUCCESS ==

---- Module "Paging" finished. Summary: ----
-- 37 testcases successfull --
-- 0 testcases failed --
----------------------------------

---- Starting with module 4 : "Process-Management" ----

== Testcase 1 : Cloning and destroying processes ==
Cloning process to pid=2
Destroying process
Cloning process to pid=3
Destroying process
Cloning process to pid=4
Destroying process
Cloning process to pid=5
Destroying process
Cloning process to pid=6
Destroying process
== >> SUCCESS ==

---- Module "Process-Management" finished. Summary: ----
-- 1 testcases successfull --
-- 0 testcases failed --
----------------------------------

---- Starting with module 5 : "Kernel-Heap" ----

== Testcase 1 : Allocate, then free in same direction ==
Allocating...(2433 free frames)
4 bytes
Write test for 0x13fa648...done
16 bytes
Write test for 0x13fa668...done
40 bytes
Write test for 0x13fa690...done
4092 bytes
Write test for 0x13fa6d0...done
4096 bytes
Write test for 0x40c010...done
4100 bytes
Write test for 0xc0c010...done
8192 bytes
Write test for 0xf2010...done
16388 bytes
Write test for 0xf6010...done
Freeing...
FREE1: address=0x13fa648, i=0
FREE1: address=0x13fa668, i=1
FREE1: address=0x13fa690, i=2
FREE1: address=0x13fa6d0, i=3
FREE1: address=0x40c010, i=4
FREE1: address=0xc0c010, i=5
FREE1: address=0xf2010, i=6
FREE1: address=0xf6010, i=7
== >> SUCCESS ==

== Testcase 2 : Allocate, then free in opposite direction ==
Allocating...(2426 free frames)
4 bytes
Write test for 0xf2010...done
16 bytes
Write test for 0xf2030...done
40 bytes
Write test for 0xf2058...done
4092 bytes
Write test for 0xf2098...done
4096 bytes
Write test for 0xf30b0...done
4100 bytes
Write test for 0xf40c8...done
8192 bytes
Write test for 0xf50e8...done
16388 bytes
Write test for 0xf7100...done
Freeing...
FREE2: address=0xf7100, i=7
FREE2: address=0xf50e8, i=6
FREE2: address=0xf40c8, i=5
FREE2: address=0xf30b0, i=4
FREE2: address=0xf2098, i=3
FREE2: address=0xf2058, i=2
FREE2: address=0xf2030, i=1
FREE2: address=0xf2010, i=0
== >> SUCCESS ==

== Testcase 3 : Allocate, then free in "random" direction 1 ==
Allocating...(2426 free frames)
4 bytes
Write test for 0xf2010...done
16 bytes
Write test for 0xf2030...done
40 bytes
Write test for 0xf2058...done
4092 bytes
Write test for 0xf2098...done
4096 bytes
Write test for 0xf30b0...done
4100 bytes
Write test for 0xf40c8...done
8192 bytes
Write test for 0xf50e8...done
16388 bytes
Write test for 0xf7100...done
Freeing...
FREE3: address=0xf7100, i=0
FREE3: address=0xf40c8, i=1
FREE3: address=0xf2058, i=2
FREE3: address=0xf2010, i=3
FREE3: address=0xf50e8, i=4
FREE3: address=0xf2098, i=5
FREE3: address=0xf30b0, i=6
FREE3: address=0xf2030, i=7
== >> SUCCESS ==

== Testcase 4 : Allocate, then free in "random" direction 2 ==
Allocating...(2426 free frames)
4 bytes
Write test for 0xf2010...done
16 bytes
Write test for 0xf2030...done
40 bytes
Write test for 0xf2058...done
4092 bytes
Write test for 0xf2098...done
4096 bytes
Write test for 0xf30b0...done
4100 bytes
Write test for 0xf40c8...done
8192 bytes
Write test for 0xf50e8...done
16388 bytes
Write test for 0xf7100...done
Freeing...
FREE4: address=0xf2098, i=0
FREE4: address=0xf30b0, i=1
FREE4: address=0xf2030, i=2
FREE4: address=0xf40c8, i=3
FREE4: address=0xf50e8, i=4
FREE4: address=0xf2010, i=5
FREE4: address=0xf7100, i=6
FREE4: address=0xf2058, i=7
== >> SUCCESS ==

== Testcase 5 : Allocate and free 4 bytes ==
Write test for 0xf2010...done
Freeing mem @ 0xf2010
== >> SUCCESS ==

== Testcase 6 : Allocate and free 16 bytes ==
Write test for 0xf2010...done
Freeing mem @ 0xf2010
== >> SUCCESS ==

== Testcase 7 : Allocate and free 40 bytes ==
Write test for 0xf2010...done
Freeing mem @ 0xf2010
== >> SUCCESS ==

== Testcase 8 : Allocate and free 4092 bytes ==
Write test for 0xf2010...done
Freeing mem @ 0xf2010
== >> SUCCESS ==

== Testcase 9 : Allocate and free 4096 bytes ==
Write test for 0xf2010...done
Freeing mem @ 0xf2010
== >> SUCCESS ==

== Testcase 10 : Allocate and free 4100 bytes ==
Write test for 0xf2010...done
Freeing mem @ 0xf2010
== >> SUCCESS ==

== Testcase 11 : Allocate and free 8192 bytes ==
Write test for 0xf2010...done
Freeing mem @ 0xf2010
== >> SUCCESS ==

== Testcase 12 : Allocate and free 16388 bytes ==
Write test for 0xf2010...done
Freeing mem @ 0xf2010
== >> SUCCESS ==

== Testcase 13 : Allocate 10000 times 1 byte ==
== >> SUCCESS ==

== Testcase 14 : Allocating 3 regions ==
Freeing region 2...
Reusing region 2...
Testing contents...
== >> SUCCESS ==

== Testcase 15 : Testing realloc() ==
== >> SUCCESS ==

---- Module "Kernel-Heap" finished. Summary: ----
-- 15 testcases successfull --
-- 0 testcases failed --
----------------------------------

---- Starting with module 6 : "Scheduling" ----

---- Module "Scheduling" finished. Summary: ----
-- 0 testcases successfull --
-- 0 testcases failed --
----------------------------------

---- Starting with module 7 : "String" ----

== Testcase 1 : Testing atoi() ==
== >> SUCCESS ==

== Testcase 2 : Testing atoll() ==
== >> SUCCESS ==

== Testcase 3 : Testing itoa() ==
== >> SUCCESS ==

== Testcase 4 : Testing memset() ==
== >> SUCCESS ==

== Testcase 5 : Testing memclear() ==
== >> SUCCESS ==

== Testcase 6 : Testing memchr() ==
== >> SUCCESS ==

== Testcase 7 : Testing memcpy() ==
== >> SUCCESS ==

== Testcase 8 : Testing memcmp() ==
== >> SUCCESS ==

== Testcase 9 : Testing memmove() ==
== >> SUCCESS ==

== Testcase 10 : Testing strcpy() ==
== >> SUCCESS ==

== Testcase 11 : Testing strncpy() ==
== >> SUCCESS ==

== Testcase 12 : Testing strtok() ==
== >> SUCCESS ==

== Testcase 13 : Testing strcat() ==
== >> SUCCESS ==

== Testcase 14 : Testing strnat() ==
== >> SUCCESS ==

== Testcase 15 : Testing strcmp() ==
== >> SUCCESS ==

== Testcase 16 : Testing strncmp() ==
== >> SUCCESS ==

== Testcase 17 : Testing strcasecmp() ==
== >> SUCCESS ==

== Testcase 18 : Testing strncasecmp() ==
== >> SUCCESS ==

== Testcase 19 : Testing strchr() ==
== >> SUCCESS ==

== Testcase 20 : Testing strchri() ==
== >> SUCCESS ==

== Testcase 21 : Testing strrchr() ==
== >> SUCCESS ==

== Testcase 22 : Testing strstr() ==
== >> SUCCESS ==

== Testcase 23 : Testing strspn() ==
== >> SUCCESS ==

== Testcase 24 : Testing strcspn() ==
== >> SUCCESS ==

== Testcase 25 : Testing strpbrk() ==
== >> SUCCESS ==

== Testcase 26 : Testing strcut() ==
== >> SUCCESS ==

== Testcase 27 : Testing strlen() ==
== >> SUCCESS ==

== Testcase 28 : Testing strnlen() ==
== >> SUCCESS ==

== Testcase 29 : Testing tolower() ==
== >> SUCCESS ==

== Testcase 30 : Testing toupper() ==
== >> SUCCESS ==

== Testcase 31 : Testing isalnumstr() ==
== >> SUCCESS ==

== Testcase 32 : Testing strmatch() ==
== >> SUCCESS ==

== Testcase 33 : Testing strtold() ==
== >> SUCCESS ==

== Testcase 34 : Testing strtol() ==
== >> SUCCESS ==

== Testcase 35 : Testing ecvt() ==
== >> SUCCESS ==

---- Module "String" finished. Summary: ----
-- 35 testcases successfull --
-- 0 testcases failed --
----------------------------------

---- Starting with module 8 : "VFS" ----

== Testcase 1 : Testing vfs_createDriver() ==
== >> SUCCESS ==

---- Module "VFS" finished. Summary: ----
-- 1 testcases successfull --
-- 0 testcases failed --
----------------------------------

---- Starting with module 9 : "VFSNode" ----

== Testcase 1 : Testing vfs_node_resolvePath() ==
== >> SUCCESS ==

== Testcase 2 : Testing vfs_node_getPath() ==
== >> SUCCESS ==

---- Module "VFSNode" finished. Summary: ----
-- 2 testcases successfull --
-- 0 testcases failed --
----------------------------------

---- Starting with module 10 : "Signals" ----

== Testcase 1 : Testing sig_canHandle() ==
== >> SUCCESS ==

== Testcase 2 : Testing sig_setHandler() ==
== >> SUCCESS ==

== Testcase 3 : Adding and handling a signal ==
== >> SUCCESS ==

== Testcase 4 : Adding nested signals ==
== >> SUCCESS ==

== Testcase 5 : Adding signal for process ==
== >> SUCCESS ==

== Testcase 6 : Testing sig_unsetHandler() ==
== >> SUCCESS ==

== Testcase 7 : Testing sig_removeHandlerFor() ==
== >> SUCCESS ==

---- Module "Signals" finished. Summary: ----
-- 7 testcases successfull --
-- 0 testcases failed --
----------------------------------

---- Starting with module 11 : "Ring buffer" ----

== Testcase 1 : Create & Destroy ==
== >> SUCCESS ==

== Testcase 2 : Write & Read ==
== >> SUCCESS ==

== Testcase 3 : Write & Read - Full RB_OVERWRITE ==
== >> SUCCESS ==

== Testcase 4 : Write & Read - Full RB_DEFAULT ==
== >> SUCCESS ==

== Testcase 5 : Move ==
== >> SUCCESS ==

---- Module "Ring buffer" finished. Summary: ----
-- 5 testcases successfull --
-- 0 testcases failed --
----------------------------------

---- Starting with module 12 : "Escape-Codes" ----

== Testcase 1 : Valid codes ==
== >> SUCCESS ==

== Testcase 2 : Invalid codes ==
== >> SUCCESS ==

== Testcase 3 : Incomplete codes ==
== >> SUCCESS ==

---- Module "Escape-Codes" finished. Summary: ----
-- 3 testcases successfull --
-- 0 testcases failed --
----------------------------------

---- Starting with module 13 : "SwapMap" ----

== Testcase 1 : Testing alloc & free ==
== >> SUCCESS ==

== Testcase 2 : Testing alloc & reverse free ==
== >> SUCCESS ==

== Testcase 3 : Testing alloc & free mixed ==
== >> SUCCESS ==

== Testcase 4 : Testing alloc all & free ==
== >> SUCCESS ==

---- Module "SwapMap" finished. Summary: ----
-- 4 testcases successfull --
-- 0 testcases failed --
----------------------------------

---- Starting with module 14 : "VMM Regions" ----

== Testcase 1 : Testing reg_create() & reg_destroy() ==
== >> SUCCESS ==

== Testcase 2 : Testing reg_addTo() & reg_remFrom() ==
== >> SUCCESS ==

== Testcase 3 : Testing reg_grow() ==
== >> SUCCESS ==

== Testcase 4 : Testing reg_clone() ==
== >> SUCCESS ==

---- Module "VMM Regions" finished. Summary: ----
-- 4 testcases successfull --
-- 0 testcases failed --
----------------------------------

---- Starting with module 15 : "Virtual Memory Manager" ----

== Testcase 1 : Testing vmm_add() and vmm_remove() ==
== >> SUCCESS ==

== Testcase 2 : Testing vmm_grow() ==
== >> SUCCESS ==

---- Module "Virtual Memory Manager" finished. Summary: ----
-- 2 testcases successfull --
-- 0 testcases failed --
----------------------------------

---- Starting with module 16 : "Shared memory" ----

== Testcase 1 : Testing shm_create() & shm_destroy() ==
== >> SUCCESS ==

== Testcase 2 : Testing shm_join() & shm_leave() & shm_remProc() ==
== >> SUCCESS ==

---- Module "Shared memory" finished. Summary: ----
-- 2 testcases successfull --
-- 0 testcases failed --
----------------------------------

---- Starting with module 17 : "HashMap" ----

== Testcase 1 : Testing basic functionality ==
== >> SUCCESS ==

== Testcase 2 : Testing remove ==
== >> SUCCESS ==

== Testcase 3 : Testing map iterator ==
0: 1
1: 34
2: 44
3: 12
4: 109
== >> SUCCESS ==

---- Module "HashMap" finished. Summary: ----
-- 3 testcases successfull --
-- 0 testcases failed --
----------------------------------

---- Starting with module 18 : "Single linked list" ----

== Testcase 1 : Append & check & remove index 0 ==
== >> SUCCESS ==

== Testcase 2 : Append & remove first (NULL) ==
== >> SUCCESS ==

== Testcase 3 : Append & remove first (x) ==
== >> SUCCESS ==

== Testcase 4 : Create & append & destroy ==
== >> SUCCESS ==

== Testcase 5 : Create & append & insert somewhere & destroy ==
== >> SUCCESS ==

== Testcase 6 : Create & append & set somewhere & destroy ==
== >> SUCCESS ==

== Testcase 7 : Append until no mem left & destroy ==
Appended 64501 elements
Freeing...done
== >> SUCCESS ==

== Testcase 8 : Walking through the list ==
Starting at index 0
element @ 0x12b4000 : 0x123
element @ 0x12b4010 : 0x456
element @ 0x12b4020 : 0x789
Starting at index 2
element @ 0x12b4020 : 0x789
== >> SUCCESS ==

== Testcase 9 : Testing sll_indexOf and sll_nodeWith ==
== >> SUCCESS ==

== Testcase 10 : Testing sll_clone ==
== >> SUCCESS ==

---- Module "Single linked list" finished. Summary: ----
-- 10 testcases successfull --
-- 0 testcases failed --
----------------------------------

====== All modules done ======
== 19 modules successfull ==
== 0 modules failed ==
== 144 testcases successfull ==
== 0 testcases failed ==
============================
