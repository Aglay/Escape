#
# $Id$
# Copyright (C) 2008 - 2009 Nils Asmussen
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
#

#include <esc/syscalls.h>

.section .text

.extern errno

#ifdef __i386__
#include "../arch/i586/syscalls.s"
#endif
#ifdef __eco32__
#include "../arch/eco32/syscalls.s"
#endif
#ifdef __mmix__
#include "../arch/mmix/syscalls.s"
#endif

#ifdef __mmix__

#else
# other
SYSC_RET_1ARGS_ERR getConf,SYSCALL_GETCONF
SYSC_VOID_1ARGS debugChar,SYSCALL_DEBUGCHAR
SYSC_VOID_0ARGS debug,SYSCALL_DEBUG

# driver
SYSC_RET_2ARGS_ERR regDriver,SYSCALL_REG
SYSC_RET_1ARGS_ERR getClientId,SYSCALL_GETCLIENTID
SYSC_RET_2ARGS_ERR getClient,SYSCALL_GETCLIENTPROC
SYSC_RET_7ARGS_ERR getWork,SYSCALL_GETWORK

# I/O
SYSC_RET_2ARGS_ERR open,SYSCALL_OPEN
SYSC_RET_2ARGS_ERR pipe,SYSCALL_PIPE
SYSC_RET_2ARGS_ERR stat,SYSCALL_STAT
SYSC_RET_2ARGS_ERR fstat,SYSCALL_FSTAT
SYSC_RET_2ARGS_ERR tell,SYSCALL_TELL
SYSC_RET_3ARGS_ERR fcntl,SYSCALL_FCNTL
SYSC_RET_3ARGS_ERR seek,SYSCALL_SEEK
SYSC_RET_3ARGS_ERR read,SYSCALL_READ
SYSC_RET_3ARGS_ERR write,SYSCALL_WRITE
SYSC_RET_1ARGS_ERR isterm,SYSCALL_ISTERM
SYSC_RET_4ARGS_ERR send,SYSCALL_SEND
SYSC_RET_4ARGS_ERR receive,SYSCALL_RECEIVE
SYSC_RET_1ARGS_ERR dupFd,SYSCALL_DUPFD
SYSC_RET_2ARGS_ERR redirFd,SYSCALL_REDIRFD
SYSC_RET_2ARGS_ERR link,SYSCALL_LINK
SYSC_RET_1ARGS_ERR unlink,SYSCALL_UNLINK
SYSC_RET_1ARGS_ERR mkdir,SYSCALL_MKDIR
SYSC_RET_1ARGS_ERR rmdir,SYSCALL_RMDIR
SYSC_RET_3ARGS_ERR mount,SYSCALL_MOUNT
SYSC_RET_1ARGS_ERR unmount,SYSCALL_UNMOUNT
SYSC_RET_0ARGS_ERR sync,SYSCALL_SYNC
SYSC_VOID_1ARGS close,SYSCALL_CLOSE

# memory
SYSC_RET_1ARGS_ERR _changeSize,SYSCALL_CHGSIZE
SYSC_RET_5ARGS_ERR _addRegion,SYSCALL_ADDREGION
SYSC_RET_2ARGS_ERR setRegProt,SYSCALL_SETREGPROT
SYSC_RET_2ARGS_ERR _mapPhysical,SYSCALL_MAPPHYS
SYSC_RET_2ARGS_ERR _createSharedMem,SYSCALL_CREATESHMEM
SYSC_RET_1ARGS_ERR _joinSharedMem,SYSCALL_JOINSHMEM
SYSC_RET_1ARGS_ERR leaveSharedMem,SYSCALL_LEAVESHMEM
SYSC_RET_1ARGS_ERR destroySharedMem,SYSCALL_DESTROYSHMEM

# process
SYSC_RET_0ARGS getpid,SYSCALL_PID
SYSC_RET_1ARGS_ERR getppidof,SYSCALL_PPID
SYSC_RET_0ARGS_ERR fork,SYSCALL_FORK
SYSC_RET_2ARGS_ERR exec,SYSCALL_EXEC
SYSC_RET_1ARGS_ERR waitChild,SYSCALL_WAITCHILD
SYSC_RET_3ARGS_ERR getenvito,SYSCALL_GETENVITO
SYSC_RET_3ARGS_ERR getenvto,SYSCALL_GETENVTO
SYSC_RET_2ARGS_ERR setenv,SYSCALL_SETENV

# signals
SYSC_RET_2ARGS_ERR setSigHandler,SYSCALL_SETSIGH
SYSC_RET_3ARGS_ERR sendSignalTo,SYSCALL_SENDSIG

# thread
SYSC_RET_0ARGS gettid,SYSCALL_GETTID
SYSC_RET_0ARGS getThreadCount,SYSCALL_GETTHREADCNT
SYSC_RET_2ARGS_ERR startThread,SYSCALL_STARTTHREAD
SYSC_VOID_1ARGS _exit,SYSCALL_EXIT
SYSC_RET_0ARGS getCycles,SYSCALL_GETCYCLES
SYSC_VOID_0ARGS yield,SYSCALL_YIELD
SYSC_RET_1ARGS_ERR sleep,SYSCALL_SLEEP
SYSC_RET_2ARGS_ERR waitm,SYSCALL_WAIT
SYSC_RET_4ARGS_ERR _waitUnlock,SYSCALL_WAITUNLOCK
SYSC_RET_2ARGS_ERR notify,SYSCALL_NOTIFY
SYSC_RET_3ARGS_ERR _lock,SYSCALL_LOCK
SYSC_RET_2ARGS_ERR _unlock,SYSCALL_UNLOCK
SYSC_RET_1ARGS_ERR join,SYSCALL_JOIN
SYSC_RET_1ARGS_ERR suspend,SYSCALL_SUSPEND
SYSC_RET_1ARGS_ERR resume,SYSCALL_RESUME
#endif
