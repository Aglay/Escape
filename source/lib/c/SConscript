# -*- Mode: Python -*-

Import('env')

acsrc = [env.Glob('arch/$ARCH/*.c')]
assrc = [f for f in env.Glob('arch/$ARCH/*.S') if 'crt' not in str(f)]
assrc += [env.Glob('esc/*.S')]
csrc = [env.Glob('*.c'), env.Glob('*/*.c'), env.Glob('basic/*/*.c'), env.Glob('esc/*/*.c')]
baseacsrc = [env.Glob('basic/arch/$ARCH/*.c')]
baseassrc = [env.Glob('basic/arch/$ARCH/*.S')]

# static library
stenv = env.Clone()
crt0 = stenv.Object('crt0.o', 'arch/$ARCH/crt0.S')
crt1 = stenv.Object('crt1.o', 'arch/$ARCH/crt1.S')
crtn = stenv.Object('crtn.o', 'arch/$ARCH/crtn.S')
stenv.Install('$SYSGCCLIBPATH', [crt0, crt1, crtn])

stlib = stenv.StaticLibrary(
	target = 'c',
	source = acsrc + assrc + csrc + baseacsrc + baseassrc
)
env.Install('$BINDIR', stlib)

# shared library
if env['ARCH'] == 'i586':
	shenv = env.Clone()
	shenv.Append(
		CPPFLAGS = ' -DSHAREDLIB=1',
		ASFLAGS = ' -DSHAREDLIB=1',
		LINKFLAGS = ' -nodefaultlibs -Wl,-shared -Wl,-soname,libc.so'
	)
	crt0 = shenv.Object('crt0S.o', 'arch/$ARCH/crt0.S')
	crt1 = shenv.Object('crt1S.o', 'arch/$ARCH/crt1.S')
	crtn = shenv.Object('crtnS.o', 'arch/$ARCH/crtn.S')
	shenv.Install('$SYSGCCLIBPATH', [crt0, crt1, crtn])

	shlib = shenv.SharedLibrary(
		target = 'c',
		source = acsrc + assrc + csrc + baseacsrc + baseassrc
	)
	env.Install('$BINDIR', shlib)
	env.Install('$DISTDIR/lib', shlib)
	env.EscapeMap('libc.map', shlib)
