vfs:
	consists of:
		- files
		- directories
		- channels
		
	listener-concept:
		you can wait for:
			- file-changed
			- client that wants to be served
			- file that received a message (driver-channel)
			- file that has readable data (driver-channel)
	
	universal wait-syscall:
		#define EV_FILE_CHANGED		1
		#define EV_CLIENT			2
		#define EV_RECEIVED_MSG		4
		#define EV_DATA_READABLE	8
		
		#define WAIT_OBJECT			0
		#define WAIT_FILE			1
		
		typedef struct {
			u16 type;
			u16 events;
			void *object;
		} sWaitObject;
		
		wait(sWaitObject *objects,u32 objCount);
		
		example:
		sWaitObject wo;
		wo.type = WAIT_FILE;
		wo.events = EV_CHANGED;
		wo.object = fd;
		wait(&wo,1);
